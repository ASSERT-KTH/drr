/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 09:29:17 GMT 2019
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.math.util.MathUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MathUtils_ESTest extends MathUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 269 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 80. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 81. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 84. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 85. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 86. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 87. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 88. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 89. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 92. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 93. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 2907: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> >
   * Goal 95. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 96. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 97. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 98. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 99. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 100. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 101. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 103. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 104. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 105. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 106. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 107. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 108. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 109. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 110. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 111. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 112. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 113. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 114. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 115. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 116. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 117. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 118. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 119. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 120. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 121. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 122. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 123. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 124. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 125. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 126. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 127. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 128. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 129. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 130. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 131. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 132. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 133. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 134. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 135. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 136. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 137. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 138. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 139. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 140. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 141. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 142. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 143. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 144. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 145. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 146. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 147. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 148. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 149. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 150. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 151. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 152. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 153. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 154. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 155. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 156. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 157. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 158. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 159. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 160. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 161. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 162. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 163. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 164. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 165. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 166. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 167. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 168. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 169. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 170. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 171. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 172. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 173. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 174. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 175. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 176. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 177. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 178. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 179. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 180. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 181. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 182. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 183. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 184. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 185. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 186. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 187. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 188. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 189. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 190. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 191. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 192. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 193. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 194. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 195. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 196. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 197. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 198. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 199. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 200. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 201. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 202. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 203. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 204. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 205. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   * Goal 206. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   * Goal 207. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 208. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 209. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 210. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 211. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 212. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 213. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 214. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 215. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 216. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 217. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 218. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 219. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 220. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 221. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 222. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 223. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 224. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 225. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 226. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 227. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 228. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 241. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 242. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 243. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 244. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 245. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 246. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 247. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 248. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 249. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 252. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 253. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 254. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 255. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 256. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 257. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 258. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 259. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 260. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 261. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 262. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 263. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 264. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 265. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 266. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 267. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 268. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 269. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   */

  @Test
  public void test000()  throws Throwable  {
      long long0 = MathUtils.pow(206L, 206L);
      long long1 = MathUtils.lcm(0L, 0L);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 206L, (double) 206L, 2619.1369358263);
      int int0 = MathUtils.addAndCheck(0, 0);
      long long2 = MathUtils.pow((-293L), 0);
      short short0 = MathUtils.sign((short)243);
      int int1 = MathUtils.compareTo((-516.58), 0L, 1L);
      int int2 = MathUtils.pow((int) (short)243, (long) (short)243);
      long long3 = MathUtils.lcm((-393L), (long) (-1018275925));
      int[] intArray0 = new int[0];
      int int3 = MathUtils.distance1(intArray0, intArray0);
      int int4 = MathUtils.gcd((-1), (-2819));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-516.58);
      doubleArray0[1] = (double) (short)243;
      doubleArray0[2] = 401.2;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) (-1018275925);
      doubleArray0[5] = (-1.018275925E9);
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) (-1018275925);
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 1
  /*
   * 100 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 27. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 28. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 29. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 30. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 31. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 36. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 39. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 40. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 46. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 48. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 51. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 52. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 56. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 57. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 60. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 62. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 63. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 64. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 65. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 66. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 67. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 68. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 69. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 70. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 71. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 72. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 73. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 74. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 75. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 76. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 77. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 78. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 79. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 80. Weak Mutation 1962: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1032 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 1949: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> -2
   * Goal 82. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 83. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 84. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 85. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 87. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 88. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 100. mulAndCheck(II)I_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test001()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1632.52004;
      doubleArray0[1] = 1565.0969852;
      doubleArray0[2] = 1994.0997120379;
      doubleArray0[3] = (-169.9070540241);
      doubleArray0[4] = 1848.6598;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 5030.28955293;
      doubleArray0[7] = 1797.973495;
      doubleArray0[8] = (-98.3);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      int int0 = MathUtils.pow((-563), 177L);
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck((-563), 1262793101);
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 2
  /*
   * 169 covered goals:
   * Goal 1. distance([D[D)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 49. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 50. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 51. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 52. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 53. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 57. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 58. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 59. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 61. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 62. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 64. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 65. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 66. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 67. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 68. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 69. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 71. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 72. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 73. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 74. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 75. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 76. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 77. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 78. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 79. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 80. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 81. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 82. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 83. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 84. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 85. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 87. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 88. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 89. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 90. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 91. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 92. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 93. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 94. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 95. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 96. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 97. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 98. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 99. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 100. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 101. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 102. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 103. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 104. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 105. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 106. Weak Mutation 2545: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> >
   * Goal 107. Weak Mutation 2555: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> ==
   * Goal 108. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 109. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 110. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 111. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 112. Weak Mutation 3256: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> +
   * Goal 113. Weak Mutation 3258: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> -
   * Goal 114. Weak Mutation 3261: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> -
   * Goal 115. Weak Mutation 3262: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> *
   * Goal 116. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 117. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 118. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 119. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 120. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 121. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   * Goal 122. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 123. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 124. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 125. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 126. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 127. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 128. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 129. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 130. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 131. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 132. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 133. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 134. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   */

  @Test
  public void test002()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(3201);
      double double1 = MathUtils.sign((-2393.54318969));
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      long long0 = MathUtils.gcd((long) 3201, (long) 3201);
      int int0 = MathUtils.gcd(85, 3201);
      long long1 = MathUtils.lcm((long) 3201, (long) 1);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray1 = MathUtils.OrderDirection.values();
      double double2 = MathUtils.scalb(3201L, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 3201;
      doubleArray0[1] = 0.9999997615814209;
      doubleArray0[2] = (double) 3201L;
      doubleArray0[3] = (-2393.54318969);
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = (-1.0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 6402.0;
      doubleArray1[1] = 6402.0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (-1.0);
      doubleArray1[4] = (double) 3201;
      doubleArray1[5] = (double) 1;
      // Undeclared exception!
      try { 
        MathUtils.distance(doubleArray0, doubleArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 3
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:positive
   * Goal 11. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 12. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 13. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 15. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 18. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 19. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 20. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 22. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 23. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 24. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 27. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 28. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 29. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 31. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 33. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 34. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 36. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 37. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   */

  @Test
  public void test003()  throws Throwable  {
      short short0 = MathUtils.indicator((short)14);
      double double0 = MathUtils.factorialDouble(228);
      int[] intArray0 = new int[2];
      intArray0[0] = 228;
      intArray0[1] = 228;
      int[] intArray1 = new int[8];
      intArray1[0] = (int) (short)1;
      intArray1[1] = (int) (short)14;
      intArray1[2] = 228;
      intArray1[3] = 228;
      intArray1[4] = (int) (short)1;
      intArray1[5] = (int) (short)1;
      intArray1[6] = 228;
      intArray1[7] = (int) (short)14;
      int int0 = MathUtils.distanceInf(intArray0, intArray1);
      byte[] byteArray0 = new byte[0];
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger(byteArray0);
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 4
  /*
   * 238 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 63. Weak Mutation 1215: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> <
   * Goal 64. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 65. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 66. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 67. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 68. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 69. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 70. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 71. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 72. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 73. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 74. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 75. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 76. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 77. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 78. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 79. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 80. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 81. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 84. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 85. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 86. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 87. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 88. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 89. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 92. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 93. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 95. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 96. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 97. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 98. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 99. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 100. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 101. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 102. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 103. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 104. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 105. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 106. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 107. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 108. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 109. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 110. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 111. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 112. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 113. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 114. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 115. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 116. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 117. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 118. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 119. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 120. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 121. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 122. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 123. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 124. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 125. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 126. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 127. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 128. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 129. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 130. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 131. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 132. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 133. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 134. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 135. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 136. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 137. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 138. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 139. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 140. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 141. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 142. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 143. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 144. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 145. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 146. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 147. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 148. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 149. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 150. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 151. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 152. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 153. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 154. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 155. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 156. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 157. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 158. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 159. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 160. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 161. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 162. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 163. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 164. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 165. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 166. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 167. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 168. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 169. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 170. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 171. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 172. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 173. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 174. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 175. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 176. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 177. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 178. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 179. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 180. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 181. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 182. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 183. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 184. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 185. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 186. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 187. org.apache.commons.math.util.MathUtils.pow(IJ)I:zero
   * Goal 188. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 189. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 190. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   * Goal 191. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 192. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 193. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 194. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 195. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 196. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 197. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 198. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 199. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 200. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 201. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 202. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 203. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 204. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 205. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 206. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 207. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 208. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 209. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 210. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 211. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 212. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 213. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 214. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 215. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   */

  @Test
  public void test004()  throws Throwable  {
      long long0 = MathUtils.pow(206L, 206L);
      long long1 = MathUtils.lcm(0L, 0L);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 206L, (double) 206L, 2619.1369358263);
      int int0 = MathUtils.addAndCheck(0, 508);
      long long2 = MathUtils.pow((-293L), 508);
      short short0 = MathUtils.sign((short)243);
      int int1 = MathUtils.compareTo((-516.58), 0L, 3048454481052245009L);
      int int2 = MathUtils.pow((int) (short)243, (long) (short)243);
      long long3 = MathUtils.lcm((-417L), (long) (-1018275925));
      int[] intArray0 = new int[0];
      int int3 = MathUtils.distance1(intArray0, intArray0);
      int int4 = MathUtils.pow(0, 932L);
      long long4 = MathUtils.factorial(20);
  }

  //Test case number: 5
  /*
   * 174 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 42. Weak Mutation 2114: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> ^
   * Goal 43. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 45. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 51. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 52. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 55. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 56. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 57. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 61. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 62. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 64. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 65. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 66. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 68. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 70. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 71. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 72. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 73. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 74. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 75. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 76. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 77. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 78. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 79. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 80. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 81. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 82. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 83. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 84. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 86. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 87. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 88. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 89. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 90. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 91. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 92. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 93. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 94. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 95. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 96. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 97. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 99. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 100. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 101. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 102. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 103. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 104. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 105. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 107. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 108. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 109. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 110. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 111. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 112. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 113. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 114. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 115. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 116. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 117. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 118. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 119. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 120. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 121. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 122. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 123. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 124. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 125. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 126. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 127. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 128. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 129. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 130. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 131. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 132. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 133. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 134. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 135. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 136. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 137. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 138. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 139. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 140. Weak Mutation 636: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> -1
   * Goal 141. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 142. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 143. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 144. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 145. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 146. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 147. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 148. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 149. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 150. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 151. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 152. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 153. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 154. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   */

  @Test
  public void test005()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-24.847);
      doubleArray0[1] = (-24.847);
      doubleArray0[3] = 2198.801;
      doubleArray0[4] = 1.1102230246251565E-16;
      doubleArray0[5] = 2311.823893;
      doubleArray0[6] = 0.0;
      double double0 = MathUtils.SAFE_MIN;
      double double1 = MathUtils.binomialCoefficientLog(242, 15);
      float float0 = MathUtils.sign((float) 15);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      double double2 = MathUtils.scalb(2.2250738585072014E-308, (-2147473858));
      double double3 = MathUtils.scalb((-24.847), (-2147473858));
  }

  //Test case number: 6
  /*
   * 69 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 19. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 20. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 21. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 22. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 23. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 24. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 25. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 27. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 28. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 29. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 30. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 31. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 32. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 33. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 34. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 35. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 40. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 41. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 42. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 43. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 44. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 46. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 3212: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> -
   * Goal 48. Weak Mutation 3213: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> *
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 50. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 68. distance1([I[I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   */

  @Test
  public void test006()  throws Throwable  {
      long long0 = MathUtils.gcd(121645100408832000L, 1266L);
      Random.setNextRandom(2716);
      int[] intArray0 = new int[7];
      intArray0[0] = 2716;
      intArray0[1] = (-1384);
      intArray0[2] = (-519);
      intArray0[3] = 2716;
      intArray0[4] = 2716;
      intArray0[5] = 2716;
      intArray0[6] = 2716;
      int[] intArray1 = new int[5];
      intArray1[0] = (-1384);
      intArray1[1] = 2716;
      intArray1[2] = (-1384);
      intArray1[3] = 2716;
      intArray1[4] = (-1384);
      // Undeclared exception!
      try { 
        MathUtils.distance1(intArray0, intArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 7
  /*
   * 74 covered goals:
   * Goal 1. distance1([D[D)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 22. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 26. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 27. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 28. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 30. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 31. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 37. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 38. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 40. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 41. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 42. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 43. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 44. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 46. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 52. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 53. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 54. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 55. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 3176: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 3177: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 64. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 65. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 66. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 67. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   */

  @Test
  public void test007()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1632.52004;
      doubleArray0[1] = 822.8208488;
      doubleArray0[2] = 1994.0997120379;
      doubleArray0[3] = (-169.9070540241);
      doubleArray0[4] = 1848.6598;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 5030.28955293;
      doubleArray0[7] = 1797.973495;
      doubleArray0[8] = (-98.3);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1797.973495;
      doubleArray1[1] = 1632.52004;
      doubleArray1[2] = 1848.6598;
      doubleArray1[3] = (-98.3);
      doubleArray1[4] = 1848.6598;
      doubleArray1[5] = 1632.52004;
      doubleArray1[6] = 1848.6598;
      // Undeclared exception!
      try { 
        MathUtils.distance1(doubleArray0, doubleArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 8
  /*
   * 105 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true
   * Goal 30. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 36. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 38. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 40. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 41. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 42. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 43. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 44. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 1802: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> -2
   * Goal 47. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 50. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 53. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 54. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 55. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 56. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 57. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 58. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 59. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 60. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 61. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 62. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 63. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 64. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 65. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 66. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 68. Weak Mutation 569: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> -2
   * Goal 69. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 70. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 71. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 72. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 73. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 74. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 75. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 76. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 77. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 78. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 79. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 80. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 81. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 82. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 83. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 84. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 85. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 86. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 87. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 89. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 102. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I7 Branch 42 IFNE L429 - false
   * Goal 103. Weak Mutation 888: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator != -> ==
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I7 Branch 42 IFNE L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   */

  @Test
  public void test008()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(4, 4);
      boolean boolean0 = MathUtils.equalsIncludingNaN(2.384185791015625E-7, 2.384185791015625E-7, 2.384185791015625E-7);
      float float0 = MathUtils.sign((-3020.258F));
      int int0 = MathUtils.compareTo(1.494140625, 0.0, 0.07490822288864472);
      double[] doubleArray0 = new double[0];
      double double1 = MathUtils.distance1(doubleArray0, doubleArray0);
      int int1 = MathUtils.compareTo(4, 2.2250738585072014E-308, 1.1102230246251565E-16);
      int int2 = MathUtils.lcm(0, 4);
      boolean boolean1 = MathUtils.equalsIncludingNaN(Double.NaN, (-249.504306));
  }

  //Test case number: 9
  /*
   * 95 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 26. Weak Mutation 1176: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> <=
   * Goal 27. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 29. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 30. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 31. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 33. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 34. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 35. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 37. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 39. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 41. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 42. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 44. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 45. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 46. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 47. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 48. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 50. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 51. Weak Mutation 1717: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> -2
   * Goal 52. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   * Goal 53. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 54. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   * Goal 55. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 56. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 57. org.apache.commons.math.util.MathUtils.indicator(B)B:negative
   * Goal 58. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   * Goal 59. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 60. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 62. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 63. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 64. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 65. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 66. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 67. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 68. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 69. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 70. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 71. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 72. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   */

  @Test
  public void test009()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)85);
      double double0 = MathUtils.indicator((double) (byte)1);
      byte byte1 = MathUtils.indicator((byte) (-33));
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (byte)1;
      doubleArray0[1] = (double) (byte)85;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      int int0 = MathUtils.sign(40);
      double double1 = MathUtils.safeNorm(doubleArray0);
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 3.834E-20;
      doubleArray1[1] = (double) (byte)85;
      doubleArray1[2] = 2.2250738585072014E-308;
      doubleArray1[3] = (double) 40;
      doubleArray1[4] = 1.0;
      doubleArray1[5] = (double) 40;
      boolean boolean2 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray1);
  }

  //Test case number: 10
  /*
   * 95 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 13. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 16. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 18. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 19. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 20. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 22. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 23. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 24. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 25. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 26. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 27. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 28. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 29. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 30. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 31. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 32. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 33. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 34. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 35. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 36. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 37. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 39. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 40. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 41. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 42. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 43. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 44. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 45. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 46. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 47. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 48. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 49. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 50. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 51. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 53. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 54. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 55. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 56. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 61. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 66. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 67. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 68. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 69. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 70. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 72. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 73. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 74. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 75. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 76. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 77. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 78. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 79. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 80. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 81. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 94. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 95. Weak Mutation 1000: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> !=
   */

  @Test
  public void test010()  throws Throwable  {
      long long0 = MathUtils.indicator(9193070505571053912L);
      double double0 = MathUtils.normalizeAngle(0.0, 9193070505571053912L);
      long long1 = MathUtils.pow(9193070505571053912L, 1349L);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 9193070505571053912L;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 1L;
      doubleArray0[3] = (double) 0L;
      doubleArray0[4] = (double) 1L;
      doubleArray0[5] = (double) 0L;
      doubleArray0[6] = 9.1930705055710536E18;
      double double1 = MathUtils.distance1(doubleArray0, doubleArray0);
      double double2 = MathUtils.indicator(0.0);
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN((-4094.29), (-4094.29), Integer.MAX_VALUE);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 11
  /*
   * 67 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 14. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 15. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 17. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 18. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 19. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 20. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 21. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 22. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 23. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 24. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 25. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 26. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 27. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 28. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 29. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 31. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 32. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 36. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 40. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 42. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 43. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 44. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 46. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 47. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 48. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 49. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 50. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 51. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 52. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 53. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 54. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 55. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 67. mulAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test011()  throws Throwable  {
      int int0 = MathUtils.subAndCheck((-1459), (-1459));
      long long0 = MathUtils.pow(2751L, 63);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 2751L;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-3354.42443);
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck(1800L, 7985046669871355199L);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 12
  /*
   * 93 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 234
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 18. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 19. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 20. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 24. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 25. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 26. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 27. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 28. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 29. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 30. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 31. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 32. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 33. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 34. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 36. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 37. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 40. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 41. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 42. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 43. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 44. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 45. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 46. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 47. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 48. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 49. Weak Mutation 1569: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> >=
   * Goal 50. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 51. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 54. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 55. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 57. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 58. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 59. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 61. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 78. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I110 Branch 16 IF_ICMPGT L223 - true
   * Goal 80. Weak Mutation 323: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> !=
   * Goal 81. Weak Mutation 334: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 335: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 336: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 337: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 339: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator + -> %
   * Goal 86. Weak Mutation 340: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator + -> -
   * Goal 87. Weak Mutation 341: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator + -> *
   * Goal 88. Weak Mutation 342: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:222 - ReplaceArithmeticOperator + -> /
   * Goal 89. Weak Mutation 357: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:223 - ReplaceComparisonOperator > -> -2
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I110 Branch 16 IF_ICMPGT L223 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 92. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 222
   * Goal 93. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 223
   */

  @Test
  public void test012()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-125));
      long long0 = MathUtils.gcd((long) (byte) (-125), 0L);
      long long1 = MathUtils.binomialCoefficient(63, (byte) (-125));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.5;
      doubleArray0[2] = (double) (byte) (-1);
      doubleArray0[3] = (double) (byte) (-125);
      doubleArray0[4] = (double) 125L;
      doubleArray0[5] = (double) (byte) (-1);
      doubleArray0[6] = 0.5;
      doubleArray0[7] = (double) (byte) (-1);
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
  }

  //Test case number: 13
  /*
   * 273 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 3. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 5. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 9. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 15. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 18. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 20. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 26. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 29. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 30. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 31. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 32. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 33. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 34. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 35. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 36. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 37. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 38. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 39. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 40. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 988
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 42. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 44. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 45. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 47. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 48. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 49. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 50. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 53. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 54. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 55. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 57. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 58. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 59. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 624
   * Goal 60. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 62. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 63. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 64. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1530
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 67. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 68. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 69. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 70. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 71. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 76. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 78. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 79. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 82. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 85. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 86. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 87. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 88. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 89. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 90. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 91. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 92. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 93. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 94. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 95. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 96. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 97. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 98. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 99. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 100. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 101. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 102. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 103. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 104. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 105. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 106. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 107. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 108. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 109. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 110. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 111. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 112. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 113. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 114. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 115. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 116. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 117. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 118. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 119. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 120. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 121. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 122. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 123. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 124. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 125. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 126. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 127. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 128. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 129. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 130. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 131. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 132. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 133. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 134. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 135. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 136. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 137. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 138. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 139. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 140. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 141. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 142. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 143. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 144. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 145. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 146. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 147. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 148. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 149. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 150. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 151. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 152. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 153. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 154. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 155. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 156. Weak Mutation 1227: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> >
   * Goal 157. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 158. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 159. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 160. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 161. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 162. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 163. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 164. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 165. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 166. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 167. Weak Mutation 1581: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> <
   * Goal 168. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 169. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 170. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 171. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 172. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 173. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 174. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 175. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 176. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 177. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 178. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 179. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 180. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 181. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 182. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 183. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 184. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 185. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 186. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 187. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 188. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 189. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 190. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 191. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 192. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 193. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 194. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 195. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 196. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 197. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 198. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 199. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 200. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 201. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 202. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 203. Weak Mutation 1606: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> -
   * Goal 204. Weak Mutation 1607: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> *
   * Goal 205. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 206. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 207. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 208. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 209. org.apache.commons.math.util.MathUtils.pow(II)I:zero
   * Goal 210. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 211. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 212. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 213. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 214. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 215. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 216. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 217. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 218. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 219. org.apache.commons.math.util.MathUtils.gcd(II)I:zero
   * Goal 220. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 221. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 222. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 223. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 224. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 225. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 226. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 227. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 228. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 229. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 230. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 231. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 232. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 233. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 234. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 235. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 236. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 237. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 238. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 239. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 240. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 241. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 242. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 243. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 244. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 245. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 246. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 247. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 248. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 249. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 252. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 253. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 254. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 255. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 256. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 257. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 258. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 259. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 260. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 261. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 262. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 263. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 264. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 265. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 266. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 267. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 268. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 269. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 270. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 271. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 272. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 273. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   */

  @Test
  public void test013()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      long long0 = MathUtils.lcm(0L, (long) 0);
      int int1 = MathUtils.gcd(0, 0);
      long long1 = MathUtils.gcd((long) 0, (-3183605296591799669L));
      long long2 = MathUtils.addAndCheck((long) 0, 749L);
      double double0 = MathUtils.distance(intArray0, intArray0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (-3183605296591799669L);
      doubleArray0[1] = (double) 749L;
      double double1 = MathUtils.distance(doubleArray0, doubleArray0);
      int int2 = MathUtils.addAndCheck(61, 0);
      short short0 = MathUtils.indicator((short)16);
      double double2 = MathUtils.sinh(749L);
      long long3 = MathUtils.subAndCheck((long) (short)16, 458L);
      double double3 = MathUtils.sinh(61);
      double double4 = MathUtils.factorialDouble(0);
      int int3 = MathUtils.compareTo(157.12481, (-442L), 0.0);
      int int4 = MathUtils.pow(0, 373);
  }

  //Test case number: 14
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1692
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1229
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1230
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1231
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false
   * Goal 10. Weak Mutation 3108: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> -1
   * Goal 11. Weak Mutation 2295: org.apache.commons.math.util.MathUtils.round(DII)D:1230 - ReplaceComparisonOperator == -> !=
   * Goal 12. org.apache.commons.math.util.MathUtils.round(DI)D:negative
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 14. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 15. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 18. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 19. org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - false
   */

  @Test
  public void test014()  throws Throwable  {
      double double0 = MathUtils.round(Double.NEGATIVE_INFINITY, (-3075));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-17);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-10,695,794,604,637,969^-10,695,794,604,637,969)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - false
   * Goal 4. Weak Mutation 1225: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> -1
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 6. factorialDouble(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialDouble((-1748));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,748
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 16
  /*
   * 101 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 52. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 56. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 57. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 58. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 59. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 60. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 61. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 62. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 63. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 65. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 66. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 68. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 69. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 70. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 71. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 72. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 73. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 74. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 75. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 76. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 77. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 78. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 79. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 80. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 82. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 83. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 84. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 85. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 100. Weak Mutation 980: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> !=
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   */

  @Test
  public void test016()  throws Throwable  {
      long long0 = MathUtils.gcd((-2199L), (-2212L));
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, (double) (-2212L), Double.NaN);
  }

  //Test case number: 17
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1845
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1846
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 24. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 26. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 3447: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 3448: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> ==
   * Goal 31. Weak Mutation 3449: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> <
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 33. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 35. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 47. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   */

  @Test
  public void test017()  throws Throwable  {
      long long0 = MathUtils.sign(2523L);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2523L;
      doubleArray0[1] = (double) 1L;
      doubleArray0[2] = (double) 1L;
      doubleArray0[3] = (double) 2523L;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 2 and 3 are not decreasing (1 < 2,523)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 18
  /*
   * 119 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1190
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - false
   * Goal 23. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 1214: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> -1
   * Goal 25. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.factorial(I)J:591 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 30. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 31. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 32. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 33. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 34. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 35. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 36. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 37. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 38. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 39. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 40. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 41. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 42. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 43. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 44. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 47. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 48. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 50. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 52. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 53. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 54. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 55. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 57. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 58. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 59. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 61. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 62. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 63. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 64. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 67. Weak Mutation 3256: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> +
   * Goal 68. Weak Mutation 3258: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> -
   * Goal 69. Weak Mutation 3261: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> -
   * Goal 70. Weak Mutation 3262: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> *
   * Goal 71. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 73. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 74. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 75. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 76. org.apache.commons.math.util.MathUtils.distance([D[D)D:positive
   * Goal 77. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 78. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 79. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 80. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 81. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 82. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 83. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 84. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 85. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 87. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 88. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 89. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 111. factorial(I)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 112. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - false
   * Goal 113. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - true
   * Goal 114. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - false
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 118. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1408
   * Goal 119. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 878
   */

  @Test
  public void test018()  throws Throwable  {
      float float0 = MathUtils.sign(Float.NaN);
      long long0 = MathUtils.pow(748L, 748L);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) Float.NaN;
      doubleArray0[1] = (double) 748L;
      doubleArray0[2] = (double) Float.NaN;
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-2616.4043295176));
      double double1 = MathUtils.indicator((double) Float.NaN);
      int int0 = MathUtils.hash(doubleArray0);
      // Undeclared exception!
      try { 
        MathUtils.factorial(2715);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 19
  /*
   * 41 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1587
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1588
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1589
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1590
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 12. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 16. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 17. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 18. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 19. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 20. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 21. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 22. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 23. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 24. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 25. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 26. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 27. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 28. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 30. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 33. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 41. org.apache.commons.math.util.MathUtils.pow(JI)J:zero
   */

  @Test
  public void test019()  throws Throwable  {
      long long0 = MathUtils.pow(9218868437227405312L, 249);
      float float0 = MathUtils.indicator(0.0F);
  }

  //Test case number: 20
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 5. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 7. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 11. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 12. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 13. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 14. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 15. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 16. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 17. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 19. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I:zero
   */

  @Test
  public void test020()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 3.141592653589793;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1270.14325636);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-3859.945);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-496.56729873);
      int int0 = MathUtils.hash(doubleArray0);
      int int1 = MathUtils.gcd(0, 0);
  }

  //Test case number: 21
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 6. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 11. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 13. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 17. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 18. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 29. distance([I[I)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 30. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 37. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 39. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 40. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 41. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 42. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 43. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 44. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 45. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 47. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 49. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 50. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 51. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 52. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 53. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 54. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 55. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 56. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 60. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 61. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 62. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 63. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 65. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 66. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 68. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 69. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 70. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 71. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 72. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 73. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 74. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 75. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 85. Weak Mutation 3305: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> +
   * Goal 86. Weak Mutation 3307: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> -
   * Goal 87. Weak Mutation 3310: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> -
   * Goal 88. Weak Mutation 3311: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> *
   */

  @Test
  public void test021()  throws Throwable  {
      double double0 = MathUtils.scalb((-2098.944), 917);
      long long0 = MathUtils.pow(242L, (long) 917);
      int[] intArray0 = new int[6];
      intArray0[0] = 917;
      intArray0[1] = 917;
      intArray0[2] = 917;
      intArray0[3] = 917;
      intArray0[4] = 917;
      intArray0[5] = 0;
      int[] intArray1 = new int[4];
      intArray1[0] = 4194304;
      intArray1[1] = 0;
      intArray1[2] = 917;
      intArray1[3] = 21;
      // Undeclared exception!
      try { 
        MathUtils.distance(intArray0, intArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 22
  /*
   * 70 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 25. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 30. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 32. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 35. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 39. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 40. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 42. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 43. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 44. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 45. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 46. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 51. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 52. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 53. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 54. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   * Goal 55. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   * Goal 56. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 57. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 58. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 59. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 60. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 62. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 63. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   */

  @Test
  public void test022()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN((-2554.0975544), (-2554.0975544));
      int[] intArray0 = new int[0];
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      double double0 = MathUtils.sign(3641.386029202);
      int int1 = MathUtils.indicator((-2331));
  }

  //Test case number: 23
  /*
   * 188 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1344
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1345
   * Goal 3. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 5. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 16. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 17. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 18. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 19. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 20. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 21. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 27. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 31. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 32. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 34. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 35. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 36. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 37. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 38. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 40. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 41. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 42. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 44. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 45. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 72. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 75. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 80. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 81. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 82. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 83. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 84. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 85. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 86. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 87. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 88. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 89. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 91. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 92. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 93. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 94. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 95. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 96. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 98. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 99. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 100. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 101. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 102. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 103. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 104. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 105. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 106. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 107. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 108. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 109. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 110. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 111. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 112. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 113. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 114. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 115. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 116. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 117. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 118. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 119. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 120. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 121. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 122. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 123. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 124. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 125. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 126. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 127. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 128. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 129. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 130. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 131. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 132. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 133. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 134. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 135. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 136. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 137. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 138. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 139. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 140. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 141. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 142. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 143. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   * Goal 144. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 145. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 146. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 147. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 148. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 149. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 150. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 151. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 152. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 153. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 154. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 155. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 156. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 157. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 158. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 159. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 160. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 161. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 162. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 163. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true in context: 
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 187. Weak Mutation 1771: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> <=
   * Goal 188. org.apache.commons.math.util.MathUtils.log(DD)D:zero
   */

  @Test
  public void test023()  throws Throwable  {
      double double0 = MathUtils.log(0.0, 0.5);
      int int0 = MathUtils.compareTo(0.5, 0.5, 0.0);
      boolean boolean0 = MathUtils.equals(0.0, 1680.475251938268, 0.0);
      long long0 = MathUtils.factorial(0);
      int int1 = MathUtils.indicator(0);
      float float0 = MathUtils.round((float) 1L, 1537, 0);
      long long1 = MathUtils.addAndCheck((-372L), 992L);
      double double1 = MathUtils.binomialCoefficientDouble(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 12.0;
      doubleArray0[2] = 1680.475251938268;
      doubleArray0[3] = 0.5;
      double double2 = MathUtils.distance(doubleArray0, doubleArray0);
  }

  //Test case number: 24
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 988
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 6. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 9. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 10. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 12. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - false
   * Goal 16. Weak Mutation 1874: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> -1
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   */

  @Test
  public void test024()  throws Throwable  {
      long long0 = MathUtils.lcm((-1688L), 0L);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) (-1688L);
      doubleArray0[2] = (double) 0L;
      doubleArray0[3] = (double) (-1688L);
      int int0 = MathUtils.hash(doubleArray0);
  }

  //Test case number: 25
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 4. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - true
   * Goal 21. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 22. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 23. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 24. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 25. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 26. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 31. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 32. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 1804: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> <=
   * Goal 34. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 35. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 36. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 37. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 38. Weak Mutation 1962: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1032 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 1949: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> -2
   * Goal 40. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 41. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 42. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 43. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 47. lcm(II)I_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test025()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2784.6006;
      doubleArray0[1] = (-1970.814995489);
      int int0 = MathUtils.hash(doubleArray0);
      // Undeclared exception!
      try { 
        MathUtils.lcm((-1148917877), 2138384141);
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 26
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false
   * Goal 9. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 10. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 12. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 13. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 14. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 15. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 16. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 18. Weak Mutation 1175: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> >=
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 20. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 23. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   */

  @Test
  public void test026()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte)90);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (byte)1;
      doubleArray0[1] = (double) (byte)1;
      doubleArray0[2] = (double) (byte)1;
      double[] doubleArray1 = new double[0];
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray1);
      int int0 = MathUtils.addAndCheck(13, (-4387));
  }

  //Test case number: 27
  /*
   * 179 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1735
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1736
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1738
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1560
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1561
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1563
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1564
   * Goal 14. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 15. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1642
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 29. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 31. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 32. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 33. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1785
   * Goal 34. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 35. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 61. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 63. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 64. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 65. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 66. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 71. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 73. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 74. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 75. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 76. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 77. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 78. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 79. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 80. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 81. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 82. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 83. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 84. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 85. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 86. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 87. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 88. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 91. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 92. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 93. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 94. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 95. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 96. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 97. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 98. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 99. Weak Mutation 3212: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> -
   * Goal 100. Weak Mutation 3213: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> *
   * Goal 101. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 102. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 103. Weak Mutation 1791: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> -2
   * Goal 104. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 105. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 106. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 107. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 108. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 109. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 110. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 111. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 112. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 113. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 114. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 115. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 116. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 117. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 118. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 119. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 120. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 122. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 123. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 124. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 125. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 126. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 127. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 128. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 129. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 130. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 131. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 132. Weak Mutation 3049: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> -1
   * Goal 133. Weak Mutation 2545: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> >
   * Goal 134. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 135. Weak Mutation 2555: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> ==
   * Goal 136. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   * Goal 137. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 138. org.apache.commons.math.util.MathUtils.indicator(S)S:negative
   * Goal 139. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 140. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 141. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   * Goal 142. org.apache.commons.math.util.MathUtils.distance1([I[I)I:positive
   * Goal 143. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 144. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 145. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 146. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 147. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 148. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 149. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 150. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 151. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 152. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 153. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 154. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 155. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 156. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 157. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 158. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 159. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 160. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 179. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test027()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-47));
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte) (-1);
      intArray0[1] = 8;
      intArray0[2] = (int) (byte) (-47);
      int[] intArray1 = new int[9];
      intArray1[0] = 8;
      intArray1[1] = 8;
      intArray1[2] = (int) (byte) (-47);
      intArray1[3] = (int) (byte) (-1);
      intArray1[4] = 8;
      intArray1[5] = (int) (byte) (-47);
      intArray1[6] = (int) (byte) (-47);
      intArray1[7] = (int) (byte) (-1);
      intArray1[8] = 8;
      int int0 = MathUtils.distance1(intArray0, intArray1);
      short short0 = MathUtils.indicator((short) (byte) (-1));
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, (double) (-47), (double) (-47));
      double[] doubleArray0 = new double[0];
      double double0 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      int int1 = MathUtils.pow((int) (byte) (-47), 2422L);
      double double1 = MathUtils.sign((-97.0));
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      double double2 = MathUtils.normalizeAngle((-162.850055211147), 889.332021);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-47);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      long long0 = bigInteger0.longValueExact();
      try { 
        MathUtils.pow(bigInteger0, (int) (byte) (-47));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-47^-47)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 28
  /*
   * 13 covered goals:
   * Goal 1. pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true
   * Goal 5. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 6. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 7. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 8. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 9. Weak Mutation 3090: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> -2
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   */

  @Test
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, 479001600L);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 29
  /*
   * 201 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 9. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 12. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 13. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 953
   * Goal 14. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1347
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 714
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 715
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 30. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 37. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 38. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 41. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 42. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 44. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 45. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 46. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 47. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 48. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 49. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 50. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 51. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 52. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true
   * Goal 80. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 82. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 83. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 85. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 87. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 88. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 89. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 90. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 91. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 92. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 93. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 94. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 95. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 96. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 97. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 98. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 99. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 100. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 101. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 102. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 103. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 104. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 105. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 106. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 107. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 108. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 109. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 110. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 111. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 112. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 113. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 114. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 115. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 116. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 117. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 118. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 119. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 120. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 121. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 122. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 123. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 124. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 125. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 126. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 127. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 128. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 129. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 130. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 131. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 132. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 133. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 134. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 135. Weak Mutation 165: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> -2
   * Goal 136. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 137. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 138. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 139. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 140. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 141. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 142. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 143. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 144. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 145. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 146. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 147. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 148. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 149. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 150. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 151. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 152. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 153. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 154. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 155. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 156. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 157. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 158. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true in context: 
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 194. round(FII)F_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 195. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 196. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false
   * Goal 197. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 198. Weak Mutation 1809: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> -1
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   */

  @Test
  public void test029()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1254.91;
      doubleArray0[1] = 0.058823529411764705;
      doubleArray0[2] = 1.997844754509471E-9;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      int int0 = MathUtils.hash(doubleArray0);
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
      int int1 = MathUtils.addAndCheck(67, 67);
      long long0 = MathUtils.binomialCoefficient(31, 31);
      int int2 = MathUtils.addAndCheck(31, 67);
      int[] intArray0 = new int[1];
      intArray0[0] = 67;
      int int3 = MathUtils.distanceInf(intArray0, intArray0);
      int int4 = MathUtils.gcd(3640, 18);
      int int5 = MathUtils.lcm(67, 0);
      // Undeclared exception!
      try { 
        MathUtils.round((float) 986361747, 0, 67);
      } catch(IllegalArgumentException e) {
         //
         // invalid rounding method 67, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 30
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1841
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 11. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 14. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 21. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false
   * Goal 25. Weak Mutation 3435: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> -2
   * Goal 26. Weak Mutation 3436: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> !=
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 30. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1842
   */

  @Test
  public void test030()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1819.8637;
      doubleArray0[1] = (-2056.88680872732);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1314.5406485918918;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly decreasing (-2,056.887 <= 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 31
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 3. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 591
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 18. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 1214: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.factorial(I)J:591 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 22. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 23. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 24. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 25. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 26. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 27. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 28. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 30. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 33. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 43. factorial(I)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 44. Weak Mutation 1569: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> >=
   */

  @Test
  public void test031()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-125));
      long long0 = MathUtils.gcd((long) (byte) (-125), 0L);
      // Undeclared exception!
      try { 
        MathUtils.factorial(63);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 32
  /*
   * 138 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1344
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1345
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 14. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 41. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 43. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 44. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 45. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 46. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 47. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 49. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 50. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 51. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 52. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 54. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 55. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 56. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 57. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 58. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 59. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 60. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 62. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 66. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 67. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 72. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 73. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 74. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 75. Weak Mutation 1793: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> <=
   * Goal 76. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 77. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 78. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 79. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 80. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 81. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 82. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 83. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 84. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 85. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 86. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 87. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 88. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 89. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 90. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 91. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 92. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 93. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 94. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   * Goal 95. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 96. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 97. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 98. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 99. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 100. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 101. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 102. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 103. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 104. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 105. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 106. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 107. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 108. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 109. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 110. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 111. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 112. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 128. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true in context: 
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 136. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false
   * Goal 137. Weak Mutation 2328: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> /
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   */

  @Test
  public void test032()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(175L, 175L);
      int int0 = MathUtils.mulAndCheck(0, 3142);
      short short0 = MathUtils.indicator((short)0);
      boolean boolean0 = MathUtils.equals((double) 0, (-1765.50161099));
      int int1 = MathUtils.mulAndCheck(0, 664);
      float float0 = MathUtils.indicator(Float.NaN);
      long long1 = MathUtils.mulAndCheck((long) (short)1, 6402373705728000L);
      float float1 = MathUtils.round(Float.NaN, 21, 0);
      short short1 = MathUtils.sign((short)799);
      double double0 = MathUtils.normalizeAngle(Float.NaN, 0.0);
  }

  //Test case number: 33
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 19. distanceInf([I[I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 20. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 22. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 23. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 24. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 29. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 30. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 31. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 32. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   */

  @Test
  public void test033()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1537.68;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-676.268);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1554.828663239;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 239;
      intArray0[2] = 0;
      intArray0[3] = (-762);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        MathUtils.distanceInf(intArray0, intArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 34
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1735
   * Goal 3. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1736
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 5. distance1([I[I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 7. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 8. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 9. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 10. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 12. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 13. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 15. Weak Mutation 3212: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> -
   * Goal 16. Weak Mutation 3213: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> *
   */

  @Test
  public void test034()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-378);
      intArray0[1] = 0;
      intArray0[2] = 173;
      intArray0[3] = 155;
      intArray0[4] = 2755;
      intArray0[5] = 0;
      int[] intArray1 = new int[4];
      intArray1[0] = (-378);
      intArray1[1] = 173;
      intArray1[2] = 155;
      intArray1[3] = (-378);
      // Undeclared exception!
      try { 
        MathUtils.distance1(intArray0, intArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 35
  /*
   * 96 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 238
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 27. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 28. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 29. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 30. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 31. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 32. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 33. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 34. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 35. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 36. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 38. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 39. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 40. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 41. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 42. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 48. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 49. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 50. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 51. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 52. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 53. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 54. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 55. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 56. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 57. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 58. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 59. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 60. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 61. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 62. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 63. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 64. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 65. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 66. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 67. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 68. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 69. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 70. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 71. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 81. binomialCoefficientDouble(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 82. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - true
   * Goal 85. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 86. Weak Mutation 324: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> -2
   * Goal 87. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   */

  @Test
  public void test035()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(0, 0);
      long long0 = MathUtils.indicator(0L);
      int int1 = MathUtils.sign(0);
      long long1 = MathUtils.binomialCoefficient(539, (-421));
      int int2 = MathUtils.mulAndCheck(0, (-105));
      long long2 = MathUtils.lcm(0L, 0L);
  }

  //Test case number: 36
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 13. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 3418: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> -1
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 26. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true
   * Goal 28. Weak Mutation 3419: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test036()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 10.0;
      doubleArray0[2] = 2950.030307346;
      doubleArray0[3] = 0.041666663879186654;
      doubleArray0[4] = 0.0;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 2 and 3 are not increasing (2,950.03 > 0.042)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 37
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1186
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 7. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 14. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false
   * Goal 15. Weak Mutation 2246: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> -1
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 17. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockArithmeticException_DECLARED
   */

  @Test
  public void test037()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        MathUtils.normalizeArray(doubleArray0, 2826.33735);
      } catch(ArithmeticException e) {
         //
         // array sums to zero
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 38
  /*
   * 86 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 41. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 42. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 43. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 44. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 45. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 46. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 47. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 48. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 49. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 50. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 51. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 52. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 53. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 58. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 59. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 60. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 61. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 62. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 990: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> ==
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 68. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 86. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   */

  @Test
  public void test038()  throws Throwable  {
      long long0 = MathUtils.gcd((-1266L), 292L);
      // Undeclared exception!
      try { 
        MathUtils.equals((double) (-1266L), 0.0, (-1942));
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 39
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 4. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 6. Weak Mutation 991: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> <
   * Goal 7. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 10. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   */

  @Test
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN(0.041666663879186654, (-493.57248261048), 0);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 40
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 644
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false
   * Goal 10. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 11. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 13. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 15. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> -1
   * Goal 16. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 18. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 19. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 20. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 21. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 22. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 25. factorialLog(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test040()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(3912L, 3912L);
      // Undeclared exception!
      try { 
        MathUtils.factorialLog((-18));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -18
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 41
  /*
   * 184 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 5. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 8. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   * Goal 9. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 59. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 62. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 64. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 65. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 66. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 68. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 70. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 71. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 72. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 73. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 74. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 75. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 76. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 77. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 78. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 79. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 80. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 81. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 82. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 83. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 84. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 85. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 86. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 87. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 88. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 89. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 90. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 91. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 92. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 93. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 94. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 95. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 96. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 97. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 98. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 99. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 100. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 101. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 102. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 103. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 104. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 105. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 106. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 107. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 108. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 110. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 111. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 112. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 113. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 114. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 115. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 116. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 117. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 118. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 119. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 120. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 121. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 122. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 123. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 124. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 125. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 126. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 127. Weak Mutation 1793: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> <=
   * Goal 128. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 129. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 130. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 131. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 132. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 133. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 134. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 135. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 136. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 137. org.apache.commons.math.util.MathUtils.hash(D)I:positive
   * Goal 138. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 139. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 140. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 141. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 142. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 143. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 144. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 145. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 146. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 147. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 148. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 149. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 150. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 151. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 152. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 153. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 168. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   * Goal 169. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false
   * Goal 170. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - true
   * Goal 171. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 172. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 173. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 174. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 175. Weak Mutation 825: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> >
   * Goal 176. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 177. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 178. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 179. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 180. Weak Mutation 2629: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> -1
   * Goal 181. org.apache.commons.math.util.MathUtils.sign(S)S:zero
   * Goal 182. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   */

  @Test
  public void test041()  throws Throwable  {
      long long0 = MathUtils.lcm((-8L), (-8L));
      long long1 = MathUtils.lcm(2535L, 850L);
      int int0 = MathUtils.compareTo(Double.NaN, Double.NaN, 2535L);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 171;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      intArray0[8] = 4261;
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      int int2 = MathUtils.hash(2.2250738585072014E-308);
      short short0 = MathUtils.sign((short)0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 8L;
      doubleArray0[2] = (double) 4261;
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      short short1 = MathUtils.indicator((short)0);
      // Undeclared exception!
      try { 
        MathUtils.round(0.0, (int) (short)0, (-808));
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 42
  /*
   * 198 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 3. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 7. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 13. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 16. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 17. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 18. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 25. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 29. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 30. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 33. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 35. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 36. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 626
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 39. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 40. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 74. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 75. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 76. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 77. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 78. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 79. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 80. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 82. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 83. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 86. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 87. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 88. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 89. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 90. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 91. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 92. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 93. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 94. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 95. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 96. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 97. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 99. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 100. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 101. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 102. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 103. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 104. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 105. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 106. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 107. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 108. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 109. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 110. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 111. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 112. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 113. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 114. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 115. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 116. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 117. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 118. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 119. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 120. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 121. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 122. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 123. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 124. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 125. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 126. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 127. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 128. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 129. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 130. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 131. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 132. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 133. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 134. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 135. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 136. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 137. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 138. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 139. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 140. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 141. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 142. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 143. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 144. Weak Mutation 2629: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> -1
   * Goal 145. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 146. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 147. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 148. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 149. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 150. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 151. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   * Goal 152. org.apache.commons.math.util.MathUtils.hash(D)I:negative
   * Goal 153. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 154. org.apache.commons.math.util.MathUtils.sign(S)S:zero
   * Goal 155. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 156. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:negative
   * Goal 157. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 158. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 159. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 160. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 161. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 162. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 163. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 164. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 165. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 166. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 167. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 168. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 169. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 170. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 171. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 172. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 173. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 174. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 175. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 176. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 177. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 178. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   */

  @Test
  public void test042()  throws Throwable  {
      int int0 = MathUtils.indicator(261);
      int int1 = MathUtils.subAndCheck(1, 261);
      int int2 = MathUtils.addAndCheck(261, 261);
      float float0 = MathUtils.sign((float) 522);
      boolean boolean0 = MathUtils.equalsIncludingNaN(2078.888, (-1233.0));
      int int3 = MathUtils.compareTo(3294.33871996, (-787.7818660407044), 261);
      short short0 = MathUtils.sign((short)0);
      int int4 = MathUtils.mulAndCheck(1, 11);
      boolean boolean1 = MathUtils.equalsIncludingNaN((-114.90962647), 2078.888, (-1218.75672795));
      double double0 = MathUtils.factorialDouble(2708);
      int int5 = MathUtils.hash(1930.2);
  }

  //Test case number: 43
  /*
   * 91 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 17. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 19. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 20. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 21. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 22. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 24. Weak Mutation 1802: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 26. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 28. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 36. Weak Mutation 3176: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> -
   * Goal 37. Weak Mutation 3177: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> *
   * Goal 38. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 39. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 44. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 45. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 46. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   * Goal 47. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 48. org.apache.commons.math.util.MathUtils.distance1([D[D)D:positive
   * Goal 49. org.apache.commons.math.util.MathUtils.round(DI)D:positive
   * Goal 50. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 51. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 52. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 53. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 54. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 55. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 56. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 57. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 58. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 59. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 60. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 61. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 62. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 63. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 64. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 65. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 79. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - false
   * Goal 80. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - true
   * Goal 82. Weak Mutation 165: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> -2
   * Goal 83. Weak Mutation 2295: org.apache.commons.math.util.MathUtils.round(DII)D:1230 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 3065: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> -1
   * Goal 85. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:positive
   * Goal 86. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 87. org.apache.commons.math.util.MathUtils.round(DI)D:negative
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 91. pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test043()  throws Throwable  {
      double double0 = MathUtils.round((-2199.14201), 0);
      double double1 = MathUtils.log((-2199.14201), 0);
      long long0 = MathUtils.binomialCoefficient(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = Double.NaN;
      doubleArray0[1] = (-2199.0);
      double double2 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      double double3 = MathUtils.round(Double.NaN, (-3406));
      int int0 = MathUtils.lcm(0, 21);
      byte byte0 = MathUtils.sign((byte)116);
      double double4 = MathUtils.round((double) (byte)1, 0);
      double double5 = MathUtils.indicator(0.0);
      double double6 = MathUtils.distance1(doubleArray0, doubleArray0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)116;
      byteArray0[8] = (byte)1;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, (-2147483648L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (2,139,822,722,066,866,598,913^-2,147,483,648)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 44
  /*
   * 251 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 14. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 16. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 17. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 18. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 19. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 20. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 25. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1182
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1188
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1189
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1192
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1195
   * Goal 33. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 34. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 36. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 314
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 68. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 69. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 76. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 78. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 82. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 84. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 85. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 86. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 87. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 89. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 90. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 91. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 92. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 93. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 95. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 96. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 97. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 98. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 99. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 100. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 101. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 102. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 103. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 104. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 106. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 107. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 108. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 109. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 110. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 111. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 112. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 113. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 114. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 115. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 116. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 117. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 118. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 119. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 120. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 121. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 122. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 123. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 124. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 125. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 126. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 127. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 128. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 129. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 130. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 131. Weak Mutation 576: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> -1
   * Goal 132. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 133. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 134. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 135. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 136. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 137. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 138. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 139. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 140. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 141. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 142. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 143. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 144. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 145. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 146. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 147. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 148. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 149. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 150. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 151. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 152. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 153. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 154. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 155. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 156. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 157. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 158. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 159. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 160. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 161. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 162. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 163. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 164. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 165. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 166. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 167. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 168. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 169. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 170. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 171. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 172. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   * Goal 173. org.apache.commons.math.util.MathUtils.round(DII)D:negative
   * Goal 174. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 175. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 176. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 177. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 178. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   * Goal 179. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 180. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 181. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 182. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 183. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 184. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 185. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 186. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 187. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 188. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 189. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 190. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 191. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 192. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 193. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 194. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 195. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 196. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 197. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 198. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 199. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 200. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 201. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 202. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 203. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 204. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 205. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 206. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 207. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 208. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 209. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 210. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 211. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 212. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 213. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 214. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 215. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 241. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 242. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true
   * Goal 243. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false
   * Goal 244. Weak Mutation 394: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> -1
   * Goal 245. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 246. Weak Mutation 2248: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> >
   * Goal 247. Weak Mutation 2611: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> >
   * Goal 248. Weak Mutation 2618: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> ==
   * Goal 249. org.apache.commons.math.util.MathUtils.sign(J)J:negative
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   */

  @Test
  public void test044()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN((-214.4), (-214.4));
      double double0 = MathUtils.round((-214.4), 992, 0);
      double double1 = MathUtils.sinh((-214.4));
      int int0 = MathUtils.indicator(992);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      int int2 = MathUtils.mulAndCheck(0, 0);
      long long0 = MathUtils.sign((-1454L));
      boolean boolean1 = MathUtils.equalsIncludingNaN((-214.4), 3428.226512415986, 6.283185307179586);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-214.4);
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) (-1L);
      boolean boolean2 = MathUtils.equals(doubleArray0, doubleArray0);
      byte byte0 = MathUtils.indicator((byte)12);
      short short0 = MathUtils.sign((short) (byte)1);
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 0.0);
      double double2 = MathUtils.binomialCoefficientLog(3069, 0);
      double double3 = MathUtils.binomialCoefficientDouble(1, 0);
  }

  //Test case number: 45
  /*
   * 255 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 13. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 14. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 17. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 19. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 20. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 21. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 22. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 24. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 26. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 29. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1966
   * Goal 31. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 34. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1976
   * Goal 35. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1977
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 39. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 41. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 332
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 336
   * Goal 44. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 59. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 68. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 71. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 78. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 82. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 84. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 85. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 87. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 89. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 91. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 92. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 93. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 94. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 95. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 96. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 99. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 100. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 101. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 102. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 103. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 104. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 105. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 106. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 107. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 108. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 2744: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> >
   * Goal 110. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 111. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 112. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 113. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 114. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 115. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 116. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 117. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 118. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 119. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 120. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 121. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 122. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 123. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 124. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 125. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 126. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 127. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 128. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 129. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 130. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 131. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 132. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 133. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 134. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 135. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 136. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 137. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 138. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 139. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 140. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 141. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 142. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 143. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 144. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 145. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 146. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 147. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 148. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 149. Weak Mutation 578: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> >
   * Goal 150. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 151. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 152. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 153. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 154. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 155. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 156. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 157. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 158. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 159. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 160. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 161. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 162. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 163. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 164. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 165. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 166. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 167. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 168. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   * Goal 169. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 170. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 171. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 172. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 173. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 174. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 175. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 176. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 177. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 178. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 179. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 180. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 181. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 182. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 183. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 184. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 185. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 186. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 187. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 188. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 189. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 190. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 191. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 192. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 193. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 204. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 205. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 207. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 208. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 209. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 210. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 211. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 212. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 213. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 214. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 215. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 228. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - true
   * Goal 229. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I63 Branch 31 IF_ICMPLE L336 - true
   * Goal 230. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - true
   * Goal 231. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 33 IF_ICMPGT L351 - true
   * Goal 232. Weak Mutation 638: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> ==
   * Goal 233. Weak Mutation 659: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> +
   * Goal 234. Weak Mutation 660: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> %
   * Goal 235. Weak Mutation 661: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> -
   * Goal 236. Weak Mutation 662: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> *
   * Goal 237. Weak Mutation 665: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceComparisonOperator <= -> ==
   * Goal 238. Weak Mutation 692: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> +
   * Goal 239. Weak Mutation 693: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> %
   * Goal 240. Weak Mutation 694: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> *
   * Goal 241. Weak Mutation 695: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> /
   * Goal 242. Weak Mutation 697: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> %
   * Goal 243. Weak Mutation 698: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> -
   * Goal 244. Weak Mutation 699: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> *
   * Goal 245. Weak Mutation 700: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> /
   * Goal 246. Weak Mutation 712: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceComparisonOperator > -> -2
   * Goal 247. Weak Mutation 744: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:351 - ReplaceComparisonOperator > -> -2
   * Goal 248. Weak Mutation 1606: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> -
   * Goal 249. Weak Mutation 1607: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> *
   * Goal 250. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 33 IF_ICMPGT L351 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 252. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I63 Branch 31 IF_ICMPLE L336 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 253. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 254. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 255. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 355
   */

  @Test
  public void test045()  throws Throwable  {
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      long long0 = MathUtils.gcd(0L, 61L);
      float float0 = MathUtils.indicator((float) 61L);
      boolean boolean0 = MathUtils.equalsIncludingNaN(6.283185307179586, (double) 61L, (double) 1.0F);
      double double0 = MathUtils.sinh(1.0F);
      int int0 = MathUtils.mulAndCheck(1927, 1927);
      double double1 = MathUtils.cosh(3645.5898);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 61L;
      doubleArray0[1] = 0.5;
      doubleArray0[2] = (double) 3713329;
      doubleArray0[3] = 6.283185307179586;
      doubleArray0[4] = 6.283185307179586;
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray0);
      double double2 = MathUtils.binomialCoefficientLog(3713329, (-2216));
      byte byte0 = MathUtils.indicator((byte)0);
      double double3 = MathUtils.safeNorm(doubleArray0);
      int int1 = MathUtils.pow(31, 0);
  }

  //Test case number: 46
  /*
   * 55 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 336
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I63 Branch 31 IF_ICMPLE L336 - true
   * Goal 11. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 12. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 13. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 578: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> >
   * Goal 16. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 17. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 18. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 19. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 20. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 21. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 638: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 659: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> +
   * Goal 24. Weak Mutation 660: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> %
   * Goal 25. Weak Mutation 661: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> -
   * Goal 26. Weak Mutation 662: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> *
   * Goal 27. Weak Mutation 665: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceComparisonOperator <= -> ==
   * Goal 28. Weak Mutation 693: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 694: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 695: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> /
   * Goal 31. Weak Mutation 697: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> %
   * Goal 32. Weak Mutation 698: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> -
   * Goal 33. Weak Mutation 699: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> *
   * Goal 34. Weak Mutation 700: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> /
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I63 Branch 31 IF_ICMPLE L336 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 45. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - false
   * Goal 46. Weak Mutation 711: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceComparisonOperator > -> !=
   * Goal 47. Weak Mutation 723: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> %
   * Goal 48. Weak Mutation 724: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> -
   * Goal 49. Weak Mutation 725: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> *
   * Goal 50. Weak Mutation 726: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> /
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 52. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 343
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 346
   * Goal 54. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 347
   * Goal 55. binomialCoefficientLog(II)D_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   */

  @Test
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog(2656, Integer.MIN_VALUE);
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 47
  /*
   * 175 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 10. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 20. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 21. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 22. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 26. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1974
   * Goal 28. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 29. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 30. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 31. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 33. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 35. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 37. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 38. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 39. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 41. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 42. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 43. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 44. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 45. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 46. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 47. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 48. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 49. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 50. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 51. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 73. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 74. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 75. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 76. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 77. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 78. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 79. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 80. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 81. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 82. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 83. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 84. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 85. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 86. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 87. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 88. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 89. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 90. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 91. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 92. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 93. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 94. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 95. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 96. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 97. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 98. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 99. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 100. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 101. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 102. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 103. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 104. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 105. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 106. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 107. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 108. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 109. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 110. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 111. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 112. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 113. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 114. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 115. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 116. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 117. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 118. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 119. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 120. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 121. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 122. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 123. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 124. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 125. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 126. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 127. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 128. org.apache.commons.math.util.MathUtils.safeNorm([D)D:zero
   * Goal 129. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 130. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 131. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 132. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 133. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 134. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 135. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 136. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 137. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 138. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 139. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 140. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 141. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 142. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 143. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 144. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 145. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 146. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 147. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 148. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 149. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 150. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 174. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 175. org.apache.commons.math.util.MathUtils.pow(JJ)J:negative
   */

  @Test
  public void test047()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double double0 = MathUtils.safeNorm(doubleArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-15);
      intArray0[1] = 0;
      intArray0[2] = 0;
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      double double1 = MathUtils.scalb(255.4623468536, 9);
      long long0 = MathUtils.pow((long) 9, 1306L);
      int int1 = MathUtils.hash(doubleArray0);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      double double2 = MathUtils.binomialCoefficientDouble(0, 0);
      double double3 = MathUtils.indicator(1896.855427);
      double double4 = MathUtils.factorialLog(28);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 48
  /*
   * 97 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 12. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 13. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 14. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 15. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 16. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 19. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 20. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 21. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 22. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 24. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 30. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 40. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 42. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 43. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 44. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 45. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 46. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 47. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 48. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 49. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 50. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 51. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 52. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 54. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 55. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 56. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 57. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 58. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 59. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 60. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 61. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 62. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 63. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 64. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 65. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 66. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 67. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 68. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 69. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 70. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 71. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 72. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 73. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 74. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 75. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 76. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 77. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 78. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 79. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 80. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 81. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 82. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 83. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 84. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 86. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 87. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 88. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   */

  @Test
  public void test048()  throws Throwable  {
      long long0 = MathUtils.subAndCheck((-331L), 9218868437227405312L);
      long long1 = MathUtils.subAndCheck((-1L), 357L);
      long long2 = MathUtils.factorial(7);
      double double0 = MathUtils.binomialCoefficientDouble(657, 61);
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf((String) null);
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 49
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1552
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 145
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 146
   * Goal 4. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 13. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false
   * Goal 21. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 22. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 23. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 24. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 25. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 26. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 27. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 28. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 29. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 36. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 37. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 38. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 39. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 40. Weak Mutation 2611: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> >
   * Goal 41. Weak Mutation 2618: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> ==
   * Goal 42. Weak Mutation 2832: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> -1
   * Goal 43. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 44. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:negative
   * Goal 45. org.apache.commons.math.util.MathUtils.sign(J)J:negative
   * Goal 46. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 47. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 48. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 49. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 50. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 51. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 52. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 58. pow(IJ)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test049()  throws Throwable  {
      double double0 = MathUtils.cosh(89.0);
      long long0 = MathUtils.addAndCheck((-3251L), (-1561L));
      long long1 = MathUtils.sign((-3251L));
      try { 
        MathUtils.pow((-1953), (-1013L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-1,953^-1,013)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 50
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1344
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 13. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 15. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 17. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 18. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 19. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 20. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 21. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 22. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 23. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   * Goal 35. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true in context: 
   */

  @Test
  public void test050()  throws Throwable  {
      float float0 = MathUtils.round(0.0F, 0, 0);
  }

  //Test case number: 51
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 4. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 5. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 6. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 8. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 12. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   */

  @Test
  public void test051()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      int int0 = MathUtils.distanceInf(intArray0, intArray1);
  }

  //Test case number: 52
  /*
   * 70 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 19. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 22. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 23. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 24. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 25. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 26. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 27. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 28. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 31. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 32. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 33. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 34. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 35. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 36. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 38. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 39. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 40. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 41. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 42. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 43. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 44. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 45. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 48. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   * Goal 49. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 50. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 51. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 52. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 53. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 54. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test052()  throws Throwable  {
      double double0 = MathUtils.sinh(0.0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2523.0;
      doubleArray0[1] = 0.0;
      double double1 = MathUtils.safeNorm(doubleArray0);
      long long0 = MathUtils.mulAndCheck((long) (-730), (long) (-730));
  }

  //Test case number: 53
  /*
   * 57 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false
   * Goal 15. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 21. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 24. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 25. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 26. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 27. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 28. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 3108: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> -1
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 33. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 35. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 36. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 37. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 51. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true
   * Goal 52. Weak Mutation 1717: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> -2
   * Goal 53. org.apache.commons.math.util.MathUtils.indicator(B)B:negative
   * Goal 54. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 55. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 57. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test053()  throws Throwable  {
      short short0 = MathUtils.sign((short)403);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (short)1;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 1.1102230246251565E-16);
      byte byte0 = MathUtils.indicator((byte) (-90));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-90);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-98,240,280,133,633^-98,240,280,133,633)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 54
  /*
   * 127 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 20. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 21. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 22. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 24. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 26. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 27. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 28. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 29. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 30. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 31. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 32. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 34. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 35. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 36. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 37. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 38. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 39. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 43. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 44. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 46. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 47. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 48. Weak Mutation 2713: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> <
   * Goal 49. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 52. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 53. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:positive
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 55. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 56. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 57. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 58. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 60. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 62. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 63. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 65. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 79. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false
   * Goal 80. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 81. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 82. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 83. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 87. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 89. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false
   * Goal 90. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 91. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 92. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 93. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 94. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 95. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 96. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 97. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 98. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 99. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 100. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 101. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 102. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 103. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 104. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 105. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 106. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 107. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 108. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 109. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 110. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 111. Weak Mutation 578: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> >
   * Goal 112. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 113. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 114. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 115. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 116. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 117. Weak Mutation 616: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> -1
   * Goal 118. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> <=
   * Goal 119. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 120. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 121. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 122. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 123. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   */

  @Test
  public void test054()  throws Throwable  {
      int int0 = MathUtils.pow(63, 63);
      boolean boolean0 = MathUtils.equals((double) 1526857663, 5926.0);
      long long0 = MathUtils.subAndCheck(1832L, (-1101L));
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 5926.0;
      doubleArray0[1] = (double) (-1101L);
      doubleArray0[2] = (double) 2933L;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (double) 1526857663;
      doubleArray0[6] = (double) 63;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 1832L;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) 1526857663;
      doubleArray1[4] = (double) 1832L;
      doubleArray1[5] = 5926.0;
      doubleArray1[6] = (double) 2933L;
      doubleArray1[7] = (double) (-1101L);
      doubleArray1[8] = 0.0;
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray1);
      double double0 = MathUtils.binomialCoefficientLog(0, (-879));
  }

  //Test case number: 55
  /*
   * 154 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false
   * Goal 35. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 38. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 39. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 42. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 43. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 45. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 48. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 49. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 50. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 51. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 52. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 53. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 3109: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> ==
   * Goal 55. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 56. Weak Mutation 3129: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1700 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 60. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 66. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 67. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 68. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 69. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 70. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 71. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 72. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 73. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 74. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 75. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 77. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 79. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 80. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 81. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 82. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 83. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 84. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 85. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 86. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 87. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 88. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 89. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 90. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 91. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 92. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 93. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 94. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 95. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 96. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 97. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 98. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 99. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 100. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 101. Weak Mutation 616: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> -1
   * Goal 102. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 103. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   * Goal 104. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 105. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 106. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 107. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 108. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 109. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 110. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 111. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 112. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 113. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 114. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 115. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 116. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 117. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 118. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 128. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 138. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - false
   * Goal 139. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 140. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 141. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 142. Weak Mutation 284: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> !=
   * Goal 143. Weak Mutation 286: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> >=
   * Goal 144. Weak Mutation 294: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> +
   * Goal 145. Weak Mutation 295: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> %
   * Goal 146. Weak Mutation 296: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> -
   * Goal 147. Weak Mutation 297: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> /
   * Goal 148. Weak Mutation 304: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> +
   * Goal 149. Weak Mutation 305: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> %
   * Goal 150. Weak Mutation 306: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> -
   * Goal 151. Weak Mutation 307: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> *
   * Goal 152. org.apache.commons.math.util.MathUtils.hash(D)I:negative
   * Goal 153. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 216
   * Goal 154. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 217
   */

  @Test
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)78;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      int int0 = bigInteger1.compareTo(bigInteger0);
      BigInteger bigInteger2 = bigInteger1.and(bigInteger0);
      BigInteger bigInteger3 = bigInteger0.multiply(bigInteger1);
      BigInteger bigInteger4 = MathUtils.pow(bigInteger0, bigInteger0);
      double double0 = MathUtils.binomialCoefficientLog((byte)23, (byte)2);
      int int1 = MathUtils.hash(751.822618843);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (int) (byte)2;
      intArray0[2] = (-105422715);
      intArray0[3] = (int) (byte)78;
      int int2 = MathUtils.distance1(intArray0, intArray0);
      double double1 = MathUtils.distance(intArray0, intArray0);
      boolean boolean0 = MathUtils.equals((double) (byte)2, 0.0, (-919.27));
  }

  //Test case number: 56
  /*
   * 191 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1347
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 6. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 8. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1735
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1738
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 13. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 14. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1870
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 17. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 19. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1105
   * Goal 20. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 24. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 214
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 215
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 282
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 42. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 44. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true
   * Goal 48. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 66. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 68. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 69. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 70. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 71. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 72. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 73. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 74. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 76. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 77. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 78. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 79. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 80. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 81. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 82. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 83. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 84. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 85. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 86. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 87. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 88. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 89. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 90. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 91. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 92. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 93. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 94. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 95. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 96. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 97. Weak Mutation 2056: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> -2
   * Goal 98. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 99. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 100. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 101. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 102. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 103. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 104. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 105. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 106. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 107. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 108. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 109. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 110. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 111. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 112. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 113. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 114. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 115. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 116. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 117. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 118. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 119. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 120. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 121. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 122. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 123. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 124. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 125. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 126. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 127. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 128. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 129. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 130. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 131. Weak Mutation 396: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> >
   * Goal 132. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 133. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 134. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 135. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   * Goal 136. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 137. org.apache.commons.math.util.MathUtils.scalb(DI)D:zero
   * Goal 138. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 139. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 140. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 141. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 142. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 143. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 144. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 145. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 146. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 147. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 148. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 149. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 150. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 151. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 152. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 153. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 154. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 155. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 156. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 157. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 158. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true in context: 
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 186. round(FII)F_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 187. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - false
   * Goal 188. Weak Mutation 470: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> -1
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 190. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 191. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 245
   */

  @Test
  public void test056()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = MathUtils.distance1(intArray0, intArray0);
      double double0 = MathUtils.binomialCoefficientDouble(0, 0);
      long long0 = MathUtils.factorial(0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      MathUtils.checkOrder(doubleArray0);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      double double1 = MathUtils.scalb(0, 0);
      double double2 = MathUtils.sinh(0);
      double double3 = MathUtils.cosh(3.834E-20);
      byte byte0 = MathUtils.indicator((byte)0);
      double double4 = MathUtils.sinh((byte)1);
      double double5 = MathUtils.binomialCoefficientDouble(0, (-187));
      // Undeclared exception!
      try { 
        MathUtils.round((-1.0F), 135, (-2137));
      } catch(IllegalArgumentException e) {
         //
         // invalid rounding method -2,137, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 57
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 7. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 13. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 23. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 25. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 26. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 27. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 28. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 29. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J:zero
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   */

  @Test
  public void test057()  throws Throwable  {
      long long0 = MathUtils.gcd(0L, 0L);
      float float0 = MathUtils.sign((-825.55F));
      boolean boolean0 = MathUtils.equals(3661.656782299, (-3309.0));
  }

  //Test case number: 58
  /*
   * 104 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1870
   * Goal 9. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 13. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 15. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 16. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 17. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 18. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 19. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 21. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 22. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 28. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 29. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 30. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1783
   * Goal 31. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 43. distanceInf([D[D)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 44. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 45. Weak Mutation 2971: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 47. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 48. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 49. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 52. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 53. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 55. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 56. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 57. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 58. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 59. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 60. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 65. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 66. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 67. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 68. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 71. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 72. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 73. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 75. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 76. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 79. org.apache.commons.math.util.MathUtils.pow(JJ)J:positive
   * Goal 80. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 81. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 82. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 83. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 84. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 85. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 86. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 87. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 88. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 89. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 90. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 91. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 92. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 93. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   */

  @Test
  public void test058()  throws Throwable  {
      double double0 = MathUtils.scalb(0.10526403784751892, (-1854));
      int[] intArray0 = new int[9];
      intArray0[0] = (-1854);
      intArray0[1] = (-1854);
      intArray0[2] = (-1854);
      intArray0[3] = (-1854);
      intArray0[4] = (-1854);
      intArray0[5] = (-1854);
      intArray0[6] = (-1854);
      intArray0[7] = (-1854);
      intArray0[8] = (-1854);
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1854);
      MathUtils.checkOrder(doubleArray0);
      long long0 = MathUtils.pow(0L, 0L);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) (-1854);
      doubleArray1[1] = (double) (-1854);
      doubleArray1[2] = (double) (-1854);
      doubleArray1[3] = (double) 0L;
      doubleArray1[4] = (double) (-1854);
      doubleArray1[5] = (double) (-1854);
      double double1 = MathUtils.distance(doubleArray0, doubleArray1);
      // Undeclared exception!
      try { 
        MathUtils.distanceInf(doubleArray1, doubleArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 59
  /*
   * 99 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1229
   * Goal 7. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 27. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - true
   * Goal 33. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 37. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 38. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 39. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 40. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 45. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 47. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 48. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 49. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 50. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 53. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 56. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 57. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 60. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 69: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> >
   * Goal 63. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 66. Weak Mutation 2295: org.apache.commons.math.util.MathUtils.round(DII)D:1230 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 68. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 69. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 70. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 71. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   * Goal 72. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:negative
   * Goal 73. org.apache.commons.math.util.MathUtils.round(DI)D:positive
   * Goal 74. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 75. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 76. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 77. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 78. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 79. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 80. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 81. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 82. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 83. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 84. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 85. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 86. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 87. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 88. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 98. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1230
   * Goal 99. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1233
   */

  @Test
  public void test059()  throws Throwable  {
      int int0 = MathUtils.compareTo(0.5, 0.5, 1213.066629521245);
      boolean boolean0 = MathUtils.equals(6.283185307179586, 1213.066629521245, 1213.066629521245);
      boolean boolean1 = MathUtils.equalsIncludingNaN(1.0, 1213.066629521245);
      long long0 = MathUtils.addAndCheck((long) 0, (-2659L));
      double double0 = MathUtils.log((-2612.56), 0);
      double double1 = MathUtils.round(Double.NaN, 0);
      byte byte0 = MathUtils.indicator((byte)0);
  }

  //Test case number: 60
  /*
   * 114 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 14. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 21. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 23. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 24. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 28. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 29. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 30. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 32. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 39. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 40. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 45. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 46. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 47. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 48. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 49. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 50. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 51. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 52. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 53. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 54. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 55. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 57. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 58. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 59. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 60. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 61. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 62. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 63. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 64. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 65. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 66. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 67. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 68. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 69. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 70. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 72. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 73. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 74. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 75. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 76. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 77. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 78. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 79. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 80. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 81. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 82. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 93. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 94. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 95. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 96. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - true
   * Goal 97. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false
   * Goal 98. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 99. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 100. Weak Mutation 2609: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> -1
   * Goal 101. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 102. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 103. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 104. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   * Goal 105. Weak Mutation 3103: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1674 - ReplaceBitwiseOperator >> -> <<
   * Goal 106. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 107. org.apache.commons.math.util.MathUtils.sign(J)J:zero
   * Goal 108. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 109. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   */

  @Test
  public void test060()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)48);
      long long0 = MathUtils.sign(0L);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      long long1 = bigInteger0.longValueExact();
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (long) (byte)1);
      double double0 = MathUtils.normalizeAngle((byte)48, (byte)1);
      double double1 = MathUtils.binomialCoefficientLog(61, (byte)1);
      int int0 = MathUtils.compareTo((-2427.2), 1245.2536314473673, (-24.5678965));
  }

  //Test case number: 61
  /*
   * 54 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 22. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 26. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 27. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 28. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 34. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 35. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 39. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 42. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 43. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 45. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 46. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 48. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 49. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 50. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   */

  @Test
  public void test061()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(625.5337249867814, 625.5337249867814);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 625.5337249867814;
      doubleArray0[1] = 625.5337249867814;
      doubleArray0[2] = 625.5337249867814;
      doubleArray0[3] = 625.5337249867814;
      doubleArray0[4] = 625.5337249867814;
      doubleArray0[5] = 625.5337249867814;
      doubleArray0[6] = 625.5337249867814;
      doubleArray0[7] = 625.5337249867814;
      doubleArray0[8] = 2494.9410796889;
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
  }

  //Test case number: 62
  /*
   * 78 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 20. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 24. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 25. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 28. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 29. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 31. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 32. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 35. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 36. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 37. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 39. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 41. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 42. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 43. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 49. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 50. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 53. Weak Mutation 1396: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> -
   * Goal 54. Weak Mutation 1397: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> *
   * Goal 55. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 57. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 58. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 59. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 62. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 63. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 65. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 66. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 75. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 76. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 77. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 78. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   */

  @Test
  public void test062()  throws Throwable  {
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      double[] doubleArray0 = new double[1];
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
      double double1 = MathUtils.distance1(doubleArray0, doubleArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, 0.0, 0.0);
      int int0 = MathUtils.gcd(0, 5);
  }

  //Test case number: 63
  /*
   * 118 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 32. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 34. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 35. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 38. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 41. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 42. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 43. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 47. Weak Mutation 1338: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> -1
   * Goal 48. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 49. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 53. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 54. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 55. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 56. Weak Mutation 2056: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> -2
   * Goal 57. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 60. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 61. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 62. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 65. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 66. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 68. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 69. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 70. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 73. org.apache.commons.math.util.MathUtils.equals(DDI)Z:true
   * Goal 74. org.apache.commons.math.util.MathUtils.scalb(DI)D:zero
   * Goal 75. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 76. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 77. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 79. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 80. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 81. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 82. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 83. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 84. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 86. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 87. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   */

  @Test
  public void test063()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1121.75372784706;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 436.5095);
      long long0 = MathUtils.mulAndCheck((-4750L), 0L);
      double double0 = MathUtils.binomialCoefficientDouble(4, 4);
      double double1 = MathUtils.scalb(0L, 16);
      boolean boolean0 = MathUtils.equals((double) 0L, (double) 0L, 176);
      int int0 = MathUtils.gcd(176, 0);
  }

  //Test case number: 64
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 13. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 14. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 15. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 16. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 18. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 20. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 21. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 22. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 37. Weak Mutation 3540: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test064()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-24.847);
      doubleArray0[1] = 0.07490822288864472;
      doubleArray0[2] = 3.834E-20;
      doubleArray0[3] = 2198.801;
      doubleArray0[4] = 1.1102230246251565E-16;
      doubleArray0[5] = 2311.823893;
      doubleArray0[6] = 0.0;
      double double0 = MathUtils.safeNorm(doubleArray0);
  }

  //Test case number: 65
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 5. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 6. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 12. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   */

  @Test
  public void test065()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0);
      // Undeclared exception!
      try { 
        MathUtils.round(0.0, (-2220), 420);
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 66
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D:negative
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D
   */

  @Test
  public void test066()  throws Throwable  {
      double double0 = MathUtils.round((-2792.401287412602), 0, 0);
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf("-eP[B");
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.commons.math.util.MathUtils.OrderDirection.-eP[B
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 67
  /*
   * 147 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 3. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 7. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 14. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 16. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 17. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 19. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 24. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1582
   * Goal 26. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 27. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 28. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 29. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 30. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false
   * Goal 50. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 52. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 53. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 54. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 55. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 56. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 57. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 58. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 59. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 60. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 62. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 63. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 64. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 65. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 66. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 67. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 68. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 70. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 71. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 72. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 73. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 74. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 75. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 76. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 77. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 78. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 79. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 80. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 81. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 82. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 83. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 84. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 85. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 86. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 87. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 88. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 89. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 90. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 91. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 92. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 93. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 94. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 95. Weak Mutation 2905: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> -1
   * Goal 96. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 97. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 98. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 99. Weak Mutation 394: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> -1
   * Goal 100. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 101. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   * Goal 102. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 103. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   * Goal 104. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 105. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:positive
   * Goal 106. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 107. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 108. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 109. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 110. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 111. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 112. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 113. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 114. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 115. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 116. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 117. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 118. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 119. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 120. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 121. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 122. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 123. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 128. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 143. pow(JI)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 144. Weak Mutation 1791: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> -2
   * Goal 145. org.apache.commons.math.util.MathUtils.indicator(S)S:negative
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   */

  @Test
  public void test067()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-3586);
      intArray0[1] = 148;
      intArray0[2] = (-481);
      intArray0[3] = (-384);
      intArray0[4] = (-227);
      intArray0[5] = 3040;
      double double0 = MathUtils.distance(intArray0, intArray0);
      int int0 = MathUtils.subAndCheck(3040, 240);
      byte byte0 = MathUtils.sign((byte) (-56));
      double double1 = MathUtils.binomialCoefficientDouble(2792, 0);
      short short0 = MathUtils.indicator((short) (byte) (-1));
      boolean boolean0 = MathUtils.equals((double) (-227), 982.0, 250);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      double double2 = MathUtils.sinh((-384));
      double double3 = MathUtils.cosh((-1282.66455609));
      try { 
        MathUtils.pow((long) 250, (int) (byte) (-1));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (250^-1)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 68
  /*
   * 80 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 10. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 14. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1945
   * Goal 15. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 25. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 28. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 31. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 32. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 34. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 35. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 36. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 37. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 38. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 40. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 42. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 44. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 45. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 47. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 48. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 49. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 50. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 61. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - false
   * Goal 65. Weak Mutation 3567: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> -1
   * Goal 66. Weak Mutation 3596: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> -1
   * Goal 67. Weak Mutation 3625: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1945 - ReplaceComparisonOperator <= -> -1
   * Goal 68. Weak Mutation 3654: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> +
   * Goal 69. Weak Mutation 3656: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 3657: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 3690: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> %
   * Goal 72. Weak Mutation 3692: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> /
   * Goal 73. Weak Mutation 3708: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> %
   * Goal 74. Weak Mutation 3710: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> /
   * Goal 75. Weak Mutation 3711: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator + -> %
   * Goal 76. Weak Mutation 3714: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator + -> /
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   */

  @Test
  public void test068()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 3.141592653589793;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = (-3881.3967558612);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2921.98;
      doubleArray0[5] = 4051.4044186;
      double double0 = MathUtils.safeNorm(doubleArray0);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 88;
      intArray0[3] = (-1741);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 178;
      double double1 = MathUtils.distance(intArray0, intArray0);
  }

  //Test case number: 69
  /*
   * 159 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - false
   * Goal 42. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 44. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 45. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 46. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 47. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 48. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 49. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 50. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 53. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 54. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 55. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 56. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 57. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 60. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 62. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 63. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 65. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 66. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 68. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 69. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 71. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 72. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 73. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 74. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 75. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 76. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 77. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 78. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 79. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 80. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 81. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 82. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 83. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 84. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 85. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 86. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 87. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 88. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 89. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 90. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 91. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 92. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 93. Weak Mutation 576: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> -1
   * Goal 94. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 95. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 96. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 99. Weak Mutation 1958: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> -1
   * Goal 100. Weak Mutation 1962: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1032 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 2514: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> -1
   * Goal 102. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 103. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 104. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:negative
   * Goal 105. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 106. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 107. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 108. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 109. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   * Goal 110. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 111. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 112. org.apache.commons.math.util.MathUtils.sign(B)B:zero
   * Goal 113. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 114. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 115. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 116. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 117. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 118. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 119. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 120. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 121. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 122. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 123. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 124. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 125. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 126. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 127. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 128. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 159. mulAndCheck(II)I_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test069()  throws Throwable  {
      int int0 = MathUtils.gcd(6, 6);
      byte byte0 = MathUtils.sign((byte)0);
      long long0 = MathUtils.mulAndCheck(2758L, 5040L);
      double double0 = MathUtils.binomialCoefficientLog(6, (byte)0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 6, (double) (byte)0);
      int int1 = MathUtils.mulAndCheck((-914), (int) (byte)0);
      int int2 = MathUtils.mulAndCheck((-914), 1691);
      double double1 = MathUtils.indicator((-1522.167));
      long long1 = MathUtils.mulAndCheck(2792L, 13900320L);
      long long2 = MathUtils.addAndCheck(6402373705728000L, 355687428096000L);
      int int3 = MathUtils.mulAndCheck(14, 128);
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck(6, 2147483645);
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 70
  /*
   * 48 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1642
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 14. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 19. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 20. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 21. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 22. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 23. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 24. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 25. Weak Mutation 3049: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 28. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 29. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 30. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 32. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 33. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 34. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 35. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 36. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 37. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 38. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 39. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 48. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test070()  throws Throwable  {
      int int0 = MathUtils.indicator(1802);
      double double0 = MathUtils.factorialLog(1884);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = 12328.220784469706;
      doubleArray0[2] = 12328.220784469706;
      doubleArray0[3] = (-625.69);
      double double1 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      try { 
        MathUtils.pow((BigInteger) null, (-1922));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (null^-1,922)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 71
  /*
   * 125 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 29. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 33. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 37. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 38. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 39. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 40. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 41. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 42. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 43. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 44. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 46. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 47. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 50. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 52. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 57. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   * Goal 59. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 61. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 62. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 63. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 67. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 68. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 69. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 70. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 95. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 96. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 97. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 98. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 99. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 100. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false
   * Goal 101. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 102. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 103. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 104. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 105. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 106. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 107. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 108. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 109. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 110. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 111. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 112. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 113. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 114. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 115. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 116. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 117. Weak Mutation 1793: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> <=
   * Goal 118. Weak Mutation 2969: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> -1
   * Goal 119. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   */

  @Test
  public void test071()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 3128.47764828, 131);
      double double0 = MathUtils.indicator(0.0);
      int int0 = MathUtils.gcd(838, (-3802));
      short short0 = MathUtils.indicator((short)0);
      int[] intArray0 = new int[8];
      intArray0[0] = 838;
      intArray0[1] = 131;
      intArray0[2] = (int) (short)1;
      intArray0[3] = 2;
      intArray0[4] = 838;
      intArray0[5] = (int) (short)0;
      intArray0[6] = (-1130);
      intArray0[7] = (int) (short)0;
      double double1 = MathUtils.distance(intArray0, intArray0);
      try { 
        MathUtils.pow((long) (short)0, (long) (-1130));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (0^-1,130)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 72
  /*
   * 123 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1344
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1345
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 10. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 12. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 17. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 18. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 19. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 20. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 21. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 24. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 25. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 50. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 51. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 52. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 55. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 60. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 61. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 62. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 63. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 64. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 65. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 66. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 69. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 71. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 72. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 73. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 74. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 75. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 76. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 77. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 78. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 79. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 80. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 81. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 84. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 85. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 86. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 87. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 88. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   * Goal 89. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 90. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:positive
   * Goal 91. org.apache.commons.math.util.MathUtils.round(FII)F:negative
   * Goal 92. org.apache.commons.math.util.MathUtils.indicator(F)F:negative
   * Goal 93. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 94. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 95. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 96. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 97. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 98. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 99. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 100. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 101. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 102. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 103. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 104. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true in context: 
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   */

  @Test
  public void test072()  throws Throwable  {
      double double0 = MathUtils.indicator(0.0);
      int int0 = MathUtils.subAndCheck(1024, 192);
      float float0 = MathUtils.indicator((-878.82F));
      double double1 = MathUtils.sinh(0.0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 192, 3.0);
      float float1 = MathUtils.round((-1.0F), 8, 0);
  }

  //Test case number: 73
  /*
   * 96 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 34. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 35. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 37. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 38. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 39. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 40. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 41. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 42. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 43. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 44. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 45. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 46. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 47. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 48. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 49. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 50. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 51. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 52. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 53. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 55. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 56. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 57. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 58. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 60. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 61. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 63. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 64. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 65. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 66. Weak Mutation 1804: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> <=
   * Goal 67. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 1958: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> -1
   * Goal 71. Weak Mutation 1962: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1032 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 73. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 74. Weak Mutation 1811: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> >
   * Goal 75. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 77. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 79. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 95. lcm(II)I_java.lang.ArithmeticException_EXPLICIT
   * Goal 96. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1032
   */

  @Test
  public void test073()  throws Throwable  {
      long long0 = MathUtils.gcd(8929233623953965054L, 8929233623953965054L);
      // Undeclared exception!
      try { 
        MathUtils.lcm((-2146834591), (-3154));
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 74
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false
   * Goal 3. Weak Mutation 2969: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> -1
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 6. pow(JJ)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test074()  throws Throwable  {
      try { 
        MathUtils.pow((-2326L), (-2326L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-2,326^-2,326)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 75
  /*
   * 67 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1830
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1831
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 24. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 25. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 3407: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> !=
   * Goal 28. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 3406: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> -2
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 31. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 33. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 34. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 35. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 36. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 46. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 47. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 51. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 52. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 53. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 54. Weak Mutation 1255: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> *
   * Goal 55. Weak Mutation 1256: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> /
   * Goal 56. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 57. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 58. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 59. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 60. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 61. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 62. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test075()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(81);
      int int0 = MathUtils.sign(0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 5.797126020747554E120;
      doubleArray0[2] = 3786.0;
      doubleArray0[3] = 5.797126020747554E120;
      doubleArray0[4] = 0.0;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly increasing (5,797,126,020,747,554,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000 >= 3,786)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 76
  /*
   * 59 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 18. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 21. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 24. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 25. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 26. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 27. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 28. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 35. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 36. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 37. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 38. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 39. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 40. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 41. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 42. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 43. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 44. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 45. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 52. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 55. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 57. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   */

  @Test
  public void test076()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 108.8364;
      doubleArray0[1] = 0.5;
      doubleArray0[2] = Double.NEGATIVE_INFINITY;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      int int0 = MathUtils.compareTo(0.0, 1382.0, 0.5);
  }

  //Test case number: 77
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1060
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 7. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 9. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 10. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 11. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 12. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 13. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 14. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 15. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 16. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 17. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 18. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 20. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 21. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - true
   * Goal 25. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 26. Weak Mutation 2003: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> -2
   * Goal 27. Weak Mutation 2014: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1060 - ReplaceComparisonOperator == -> !=
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 31. mulAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test077()  throws Throwable  {
      double double0 = MathUtils.cosh((-2765.8562));
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck((-9218868437227405313L), (-9218868437227405313L));
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 78
  /*
   * 61 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 367
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 29. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 30. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 33. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 35. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 39. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 40. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 41. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 42. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 44. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 47. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 48. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 49. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   * Goal 50. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   * Goal 51. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 52. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 54. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 60. binomialCoefficientLog(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   */

  @Test
  public void test078()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(3365.0, 3365.0);
      int int0 = MathUtils.mulAndCheck(457, 457);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog((-2842), 208849);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = -2,842, k = 208,849
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 79
  /*
   * 49 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1830
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 586
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1870
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 16. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false
   * Goal 29. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 32. Weak Mutation 3406: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> -2
   * Goal 33. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 34. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 1200: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> -1
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 39. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 40. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 43. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 49. factorial(I)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test079()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-5435.53331427666);
      doubleArray0[1] = 0.0;
      MathUtils.checkOrder(doubleArray0);
      double double0 = MathUtils.binomialCoefficientDouble(0, 0);
      // Undeclared exception!
      try { 
        MathUtils.factorial((-1597));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,597
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 80
  /*
   * 107 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 18. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 22. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 24. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 25. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 26. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 27. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 28. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 29. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 30. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 31. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 35. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 36. Weak Mutation 3051: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 38. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 39. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 42. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 44. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   * Goal 45. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 46. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   * Goal 47. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 48. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 49. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 50. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 51. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 52. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 53. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 54. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 55. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 56. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 57. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 58. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 77. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 79. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 82. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 85. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - false
   * Goal 86. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 87. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 88. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 89. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 90. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 91. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 92. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 93. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 94. Weak Mutation 2543: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> -1
   * Goal 95. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 96. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 97. org.apache.commons.math.util.MathUtils.sign(D)D:zero
   * Goal 98. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   * Goal 99. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 100. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   */

  @Test
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      int int0 = bigInteger0.intValue();
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (int) (byte)0);
      int int1 = bigInteger1.getLowestSetBit();
      BigInteger bigInteger2 = bigInteger1.max(bigInteger0);
      double double0 = bigInteger1.doubleValue();
      BigInteger bigInteger3 = bigInteger0.not();
      BigInteger bigInteger4 = bigInteger0.add(bigInteger1);
      BigInteger bigInteger5 = BigInteger.valueOf((-1959L));
      BigInteger bigInteger6 = bigInteger0.pow(0);
      int int2 = bigInteger0.intValueExact();
      double double1 = MathUtils.sinh(0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (byte)0;
      doubleArray0[1] = (double) (byte)0;
      doubleArray0[2] = (double) (byte)0;
      doubleArray0[3] = (double) (byte)0;
      doubleArray0[4] = (double) (byte)0;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      float float0 = MathUtils.round((float) (byte)0, 548);
      double double2 = MathUtils.sign((double) (byte)0);
      float float1 = MathUtils.indicator((float) 0);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      int int3 = MathUtils.addAndCheck((-3934), 0);
  }

  //Test case number: 81
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 7. Weak Mutation 990: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> ==
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 9. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   */

  @Test
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equals(10.0, 10.0, (-1300));
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 82
  /*
   * 79 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1058
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1347
   * Goal 6. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 24. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 26. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 27. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 28. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 29. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 30. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 31. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 32. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 35. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 36. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 37. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 38. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 39. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 40. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 41. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 42. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 44. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 45. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 47. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 49. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 60. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true
   * Goal 64. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 65. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 66. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 67. Weak Mutation 2631: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> >
   * Goal 68. Weak Mutation 2637: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> ==
   * Goal 69. org.apache.commons.math.util.MathUtils.sign(S)S:negative
   * Goal 70. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 72. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 73. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true in context: 
   */

  @Test
  public void test082()  throws Throwable  {
      double double0 = MathUtils.sign(2676.2351393701533);
      short short0 = MathUtils.sign((short) (-2597));
      long long0 = MathUtils.mulAndCheck((-2002L), (long) (short) (-2597));
      // Undeclared exception!
      try { 
        MathUtils.round(647.8011F, 0, (int) (short) (-2597));
      } catch(IllegalArgumentException e) {
         //
         // invalid rounding method -2,597, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 83
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 13. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 15. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 17. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 18. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 19. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true in context: 
   * Goal 30. round(FII)F_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.round(90.832F, 659, 205);
      } catch(IllegalArgumentException e) {
         //
         // invalid rounding method 205, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 84
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1834
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 12. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 15. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 21. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false
   * Goal 24. Weak Mutation 3418: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1835
   */

  @Test
  public void test084()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 242.47602;
      doubleArray0[1] = 7.549789948768648E-8;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1373.151241);
      doubleArray0[4] = 1156.52740794887;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not increasing (242.476 > 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 85
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 162
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 5. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 6. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 7. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - true
   * Goal 13. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 14. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 15. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 16. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 17. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 18. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 20. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 22. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 23. Weak Mutation 125: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> -2
   * Goal 24. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 25. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 29. subAndCheck(JJ)J_org.evosuite.runtime.mock.java.lang.MockArithmeticException_EXPLICIT
   */

  @Test
  public void test085()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(113, 113);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      // Undeclared exception!
      try { 
        MathUtils.subAndCheck(953L, 9223372036854775807L);
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 953 + -9,223,372,036,854,775,807
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 86
  /*
   * 72 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 6. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 20. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 21. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 22. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 23. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 24. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 25. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 28. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 29. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 30. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 31. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 32. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 33. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 34. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 35. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 38. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - true
   * Goal 48. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 49. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 50. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 51. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 54. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 55. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 56. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 57. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 58. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 60. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 61. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 63. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 64. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 65. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 66. Weak Mutation 2035: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> -2
   * Goal 67. Weak Mutation 2046: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1067 - ReplaceComparisonOperator == -> !=
   * Goal 68. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 69. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 70. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 72. lcm(JJ)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test086()  throws Throwable  {
      double double0 = MathUtils.cosh((-428.4516384807));
      // Undeclared exception!
      try { 
        MathUtils.lcm(9218868437227405312L, (-515L));
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 87
  /*
   * 191 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 25. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 27. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 28. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 33. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 39. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 41. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 42. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 43. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 44. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 45. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 48. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 49. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 50. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 51. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 52. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 55. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 56. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 57. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 58. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 59. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 60. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 61. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 62. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 63. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 64. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 65. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 66. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 67. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 68. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 69. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 70. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 71. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 72. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 73. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 74. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 75. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 76. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 89. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 90. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 91. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 92. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 93. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 94. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 95. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 96. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 97. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 98. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - false
   * Goal 99. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I15 Branch 181 IFGE L1499 - false
   * Goal 100. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 101. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 102. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 103. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 104. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 105. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 106. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 107. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 108. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 109. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 110. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 111. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 112. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 113. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 114. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 115. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 116. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 117. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 118. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 119. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 120. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 121. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 122. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 123. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 124. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 125. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 126. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 127. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 128. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 129. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 130. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 131. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 132. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 133. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 134. Weak Mutation 2712: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> -1
   * Goal 135. Weak Mutation 2719: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1499 - ReplaceComparisonOperator >= -> -1
   * Goal 136. Weak Mutation 2727: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1500 - ReplaceArithmeticOperator - -> %
   * Goal 137. Weak Mutation 2728: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1500 - ReplaceArithmeticOperator - -> *
   * Goal 138. Weak Mutation 2729: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1500 - ReplaceArithmeticOperator - -> /
   * Goal 139. Weak Mutation 2834: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> >
   * Goal 140. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 141. Weak Mutation 2971: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> >
   * Goal 142. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 143. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 144. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 145. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 146. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 147. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 148. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 149. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:positive
   * Goal 150. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 151. org.apache.commons.math.util.MathUtils.round(DII)D:zero
   * Goal 152. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 153. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   * Goal 154. org.apache.commons.math.util.MathUtils.pow(JJ)J:positive
   * Goal 155. org.apache.commons.math.util.MathUtils.log(DD)D:negative
   * Goal 156. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 157. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 158. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 159. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 160. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 161. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 162. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I15 Branch 181 IFGE L1499 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 191. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1500
   */

  @Test
  public void test087()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-1547.111866);
      doubleArray1[1] = 0.0;
      double double0 = MathUtils.distance1(doubleArray0, doubleArray1);
      long long0 = MathUtils.pow((-9223372036854775808L), 0L);
      byte byte0 = MathUtils.sign((byte)118);
      float float0 = MathUtils.sign((float) 1L);
      double double1 = MathUtils.safeNorm(doubleArray1);
      double double2 = MathUtils.round((double) 0L, 37, 0);
      int int0 = MathUtils.pow(37, (long) 0);
      int int1 = MathUtils.gcd(37, 1);
      long long1 = MathUtils.subAndCheck((-371L), (-9223372036854775808L));
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (byte)118, (-765.214));
      double double3 = MathUtils.sinh((byte)118);
      double double4 = MathUtils.log(1759.9538731944838, 0.3333333333333333);
  }

  //Test case number: 88
  /*
   * 200 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 14. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 32. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 34. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 36. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 37. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 38. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 39. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 40. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 41. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 42. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 43. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 44. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 45. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 46. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 47. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 50. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 52. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 53. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 55. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 56. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 59. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 60. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 61. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 62. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 63. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 64. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 65. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 67. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 68. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 69. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 70. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 71. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 72. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 73. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 88. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 89. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 90. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 91. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 92. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 93. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 94. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 95. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 96. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 97. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 98. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 99. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 100. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 101. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 102. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 103. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 104. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 105. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 106. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 107. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 108. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 109. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 110. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 111. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 112. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 113. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 114. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 115. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 116. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 117. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 118. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 119. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 120. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 121. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 122. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 123. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 124. Weak Mutation 941: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> >=
   * Goal 125. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 126. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 127. Weak Mutation 1227: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> >
   * Goal 128. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 129. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 130. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 131. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 132. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 133. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 134. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 135. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 136. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 137. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 138. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 139. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 140. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 141. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 142. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 143. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 144. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 145. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 146. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 147. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 148. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 149. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 150. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 151. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 152. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 153. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 154. org.apache.commons.math.util.MathUtils.safeNorm([D)D:zero
   * Goal 155. org.apache.commons.math.util.MathUtils.pow(II)I:zero
   * Goal 156. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 157. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 158. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   * Goal 159. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 160. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   * Goal 161. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 162. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 163. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 164. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   * Goal 165. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 166. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 167. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 168. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 169. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 170. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 171. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 172. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 173. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 174. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 175. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 176. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 177. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 178. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 179. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 180. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   */

  @Test
  public void test088()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(3.834E-20, 3.834E-20, 6.283185307179586);
      int int0 = MathUtils.compareTo(4119.9574047, 0.0, 4119.9574047);
      long long0 = MathUtils.indicator(40320L);
      double double0 = MathUtils.factorialDouble(0);
      double[] doubleArray0 = new double[0];
      double double1 = MathUtils.safeNorm(doubleArray0);
      int int1 = MathUtils.pow(0, 4141);
      long long1 = MathUtils.subAndCheck((long) 0, 0L);
      double double2 = MathUtils.sign(0.19999998807907104);
      double double3 = MathUtils.factorialLog(0);
      float float0 = MathUtils.round((float) 0, 0);
      double double4 = MathUtils.log((-1279.02), 2695.631321790026);
      int int2 = MathUtils.hash(doubleArray0);
      int int3 = MathUtils.sign(2828);
  }

  //Test case number: 89
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 10. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 11. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 14. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 15. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 16. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 17. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 18. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 19. Weak Mutation 2971: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> >
   * Goal 20. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 21. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 22. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JJ)J:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 26. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 29. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 36. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   */

  @Test
  public void test089()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-118));
      long long0 = MathUtils.subAndCheck(0L, 0L);
      long long1 = MathUtils.pow(0L, 0L);
  }

  //Test case number: 90
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 6. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 7. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 8. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 11. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 13. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 18. org.apache.commons.math.util.MathUtils.round(DI)D:zero
   * Goal 19. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   */

  @Test
  public void test090()  throws Throwable  {
      double double0 = MathUtils.sign(3177.0915);
      double double1 = MathUtils.round(0.0, (-1334));
  }

  //Test case number: 91
  /*
   * 112 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 28. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 35. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 36. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 37. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 38. Weak Mutation 3051: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 41. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 42. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 43. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 44. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 45. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 46. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 47. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 48. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 49. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 50. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 51. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 52. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 53. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 60. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 61. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 62. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 63. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 3449: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> <
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   * Goal 66. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 67. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 68. org.apache.commons.math.util.MathUtils.safeNorm([D)D:zero
   * Goal 69. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 70. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 72. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 73. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 74. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 75. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 76. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 77. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 78. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 79. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 80. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 81. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 82. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 83. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 84. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 85. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 86. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 110. org.apache.commons.math.util.MathUtils.round(DII)D:positive
   * Goal 111. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 112. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   */

  @Test
  public void test091()  throws Throwable  {
      double double0 = MathUtils.scalb(2025.4872535913, 0);
      long long0 = MathUtils.mulAndCheck((long) 0, (-737L));
      long long1 = MathUtils.indicator(0L);
      double double1 = MathUtils.sinh(2.4384203044354907E-8);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      double double2 = MathUtils.safeNorm(doubleArray0);
      double double3 = MathUtils.round(2.4384203045624275E-8, 0, 0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 0);
  }

  //Test case number: 92
  /*
   * 114 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false
   * Goal 23. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 25. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 26. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 27. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 28. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 29. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 30. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 31. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 32. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 33. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 34. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 35. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 38. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 39. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 40. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 42. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 44. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 47. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 48. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 49. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 50. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 51. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 52. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 53. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 54. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 55. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 56. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 57. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 58. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 59. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 61. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 64. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 65. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 66. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 67. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 68. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 69. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 70. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 71. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 72. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 73. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 74. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 75. Weak Mutation 2328: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> /
   * Goal 76. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   * Goal 77. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 78. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 79. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 80. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 81. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 82. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 83. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 84. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 85. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 86. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 87. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 88. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 89. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 90. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 111. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 112. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 113. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 114. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 892
   */

  @Test
  public void test092()  throws Throwable  {
      float float0 = MathUtils.round(Float.NaN, 36);
      float float1 = MathUtils.round(Float.NaN, 453);
      double double0 = MathUtils.normalizeAngle(764.48912, Float.NaN);
      int[] intArray0 = new int[7];
      intArray0[0] = 453;
      intArray0[1] = 453;
      intArray0[2] = 453;
      intArray0[3] = 36;
      intArray0[4] = 36;
      intArray0[5] = 36;
      intArray0[6] = 453;
      int int0 = MathUtils.distance1(intArray0, intArray0);
      long long0 = MathUtils.indicator(1L);
      int int1 = MathUtils.pow(453, 36);
  }

  //Test case number: 93
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true
   * Goal 5. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 6. Weak Mutation 2545: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> >
   * Goal 7. Weak Mutation 2555: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> ==
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   */

  @Test
  public void test093()  throws Throwable  {
      double double0 = MathUtils.sign((double) (-1334));
  }

  //Test case number: 94
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 624
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 8. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 9. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 10. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 12. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 13. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 14. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 15. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 17. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 19. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 20. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 23. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 25. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 26. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 27. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   */

  @Test
  public void test094()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1938);
      intArray0[1] = (-993);
      intArray0[2] = 1862;
      intArray0[3] = 0;
      intArray0[4] = 11;
      intArray0[5] = 2651;
      intArray0[6] = 214;
      intArray0[7] = 31;
      double double0 = MathUtils.distance(intArray0, intArray0);
      double double1 = MathUtils.factorialDouble(11);
  }

  //Test case number: 95
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 8. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 9. Weak Mutation 2907: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> >
   * Goal 10. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 17. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 24. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 649
   */

  @Test
  public void test095()  throws Throwable  {
      double double0 = MathUtils.factorialLog(0);
      long long0 = MathUtils.pow(2819561105158720014L, 0);
  }

  //Test case number: 96
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 9. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 10. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 3407: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> !=
   * Goal 12. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test096()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2019.33;
      doubleArray0[1] = 1567.4;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly increasing (2,019.33 >= 1,567.4)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 97
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 586
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 18. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 21. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 25. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 28. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   * Goal 31. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 35. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false
   * Goal 36. Weak Mutation 1200: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 38. factorial(I)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test097()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0, 2752.398850173);
      // Undeclared exception!
      try { 
        MathUtils.factorial((-1269));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,269
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 98
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - false
   * Goal 13. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 14. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 15. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 16. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 19. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 20. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 21. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 22. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 25. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 26. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 27. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 172: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> -1
   * Goal 29. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 32. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 34. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   * Goal 35. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 36. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 37. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 38. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 39. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 44. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 45. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 46. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 47. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 59. binomialCoefficientDouble(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 60. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   */

  @Test
  public void test098()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(0, 0);
      long long0 = MathUtils.indicator(0L);
      int int1 = MathUtils.sign(0);
      long long1 = MathUtils.binomialCoefficient(539, 0);
      int int2 = MathUtils.mulAndCheck(0, (-105));
      long long2 = MathUtils.lcm(0L, 0L);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientDouble((-105), 539);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = -105, k = 539
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 99
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 9. Weak Mutation 3067: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> >
   * Goal 10. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 11. Weak Mutation 1982: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 13. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 14. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 15. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 21. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 23. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 25. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   */

  @Test
  public void test099()  throws Throwable  {
      long long0 = MathUtils.lcm(0L, 0L);
      long long1 = MathUtils.mulAndCheck(0L, 0L);
      long long2 = MathUtils.sign(479001600L);
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-31);
      byteArray0[4] = (byte) (-33);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (long) (byte)0);
  }

  //Test case number: 100
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 372
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 6. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false
   * Goal 8. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 9. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 10. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 11. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 12. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 13. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 784: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> -1
   * Goal 15. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   * Goal 16. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 18. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false in context: 
   * Goal 22. binomialCoefficient(II)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test100()  throws Throwable  {
      double double0 = MathUtils.sinh(0.0);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient((-730), (-2100));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k), got n = -730
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 101
  /*
   * 86 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true
   * Goal 26. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 31. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 33. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 36. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 37. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 40. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1802: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> -2
   * Goal 42. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 45. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 48. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 49. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 52. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 53. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 55. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 56. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 57. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 58. Weak Mutation 569: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> -2
   * Goal 59. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 60. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 62. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 63. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 64. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 65. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 66. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 67. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 68. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 69. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 70. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 71. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 72. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 73. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 84. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 314
   * Goal 86. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   */

  @Test
  public void test101()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(4, 4);
      boolean boolean0 = MathUtils.equalsIncludingNaN(2.384185791015625E-7, 2.384185791015625E-7, 2.384185791015625E-7);
      float float0 = MathUtils.sign((-3019.7F));
      int int0 = MathUtils.compareTo(1.494140625, 0.0, 0.07490822288864472);
      double[] doubleArray0 = new double[0];
      int int1 = MathUtils.compareTo(4, 2.2250738585072014E-308, (-3019.7F));
      int int2 = MathUtils.lcm(0, 4);
  }

  //Test case number: 102
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 3. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 4. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 6. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 8. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1336
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 13. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 14. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 26. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false
   * Goal 29. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 31. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 32. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 33. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 34. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 35. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 37. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 38. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 39. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 40. Weak Mutation 1804: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> <=
   * Goal 41. Weak Mutation 1809: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> -1
   * Goal 42. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FI)F:negative
   * Goal 44. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 45. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 46. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 47. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   */

  @Test
  public void test102()  throws Throwable  {
      float float0 = MathUtils.round((-885.107F), 0);
      int int0 = MathUtils.lcm((-3359), 0);
  }

  //Test case number: 103
  /*
   * 67 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 23. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 24. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 25. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 26. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 27. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 30. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 31. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 32. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 33. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 34. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 35. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 36. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 37. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 38. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 39. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 40. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 41. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 42. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 43. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 44. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 45. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 46. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 47. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 48. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 49. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 50. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 51. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 53. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 56. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 57. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 58. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 59. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 60. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 61. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 62. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 63. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 64. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   */

  @Test
  public void test103()  throws Throwable  {
      long long0 = MathUtils.lcm((-7278142539171889152L), (-7278142539171889152L));
  }

  //Test case number: 104
  /*
   * 75 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 32. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 33. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 38. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 39. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 42. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 46. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 47. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 48. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 49. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 50. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 51. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 52. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 53. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 54. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 55. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 56. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 57. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 58. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 60. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 62. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 63. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 64. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(JJ)J:negative
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 72. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 73. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 74. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 75. org.apache.commons.math.util.MathUtils.pow(JJ)J
   */

  @Test
  public void test104()  throws Throwable  {
      long long0 = MathUtils.pow(2047L, 2047L);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (-9220363768746215425L), 21.0);
  }

  //Test case number: 105
  /*
   * 62 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 15. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 17. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 18. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 23. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 24. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 28. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 30. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 32. org.apache.commons.math.util.MathUtils.hash(D)I:zero
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 34. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 35. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 36. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 47. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 48. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 49. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 50. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 52. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 53. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 54. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 56. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   */

  @Test
  public void test105()  throws Throwable  {
      int int0 = MathUtils.hash(0.0);
      int int1 = MathUtils.mulAndCheck(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = 0.0;
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
  }

  //Test case number: 106
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 9. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 15. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 16. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1830
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1831
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 41. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 45. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 48. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 50. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 55. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 2744: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> >
   * Goal 57. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 58. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 61. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 63. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   * Goal 64. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 67. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 68. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 69. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 70. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 71. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 72. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 73. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 85. checkOrder([D)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 86. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 87. Weak Mutation 3408: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> >=
   * Goal 88. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   */

  @Test
  public void test106()  throws Throwable  {
      long long0 = MathUtils.indicator(635L);
      int int0 = MathUtils.pow(246, 0);
      boolean boolean0 = MathUtils.equals((double) 0, (double) 635L, 1);
      byte byte0 = MathUtils.indicator((byte)0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1L;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly increasing (1 >= 1)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 107
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 8. Weak Mutation 3050: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> ==
   * Goal 9. Weak Mutation 3067: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> >
   * Goal 10. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   */

  @Test
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (int) (byte)99);
      BigInteger bigInteger2 = MathUtils.pow(bigInteger1, (long) (byte)0);
  }

  //Test case number: 108
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 3. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 4. Weak Mutation 2907: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> >
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   */

  @Test
  public void test108()  throws Throwable  {
      long long0 = MathUtils.pow(2819561105158720014L, 0);
  }

  //Test case number: 109
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 2. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 3. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 4. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 5. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 6. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 7. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 8. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 9. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   */

  @Test
  public void test109()  throws Throwable  {
      double double0 = MathUtils.log((-1388.4065661245966), 3.141592653589793);
  }

  //Test case number: 110
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 5. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 6. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 7. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 9. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 10. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 11. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 12. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 13. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 14. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 16. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   */

  @Test
  public void test110()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-412.0);
      double double0 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      short short0 = MathUtils.indicator((short)1719);
      byte[] byteArray0 = new byte[0];
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger(byteArray0);
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 111
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 13. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 18. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 19. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 20. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 21. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 22. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 23. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 28. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 32. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 34. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 35. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 36. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 37. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 38. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 39. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   */

  @Test
  public void test111()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN((-2.6033824355191673E-8), (-0.2499999997677497), (-0.2499999997677497));
  }

  //Test case number: 112
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 8. Weak Mutation 3109: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> ==
   * Goal 9. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 10. Weak Mutation 3129: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1700 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1698
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1699
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1700
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1701
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1703
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1704
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1707
   * Goal 29. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 367
   * Goal 30. binomialCoefficientLog(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)28;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = MathUtils.pow(bigInteger0, bigInteger1);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog((-3052), 3);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = -3,052, k = 3
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 113
  /*
   * 3 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 2. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   */

  @Test
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, (BigInteger) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 114
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 6. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 7. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 8. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 9. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 10. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   * Goal 11. Weak Mutation 3103: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1674 - ReplaceBitwiseOperator >> -> <<
   * Goal 12. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1677
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1670
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1671
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1673
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1674
   */

  @Test
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (long) (byte)7);
  }

  //Test case number: 115
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 5. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 7. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 9. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 12. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 13. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 14. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 27. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 29. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 30. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 32. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 33. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 34. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 35. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 36. Weak Mutation 1793: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> <=
   * Goal 37. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   * Goal 38. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 40. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 41. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 42. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 43. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 56. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   */

  @Test
  public void test115()  throws Throwable  {
      short short0 = MathUtils.indicator((short)0);
      float float0 = MathUtils.round((float) (short)0, (-1674));
      // Undeclared exception!
      try { 
        MathUtils.round(1240.333, (int) (short)0, (-1449));
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 116
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 4. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 5. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 6. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 8. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 9. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 10. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 11. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 12. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 13. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 14. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 15. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 16. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   */

  @Test
  public void test116()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 12;
      intArray0[1] = 0;
      double double0 = MathUtils.distance(intArray0, intArray0);
  }

  //Test case number: 117
  /*
   * 112 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false
   * Goal 30. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 31. Weak Mutation 1214: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.factorial(I)J:591 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 35. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 37. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 38. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 40. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 41. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 42. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 43. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 44. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 45. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 46. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 47. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 49. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 50. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 51. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 52. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 53. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 55. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 56. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 57. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 58. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 59. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 60. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 61. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 62. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 63. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 64. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 65. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 66. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 67. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 68. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 69. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 70. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 71. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 72. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 73. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   * Goal 74. org.apache.commons.math.util.MathUtils.pow(JI)J:negative
   * Goal 75. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 76. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:negative
   * Goal 77. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 78. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 79. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 80. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 81. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 82. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 83. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 84. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 85. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 87. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   */

  @Test
  public void test117()  throws Throwable  {
      float float0 = MathUtils.sign(1.0F);
      float float1 = MathUtils.round((-6343.53F), 501);
      long long0 = MathUtils.pow((long) 501, 258);
      int int0 = MathUtils.mulAndCheck((-2066), 501);
      double double0 = MathUtils.indicator((double) (-1035066));
      // Undeclared exception!
      try { 
        MathUtils.factorial(443);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 118
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 4. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 5. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   */

  @Test
  public void test118()  throws Throwable  {
      double double0 = MathUtils.indicator(412.16);
  }

  //Test case number: 119
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 2. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 3. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 591
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false
   * Goal 8. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.factorial(I)J:591 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 10. Weak Mutation 1214: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.hash(D)I:positive
   * Goal 12. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 13. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 14. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 18. factorial(I)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test119()  throws Throwable  {
      int int0 = MathUtils.hash((-1574.3651732660737));
      // Undeclared exception!
      try { 
        MathUtils.factorial(795055569);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 120
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 6. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 7. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 8. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 9. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 10. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 11. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 12. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 13. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 14. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 15. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 16. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 17. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 18. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 19. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 20. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 21. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 22. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 24. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 25. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:negative
   * Goal 29. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 37. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 38. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   */

  @Test
  public void test120()  throws Throwable  {
      float float0 = MathUtils.sign(2127.9F);
      double double0 = MathUtils.normalizeAngle(2127.9F, 0.0);
  }

  //Test case number: 121
  /*
   * 125 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 240
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 241
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 242
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false
   * Goal 5. binomialCoefficient(II)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 714
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 715
   * Goal 53. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 54. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 55. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 56. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 57. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 58. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 59. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 60. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 61. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 62. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 63. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 64. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 65. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 66. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1945
   * Goal 67. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1946
   * Goal 68. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1947
   * Goal 69. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1948
   * Goal 70. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1949
   * Goal 71. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1971
   * Goal 72. Weak Mutation 3567: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> -1
   * Goal 73. Weak Mutation 3596: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> -1
   * Goal 74. Weak Mutation 3625: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1945 - ReplaceComparisonOperator <= -> -1
   * Goal 75. Weak Mutation 3654: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> +
   * Goal 76. Weak Mutation 3656: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> -
   * Goal 77. Weak Mutation 3690: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> %
   * Goal 78. Weak Mutation 3692: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> /
   * Goal 79. Weak Mutation 3708: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 3710: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> /
   * Goal 81. Weak Mutation 3711: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator + -> %
   * Goal 82. Weak Mutation 3714: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator + -> /
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 87. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 88. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 91. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 93. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 94. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 95. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 96. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 97. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 98. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 99. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 100. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 102. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 103. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 104. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 105. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 106. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 107. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 108. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 109. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 110. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 111. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 112. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 113. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 238
   * Goal 114. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 239
   * Goal 115. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 116. Weak Mutation 324: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> -2
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 124. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 125. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   */

  @Test
  public void test121()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-86.46028);
      doubleArray0[1] = 0.375;
      doubleArray0[2] = 8.251545029714408E-9;
      doubleArray0[3] = 261.0;
      doubleArray0[4] = (-2037.31586977);
      doubleArray0[5] = 1570.9228505886897;
      doubleArray0[6] = 1.304E19;
      double double0 = MathUtils.safeNorm(doubleArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1610612736;
      intArray0[1] = (-1808);
      intArray0[2] = 2;
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(1309, 567);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 122
  /*
   * 167 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 73. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 990
   * Goal 74. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 991
   * Goal 75. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 996
   * Goal 76. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 77. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 78. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1058
   * Goal 79. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 80. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 81. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 82. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 83. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 84. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 85. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 86. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 87. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 88. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 89. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 90. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 91. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 92. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 93. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 94. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 95. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 96. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 97. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 98. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 102. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 103. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 104. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 105. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 106. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 107. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 108. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 109. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 110. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 111. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 112. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 113. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 114. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 115. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 116. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 117. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 118. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 119. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 120. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 121. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 125. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 126. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 127. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 128. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 129. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 130. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 132. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 133. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 134. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 135. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 136. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 137. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 138. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 139. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 141. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 142. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 143. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 144. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 145. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 146. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 147. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 148. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 149. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 150. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 151. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 152. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 153. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 154. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 155. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 162. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 163. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 164. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 166. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   * Goal 167. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   */

  @Test
  public void test122()  throws Throwable  {
      long long0 = MathUtils.pow(206L, 206L);
      long long1 = MathUtils.lcm(0L, 0L);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 206L, (double) 206L, 2619.1369358263);
      int int0 = MathUtils.addAndCheck(0, 508);
      long long2 = MathUtils.pow((-293L), 508);
      short short0 = MathUtils.sign((short)243);
      int int1 = MathUtils.compareTo((-516.58), 0L, 3048454481052245009L);
      int int2 = MathUtils.pow((int) (short)243, (long) (short)243);
      long long3 = MathUtils.lcm((-393L), (long) (-1018275925));
      int[] intArray0 = new int[0];
      int int3 = MathUtils.distance1(intArray0, intArray0);
      int int4 = MathUtils.gcd(0, (-2819));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-516.58);
      doubleArray0[1] = (double) (short)243;
      doubleArray0[2] = 401.2;
      doubleArray0[3] = (double) 508;
      doubleArray0[4] = (double) (-1018275925);
      doubleArray0[5] = 1986.5736287;
      doubleArray0[6] = (double) 2819;
      doubleArray0[7] = (double) (-1018275925);
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 123
  /*
   * 156 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 12. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 15. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 37. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 38. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 955
   * Goal 39. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 40. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 956
   * Goal 41. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 42. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 44. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 75. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 80. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 81. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 83. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 84. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 85. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 86. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 87. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 88. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 89. Weak Mutation 1106: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 91. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 93. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 94. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 95. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 96. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 97. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 98. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 99. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 100. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 101. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 103. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 874: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> >
   * Goal 105. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 106. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 107. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 108. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 109. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 110. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 111. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 112. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 113. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 114. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 115. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 116. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 117. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 118. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 119. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 120. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 121. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:false
   * Goal 122. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 123. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 124. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   * Goal 125. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 126. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 127. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 128. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 143. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 144. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 145. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 146. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 147. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 148. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 149. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 150. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 151. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 152. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 153. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 154. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 155. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 156. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   */

  @Test
  public void test123()  throws Throwable  {
      byte byte0 = (byte)17;
      byte byte1 = MathUtils.indicator((byte)17);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (byte)17, (double) (byte)1, (int) (byte)1);
      int int0 = MathUtils.lcm((int) (byte)17, 2294);
      int int1 = MathUtils.sign((int) (byte)17);
      float float0 = MathUtils.indicator((float) 2294);
      int int2 = MathUtils.indicator((int) (byte)17);
      boolean boolean1 = MathUtils.equals(0.75, 563.4874766589);
      int[] intArray0 = new int[0];
      int int3 = MathUtils.distanceInf(intArray0, intArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      MockRandom mockRandom0 = new MockRandom((long) (byte)17);
      // Undeclared exception!
      try { 
        BigInteger.probablePrime((byte)1, mockRandom0);
      } catch(ArithmeticException e) {
         //
         // bitLength < 2
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 124
  /*
   * 318 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 75. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 80. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 82. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 83. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 84. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 85. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 87. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 88. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 89. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1587
   * Goal 90. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1588
   * Goal 91. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1589
   * Goal 92. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1590
   * Goal 93. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1591
   * Goal 94. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1593
   * Goal 95. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1594
   * Goal 96. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1597
   * Goal 97. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 98. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 99. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 100. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 101. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 102. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 103. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 104. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 105. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 106. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 107. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 108. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 109. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 110. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 111. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 112. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 113. org.apache.commons.math.util.MathUtils.pow(JI)J:negative
   * Goal 114. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 115. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 121. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 122. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 123. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 124. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 125. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 126. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 127. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 128. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 129. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 130. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 131. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 132. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 133. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 134. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 135. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 136. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 137. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 138. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 139. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 140. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 141. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 142. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 143. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 144. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 145. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 146. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 147. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 148. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 149. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 150. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 151. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 152. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 153. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 154. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 155. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 156. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 157. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 158. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 159. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 160. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 161. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 162. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 164. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 165. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 166. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 167. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 168. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 169. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 170. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 171. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 172. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 173. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 177. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 178. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 179. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 180. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 181. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 182. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 183. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 184. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 185. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 186. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 187. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 188. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 189. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 190. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 191. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 192. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 195. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 196. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 197. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 198. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 199. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 200. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 201. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 202. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 203. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 204. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 205. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 206. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 207. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 208. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 209. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 210. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 211. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 212. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 213. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 214. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 215. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 216. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 217. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 218. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 219. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 220. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 221. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 224. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 225. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 226. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 227. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 626
   * Goal 228. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 229. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 230. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 231. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 232. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 233. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 234. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 235. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 236. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 237. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 238. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 239. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 240. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 241. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 242. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 243. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 244. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 245. Weak Mutation 2594: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> >
   * Goal 246. Weak Mutation 2600: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> ==
   * Goal 247. org.apache.commons.math.util.MathUtils.sign(I)I:negative
   * Goal 248. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 249. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 252. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 253. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 254. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 255. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 256. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 257. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 258. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 259. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 260. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 261. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 262. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 263. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 264. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 265. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 266. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 267. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:positive
   * Goal 268. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 269. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 270. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 271. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 272. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 273. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 274. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 275. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 276. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 277. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 278. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 279. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 280. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 281. Weak Mutation 396: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> >
   * Goal 282. Weak Mutation 550: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> -
   * Goal 283. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 284. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 285. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 286. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1080
   * Goal 287. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 288. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 289. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 290. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 291. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1845
   * Goal 292. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1846
   * Goal 293. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 294. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 295. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 296. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 297. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 298. Weak Mutation 3447: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> -1
   * Goal 299. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 300. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 301. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 302. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 303. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 304. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 305. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 306. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 307. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 308. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 309. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 310. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 311. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 312. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 313. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 314. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 315. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 316. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 317. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 318. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test124()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(247, 153);
      long long0 = MathUtils.gcd(6722166367014452318L, 6722166367014452318L);
      long long1 = MathUtils.subAndCheck(4095L, 6722166367014452318L);
      long long2 = MathUtils.pow((-3029L), 2386);
      double double0 = MathUtils.factorialDouble(234);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 57.2957763671875;
      doubleArray0[1] = (double) 247;
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      long long3 = MathUtils.sign(6722166367014452318L);
      long long4 = MathUtils.mulAndCheck(6L, (long) 247);
      long long5 = MathUtils.gcd((long) 234, 0L);
      long long6 = MathUtils.indicator(4294967295L);
      double double1 = MathUtils.cosh(247);
      int int1 = MathUtils.addAndCheck((-212), 6);
      double double2 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      int int2 = MathUtils.sign((-212));
      boolean boolean1 = MathUtils.equals((double) (-212), 0.1666666505023083, (-43.94816));
      int int3 = MathUtils.hash(doubleArray0);
      double double3 = MathUtils.binomialCoefficientDouble(247, (-1));
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (-3122.32013618245);
      doubleArray1[1] = (double) 0L;
      doubleArray1[2] = (double) (-3029L);
      doubleArray1[3] = (double) 247;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray1, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not decreasing (-3,122.32 < 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 125
  /*
   * 62 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 23. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 24. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 25. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 26. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 27. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 33. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 34. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 36. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 37. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 38. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 41. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 42. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 551
   * Goal 45. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 554
   * Goal 46. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 555
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 559
   * Goal 48. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 51. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 52. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 54. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 56. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   */

  @Test
  public void test125()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 1565.0969852;
      doubleArray0[2] = 1994.0997120379;
      doubleArray0[4] = 1848.6598;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 5030.28955293;
      doubleArray0[7] = 1797.973495;
      doubleArray0[0] = (-98.3);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      int[] intArray0 = new int[8];
      intArray0[0] = 1909;
      intArray0[1] = 9;
      intArray0[2] = 21;
      intArray0[3] = (-63);
      intArray0[4] = (-1561076651);
      intArray0[5] = 1030;
      intArray0[6] = 4436;
      intArray0[7] = 847;
      double double0 = MathUtils.distance(intArray0, intArray0);
  }

  //Test case number: 126
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 19. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 24. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 26. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 29. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 31. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 32. Weak Mutation 1396: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> -
   * Goal 33. Weak Mutation 1397: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> *
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   */

  @Test
  public void test126()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = MathUtils.SAFE_MIN;
      double double1 = MathUtils.distance1(doubleArray0, doubleArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, 0.0, 0.0);
      int int0 = MathUtils.gcd(0, 5);
  }

  //Test case number: 127
  /*
   * 174 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1065
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 37. Weak Mutation 2036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> !=
   * Goal 38. Weak Mutation 2042: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> +
   * Goal 39. Weak Mutation 2043: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> %
   * Goal 40. Weak Mutation 2044: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> -
   * Goal 41. Weak Mutation 2045: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> /
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:negative
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 52. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 53. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1647
   * Goal 54. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 56. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 57. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 58. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 61. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 63. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 68. Weak Mutation 3051: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> >
   * Goal 69. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 70. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 71. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 72. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 73. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 74. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 78. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1064
   * Goal 79. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 80. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 81. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 82. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 83. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 84. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 85. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 86. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 87. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 88. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 92. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 93. Weak Mutation 1338: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> -1
   * Goal 94. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 95. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 96. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 97. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 101. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 102. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 103. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 104. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 105. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 106. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 107. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 108. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 109. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 110. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1182
   * Goal 111. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 112. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1188
   * Goal 113. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1189
   * Goal 114. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1192
   * Goal 115. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1195
   * Goal 116. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 117. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 118. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 119. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 120. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 122. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 123. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 124. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 125. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 126. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 127. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 128. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 129. org.apache.commons.math.util.MathUtils.equals(DDI)Z:true
   * Goal 130. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 131. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 132. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 133. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 134. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 149. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 150. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 151. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 152. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 153. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 154. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 155. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 156. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 157. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 158. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 159. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 160. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 161. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 162. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 163. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 164. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 165. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 166. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 167. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 171. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 173. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   */

  @Test
  public void test127()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1121.75372784706;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 436.5095);
      long long0 = MathUtils.mulAndCheck((-4750L), 2235L);
      double double0 = MathUtils.binomialCoefficientDouble(4, 4);
      double double1 = MathUtils.scalb((-10616250L), 16);
      boolean boolean0 = MathUtils.equals((double) (-10616250L), (double) (-10616250L), 176);
      int int0 = MathUtils.gcd(176, 0);
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 128
  /*
   * 147 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 31. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 33. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 34. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 35. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 36. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 38. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 39. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 40. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 41. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 42. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 43. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 44. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 45. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 47. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 50. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 51. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 52. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 53. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 54. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1959
   * Goal 55. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1966
   * Goal 56. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1976
   * Goal 57. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1977
   * Goal 58. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 59. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 60. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 61. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 62. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 63. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 64. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 74. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 75. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 76. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 77. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 78. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 79. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 80. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 82. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 83. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 84. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 87. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 88. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 89. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 90. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 91. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 92. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 95. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 96. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 97. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 98. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 285
   * Goal 99. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 286
   * Goal 100. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 287
   * Goal 101. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 290
   * Goal 102. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 103. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 104. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 106. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 107. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 108. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 109. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 110. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 111. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 112. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 113. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 114. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 115. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 116. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 117. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 118. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 119. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 120. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 121. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 122. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 123. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 124. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 125. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 126. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 127. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 128. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 129. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 130. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 131. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 132. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 133. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 134. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 135. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 136. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 137. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 138. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 332
   * Goal 139. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 333
   * Goal 140. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 141. Weak Mutation 636: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> -1
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 144. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1522
   * Goal 145. Weak Mutation 2742: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> -1
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 147. pow(II)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test128()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-24.847);
      doubleArray0[1] = 0.07490822288864472;
      doubleArray0[2] = 7.679939636684737;
      doubleArray0[3] = 2198.801;
      doubleArray0[4] = 1.1102230246251565E-16;
      doubleArray0[5] = 2311.823893;
      doubleArray0[6] = 0.0;
      double double0 = MathUtils.safeNorm(doubleArray0);
      double double1 = MathUtils.binomialCoefficientLog(242, 15);
      try { 
        MathUtils.pow(67, (-731));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (67^-731)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 129
  /*
   * 139 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 37. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 40. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 41. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 47. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 49. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 50. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 51. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 52. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 53. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 54. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 55. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 56. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 57. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 58. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 69. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 70. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 71. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 72. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 73. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 74. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 75. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 76. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 77. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 78. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 79. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 80. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 81. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 82. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 83. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 84. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 85. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 89. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 90. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 91. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 93. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 94. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 95. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1336
   * Goal 96. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 97. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 98. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 101. Weak Mutation 2971: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> >
   * Goal 102. org.apache.commons.math.util.MathUtils.pow(JJ)J:positive
   * Goal 103. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 104. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 105. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 106. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 107. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 108. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 112. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 113. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 114. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 115. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 116. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 117. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 988
   * Goal 118. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1072
   * Goal 119. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 120. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 121. Weak Mutation 69: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> >
   * Goal 122. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 123. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 124. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 125. Weak Mutation 1779: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> -2
   * Goal 126. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 127. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 128. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 129. org.apache.commons.math.util.MathUtils.indicator(J)J:negative
   * Goal 130. org.apache.commons.math.util.MathUtils.round(FI)F:negative
   * Goal 131. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 132. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:negative
   * Goal 133. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 134. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - true in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test129()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((-0.1666666567325592), (-1698.45019118128));
      long long0 = MathUtils.pow(2147483665L, 0L);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2147483665L;
      doubleArray0[1] = (-0.1666666567325592);
      doubleArray0[2] = 1044.5904;
      doubleArray0[3] = (-7.44321345601866E-11);
      doubleArray0[4] = (double) 2147483665L;
      doubleArray0[5] = (double) 0L;
      doubleArray0[6] = (-0.1666666567325592);
      int int0 = MathUtils.hash(doubleArray0);
      int int1 = MathUtils.pow(0, 2147483665L);
      long long1 = MathUtils.addAndCheck(0L, (-3958705157555305932L));
      long long2 = MathUtils.mulAndCheck((-3958705157555305932L), 0L);
      long long3 = MathUtils.indicator((-302932621132653753L));
      float float0 = MathUtils.round((-4743.414F), 0);
      long long4 = MathUtils.lcm(0L, 6227020800L);
  }

  //Test case number: 130
  /*
   * 255 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1560
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1561
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1563
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1564
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 18. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 23. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 24. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 25. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 26. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 27. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 32. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 33. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 35. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 36. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1735
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 38. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1736
   * Goal 39. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 40. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1738
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 43. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 44. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 50. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 51. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 55. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 56. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 57. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 58. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 59. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 60. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 61. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1783
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 63. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 64. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 66. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1785
   * Goal 67. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 68. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 69. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 71. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 79. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 82. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 85. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 87. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 88. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 89. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 90. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 91. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 92. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 93. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 94. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 95. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 96. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 97. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 98. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 99. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 100. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 101. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 102. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 103. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 104. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 105. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 106. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 107. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 108. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 109. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 110. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 111. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 112. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 113. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 114. Weak Mutation 3176: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> -
   * Goal 115. Weak Mutation 3177: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> *
   * Goal 116. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 117. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 118. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 119. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 120. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 121. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 122. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 123. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 124. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 125. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 126. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 127. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 128. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 129. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 130. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 131. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 132. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 133. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 134. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 135. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 136. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 137. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 138. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 139. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 140. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 141. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 142. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 143. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 144. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 145. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 146. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 147. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 148. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 149. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 150. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 151. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 152. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 153. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 154. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 155. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 156. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 157. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 158. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 159. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 160. Weak Mutation 2713: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> <
   * Goal 161. Weak Mutation 2744: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> >
   * Goal 162. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 163. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 164. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 165. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 166. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 167. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 168. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 169. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 170. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 171. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 172. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 173. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 174. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 175. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 176. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 177. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 178. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 179. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 180. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 181. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 182. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 183. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 184. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 185. org.apache.commons.math.util.MathUtils.distance1([D[D)D:positive
   * Goal 186. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 187. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 188. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 189. org.apache.commons.math.util.MathUtils.pow(IJ)I:zero
   * Goal 190. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 191. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 192. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 193. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:positive
   * Goal 194. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 195. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 196. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 197. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 198. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 199. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 200. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 201. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 202. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 203. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 204. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 205. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 206. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 207. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 208. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 209. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 210. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 211. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 212. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 213. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 214. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 215. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 216. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 217. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 218. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 219. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 220. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 241. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 242. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 243. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 244. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 245. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 246. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 247. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 248. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 249. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 252. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 253. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 254. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 255. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   */

  @Test
  public void test130()  throws Throwable  {
      int int0 = MathUtils.pow(120, (long) 120);
      double double0 = MathUtils.sinh(120);
      double double1 = MathUtils.binomialCoefficientDouble(0, 0);
      long long0 = MathUtils.indicator(0L);
      int int1 = MathUtils.gcd(2317, 515);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0L;
      double double2 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 515;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 1L;
      doubleArray1[5] = 6.520904391968161E51;
      doubleArray1[6] = 1.0;
      double double3 = MathUtils.distanceInf(doubleArray1, doubleArray1);
      int[] intArray0 = new int[1];
      intArray0[0] = 2317;
      int int2 = MathUtils.distance1(intArray0, intArray0);
      long long1 = MathUtils.subAndCheck(2473L, (-2147483648L));
      double double4 = MathUtils.distance1(doubleArray0, doubleArray1);
      int int3 = MathUtils.pow(2317, 0);
      double double5 = MathUtils.log(1L, (-1569.1817110679));
      int int4 = MathUtils.subAndCheck(0, 0);
      int[] intArray1 = new int[4];
      intArray1[0] = 515;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      int int5 = MathUtils.distance1(intArray1, intArray1);
  }
}
