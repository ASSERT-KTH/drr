* EvoSuite 1.0.4-SNAPSHOT
* Going to generate test cases for class: org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Starting client
* Connecting to master process on port 12807
* Analyzing classpath: 
  - /tmp/chart_1_Genprog_local_s1/lib/
  - /tmp/chart_1_Genprog_local_s1/lib/cobertura-2.0.3.jar
  - /tmp/chart_1_Genprog_local_s1/lib/jtestex-0.0.1.jar
  - /tmp/chart_1_Genprog_local_s1/lib/iText-2.1.4.jar
  - /tmp/chart_1_Genprog_local_s1/lib/junit.jar
  - /tmp/chart_1_Genprog_local_s1/lib/fixran-0.0.1.jar
  - /tmp/chart_1_Genprog_local_s1/lib/junit-4.11.jar
  - /tmp/chart_1_Genprog_local_s1/lib/servlet.jar
  - /tmp/chart_1_Genprog_local_s1/./outputMutation/AstorMain-Chart/bin/default/
[MASTER] 21:47:13.626 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
[MASTER] 21:47:13.626 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 519
  - Branch 274
  - Exception 0
  - MutationFactory 783
  - Output 340
  - Method 65
  - MethodNoException 65
  - CBranchFitnessFactory 274

[Progress:>                             0%] [Cov:>                                  0%]* Using seed 7
* Starting evolution

[Progress:>                             0%] [Cov:>                                  1%]
[Progress:>                             0%] [Cov:====>                              14%]
[Progress:>                             0%] [Cov:=====>                             15%]
[Progress:>                             0%] [Cov:=====>                             15%]
[Progress:>                             0%] [Cov:=====>                             16%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      36%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:============>                      37%]
[Progress:>                             0%] [Cov:=============>                     38%]
[Progress:>                             0%] [Cov:=============>                     39%]
[Progress:>                             0%] [Cov:=============>                     39%]
[Progress:>                             0%] [Cov:=============>                     39%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    41%]
[Progress:>                             0%] [Cov:==============>                    41%]
[Progress:>                             0%] [Cov:==============>                    41%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   43%]
[Progress:>                             0%] [Cov:===============>                   44%]
[Progress:>                             0%] [Cov:===============>                   44%]
[Progress:>                             0%] [Cov:===============>                   44%]
[Progress:>                             0%] [Cov:===============>                   44%]
[Progress:>                             0%] [Cov:===============>                   45%]
[Progress:>                             0%] [Cov:===============>                   45%]
[Progress:>                             0%] [Cov:================>                  46%]
[Progress:>                             0%] [Cov:================>                  46%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  47%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:================>                  48%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 50%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:==================>                52%]
[Progress:>                             0%] [Cov:==================>                52%]
[Progress:>                             0%] [Cov:==================>                52%]
[Progress:>                             0%] [Cov:==================>                52%]
[Progress:>                             0%] [Cov:==================>                52%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                53%]
[Progress:>                             0%] [Cov:==================>                54%]
[Progress:>                             0%] [Cov:==================>                54%]
[Progress:>                             0%] [Cov:==================>                54%]
[Progress:>                             0%] [Cov:==================>                54%]
[Progress:>                             0%] [Cov:==================>                54%]
[Progress:>                             1%] [Cov:==================>                54%]
[Progress:>                             1%] [Cov:==================>                54%]
[Progress:>                             1%] [Cov:==================>                54%]
[Progress:>                             1%] [Cov:==================>                54%]
[Progress:>                             1%] [Cov:==================>                54%]
* Search finished after 188s and 150 generations, 101250 statements, best individual has fitness: 1439.5331908831909
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 519
* Number of covered goals: 260
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 274
* Number of covered goals: 119
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 783
* Number of covered goals: 310
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 340
* Number of covered goals: 88
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 88%
* Total number of goals: 65
* Number of covered goals: 57
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 82%
* Total number of goals: 65
* Number of covered goals: 53
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 274
* Number of covered goals: 99
* Generated 100 tests with total length 446
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 21:56:38.905 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:38.963 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.052 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.100 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.172 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.218 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.259 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.300 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.475 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.559 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.605 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.645 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.684 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.724 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.763 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.802 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.841 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.880 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.918 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.956 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:39.996 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.040 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.080 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.119 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.159 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.199 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.241 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.281 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.322 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.363 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.404 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.443 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.484 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.662 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:40.666 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "queuePrintJob")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkPrintJobAccess(SecurityManager.java:1378)
java.awt.print.PrinterJob.getPrinterJob(PrinterJob.java:75)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_135_tmp__ESTest.test0(AbstractCategoryItemRenderer_135_tmp__ESTest.java:42)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 21:56:40.663 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 21:56:40.666 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Type3Font type3Font0 = new Type3Font((PdfWriter) null, false);
Type3Glyph type3Glyph0 = (Type3Glyph)type3Font0.defineGlyph('r', 2916, 0.0F, 0.0F, 2916, 0.0F);
PSPrinterJob pSPrinterJob0 = (PSPrinterJob)PrinterJob.getPrinterJob();
PdfPrinterGraphics2D pdfPrinterGraphics2D0 = (PdfPrinterGraphics2D)type3Glyph0.createPrinterGraphicsShapes((float) 2916, (float) 20, true, (-1828.6193F), (PrinterJob) pSPrinterJob0);
WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
NumberAxis numberAxis0 = new NumberAxis();
PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend((PaintScale) lookupPaintScale0, (ValueAxis) numberAxis0);
Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)paintScaleLegend0.getBounds();
CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
double[][] doubleArray0 = new double[7][7];
DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 12, (-3046), 10, 3, (-1606), (-71), true, false, true, true, true, true, true);
ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
waterfallBarRenderer0.initialise(pdfPrinterGraphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);

[MASTER] 21:56:40.725 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.152 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.396 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.402 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.440 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.441 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.642 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.644 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.847 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.849 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.897 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.899 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.935 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.936 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:41.975 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:41.975 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.013 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.014 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.055 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.056 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.095 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.096 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.136 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.137 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.409 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.410 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "queuePrintJob")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkPrintJobAccess(SecurityManager.java:1378)
java.awt.print.PrinterJob.getPrinterJob(PrinterJob.java:75)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_149_tmp__ESTest.test0(AbstractCategoryItemRenderer_149_tmp__ESTest.java:48)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 21:56:42.411 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 21:56:42.412 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ScatterRenderer scatterRenderer0 = new ScatterRenderer();
ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
Document document0 = new Document();
PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) null);
char[] charArray0 = new char[7];
Type3Font type3Font0 = new Type3Font(pdfWriter0, charArray0, true);
Type3Glyph type3Glyph0 = (Type3Glyph)type3Font0.defineGlyph('w', (-1638.0F), 0.0F, (-1926.4518F), 1701.8F, 0.0F);
AsianFontMapper asianFontMapper0 = new AsianFontMapper("Courier-BoldOblique", "Times-Roman");
PSPrinterJob pSPrinterJob0 = (PSPrinterJob)PrinterJob.getPrinterJob();
PdfPrinterGraphics2D pdfPrinterGraphics2D0 = (PdfPrinterGraphics2D)type3Glyph0.createPrinterGraphics((float) 14, 0.0F, (FontMapper) asianFontMapper0, true, 2322.4F, (PrinterJob) pSPrinterJob0);
Vector<BoxAndWhiskerToolTipGenerator> vector0 = new Vector<BoxAndWhiskerToolTipGenerator>();
JTable jTable0 = new JTable(vector0, vector0);
Rectangle rectangle0 = jTable0.getCellRect(10950, 6, false);
CategoryAxis categoryAxis0 = new CategoryAxis("Courier");
DateAxis dateAxis0 = new DateAxis();
Layer layer0 = Layer.BACKGROUND;
scatterRenderer0.drawAnnotations(pdfPrinterGraphics2D0, rectangle0, categoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
assertFalse(dateAxis0.isNegativeArrowVisible());


[MASTER] 21:56:42.684 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.685 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.685 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "queuePrintJob")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkPrintJobAccess(SecurityManager.java:1378)
java.awt.print.PrinterJob.getPrinterJob(PrinterJob.java:75)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_150_tmp__ESTest.test0(AbstractCategoryItemRenderer_150_tmp__ESTest.java:48)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 21:56:42.685 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 21:56:42.686 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ScatterRenderer scatterRenderer0 = new ScatterRenderer();
ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
Document document0 = new Document();
PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) null);
char[] charArray0 = new char[7];
Type3Font type3Font0 = new Type3Font(pdfWriter0, charArray0, true);
Type3Glyph type3Glyph0 = (Type3Glyph)type3Font0.defineGlyph('w', (-1638.0F), 0.0F, (-1926.4518F), 1701.8F, 0.0F);
AsianFontMapper asianFontMapper0 = new AsianFontMapper("Courier-BoldOblique", "Times-Roman");
PSPrinterJob pSPrinterJob0 = (PSPrinterJob)PrinterJob.getPrinterJob();
PdfPrinterGraphics2D pdfPrinterGraphics2D0 = (PdfPrinterGraphics2D)type3Glyph0.createPrinterGraphics((float) 14, 0.0F, (FontMapper) asianFontMapper0, true, 2322.4F, (PrinterJob) pSPrinterJob0);
Vector<BoxAndWhiskerToolTipGenerator> vector0 = new Vector<BoxAndWhiskerToolTipGenerator>();
JTable jTable0 = new JTable(vector0, vector0);
Rectangle rectangle0 = jTable0.getCellRect(10950, 6, false);
CategoryAxis categoryAxis0 = new CategoryAxis("Courier");
DateAxis dateAxis0 = new DateAxis();
Layer layer0 = Layer.FOREGROUND;
scatterRenderer0.drawAnnotations(pdfPrinterGraphics2D0, rectangle0, categoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01);


[MASTER] 21:56:42.728 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.729 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.811 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.812 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.849 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.850 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.892 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.893 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.934 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.934 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:42.979 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:42.980 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.025 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.026 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.062 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.062 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.099 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.100 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.136 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.137 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.174 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.175 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.212 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.212 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.250 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.251 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.289 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.290 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.327 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.327 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.365 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.366 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.403 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.434 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.475 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.476 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.519 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.520 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.561 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.562 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.609 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.610 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.694 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.695 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.737 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.737 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.779 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.780 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.827 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.828 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.910 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.911 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.953 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.953 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:43.992 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:43.993 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.031 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.032 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.069 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.070 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.109 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.109 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.146 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.147 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.183 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.184 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.222 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.223 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.263 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.264 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.303 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.304 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.347 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.348 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.387 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.388 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.430 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.430 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.472 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.473 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.512 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.513 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.566 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.567 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.604 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.605 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.641 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.642 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.726 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.727 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.812 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.852 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.853 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.890 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.924 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:44.962 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:44.963 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:46.356 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:46.395 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:56:47.795 [logback-2] ERROR ClassStateSupport - Class com.lowagie.text.pdf.GlyphList was not instrumented by EvoSuite. This could happen if you are running JUnit tests in a way that is not handled by EvoSuite, in which some classes are loaded be reflection before the tests are run. Consult the EvoSuite documentation for possible workarounds for this issue.
[MASTER] 21:56:47.863 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'AbstractCategoryItemRenderer_ESTest' to evosuite-tests
* Done!


------------