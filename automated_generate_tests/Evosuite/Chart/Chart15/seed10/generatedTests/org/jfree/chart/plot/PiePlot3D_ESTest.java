/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 15 00:54:17 GMT 2017
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.Document;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfGraphics2D;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PiePlot3D_ESTest extends PiePlot3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      arc2D_Double0.width = (double) 2;
      arc2D_Double0.setAngles((-180.0), 679.29262783325, 0.0, 0.4);
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      piePlot3D0.setInsets(rectangleInsets0);
      JFreeChart jFreeChart0 = new JFreeChart("t", (Plot) piePlot3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      assertFalse(piePlot3D0.getDarkerSides());
      
      piePlot3D0.setDarkerSides(true);
      assertTrue(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      
      piePlot3D0.setDepthFactor(0.0);
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        piePlot3D0.draw(pdfGraphics2D0, (Rectangle2D) null, (Point2D) null, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.getDarkerSides();
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(boolean0);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      PiePlot3D piePlot3D1 = new PiePlot3D();
      boolean boolean0 = piePlot3D1.equals(piePlot3D0);
      assertEquals(0.12, piePlot3D1.getDepthFactor(), 0.01);
      assertFalse(piePlot3D1.isCircular());
      assertFalse(piePlot3D1.getDarkerSides());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals(piePlot3D0);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertTrue(boolean0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.equals((Object) null);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(boolean0);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_BACKGROUND_PAINT, basicStroke0, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 10, (double) 1, 2);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 10, (double) 1, 2);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      arc2D_Double0.setAngles((double) 32, 679.29262783325, 0.0, 0.4);
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      arc2D_Double0.setAngles((-180.0), 679.29262783325, 0.0, 0.4);
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, color0, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      arc2D_Double0.setAngles((-180.0), 679.29262783325, 0.0, 0.4);
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      arc2D_Double0.setAngles((-180.0), 679.29262783325, 0.0, 0.4);
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      arc2D_Double0.setAngles((-180.0), 679.29262783325, 0.0, 0.4);
      piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      piePlot3D0.setDataset(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("t", (Plot) piePlot3D0);
      jFreeChart0.createBufferedImage(15, 10);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Document document0 = new Document();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0, false);
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockPrintStream0);
      PdfContentByte pdfContentByte0 = new PdfContentByte(pdfWriter0);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((float) 1, (float) (byte)34, true, (float) (byte)47);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((double) 8, (double) 1, 0.0, (double) 1, (double) 0, (double) 1024, 0);
      Area area0 = new Area(piePlot3D0.DEFAULT_LEGEND_ITEM_BOX);
      piePlot3D0.drawSide(pdfGraphics2D0, (Rectangle2D) null, arc2D_Double0, area0, area0, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT, piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT, piePlot3D0.DEFAULT_OUTLINE_STROKE, false, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getPlotType();
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) defaultStatisticalCategoryDataset0, tableOrder0, 1131);
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) categoryToPieDataset0);
      piePlot3D0.setDarkerSides(false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      double double0 = piePlot3D0.getDepthFactor();
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, double0, 0.01);
      assertFalse(piePlot3D0.isCircular());
  }
}
