/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 19 22:05:21 GMT 2017
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.ChapterAutoNumber;
import com.lowagie.text.ListItem;
import com.lowagie.text.Paragraph;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.plaf.ColorUIResource;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Number[][] numberArray0 = new Number[9][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      NumberAxis numberAxis0 = new NumberAxis("6'S^#y$h8;i");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, categoryAxis0, (ValueAxis) numberAxis0, (CategoryItemRenderer) null);
      categoryPlot0.getDomainAxisLocation(1);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation((-940));
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("HardLight");
      combinedRangeCategoryPlot0.setDomainAxis(477, (CategoryAxis) extendedCategoryAxis0);
      assertEquals(478, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("s6g%*\"/hvd\\T", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) symbolAxis0);
      combinedRangeCategoryPlot0.mapDatasetToDomainAxis(368, 500);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers((Graphics2D) null, (Rectangle2D) null, 867, layer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      assertFalse(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, (PlotRenderingInfo) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedRangeCategoryPlot0.setDomainAxisLocation(653, axisLocation0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Collection collection0 = combinedRangeCategoryPlot0.getRangeMarkers((Layer) null);
      assertNull(collection0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 1.0F);
      double double0 = combinedDomainCategoryPlot0.getRangeCrosshairValue();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) (-940));
      combinedDomainCategoryPlot0.setRangeAxis(19, (ValueAxis) cyclicNumberAxis0, true);
      int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisForDataset(8883);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.getRangeAxisCount();
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertEquals(1, combinedDomainCategoryPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setUpperBound(15.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LogAxis logAxis1 = (LogAxis)combinedRangeCategoryPlot0.getRangeAxis();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertNotNull(logAxis1);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LogAxis logAxis1 = (LogAxis)combinedRangeCategoryPlot0.getRangeAxis();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertNotNull(logAxis1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getIndexOf(stackedBarRenderer3D0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      categoryItemRendererArray0[2] = (CategoryItemRenderer) stackedBarRenderer0;
      categoryPlot0.setRenderers(categoryItemRendererArray0);
      int int0 = categoryPlot0.getIndexOf(stackedBarRenderer0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'location' for index 0 not permitted.");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) logAxis0, (CategoryItemRenderer) null);
      categoryPlot0.getDomainAxisIndex(extendedCategoryAxis0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      subCategoryAxis0.setVisible(false);
      SubCategoryAxis subCategoryAxis1 = (SubCategoryAxis)combinedDomainCategoryPlot0.getDomainAxisForDataset(3);
      assertNotNull(subCategoryAxis1);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      subCategoryAxis0.setAxisLineVisible(false);
      SubCategoryAxis subCategoryAxis1 = (SubCategoryAxis)combinedDomainCategoryPlot0.getDomainAxisForDataset(3);
      assertFalse(subCategoryAxis1.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("SV&B#]BBO+[`MN6~dS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      extendedCategoryAxis0.setTickMarkOutsideLength(0.0F);
      ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis)combinedDomainCategoryPlot0.getDomainAxisForDataset((-1026));
      assertTrue(extendedCategoryAxis1.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      subCategoryAxis0.setFixedDimension(10);
      SubCategoryAxis subCategoryAxis1 = (SubCategoryAxis)combinedDomainCategoryPlot0.getDomainAxisForDataset(3);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertNotNull(subCategoryAxis1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      subCategoryAxis0.setFixedDimension(10);
      SubCategoryAxis subCategoryAxis1 = (SubCategoryAxis)combinedDomainCategoryPlot0.getDomainAxis();
      assertNotNull(subCategoryAxis1);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("/UyNw'");
      categoryAxis0.setFixedDimension((-1426.93343436));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = combinedDomainCategoryPlot0.getDomainAxis();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(categoryAxis1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      Quarter quarter0 = new Quarter();
      PeriodAxis periodAxis0 = new PeriodAxis("T!F,y!>Xi", (RegularTimePeriod) quarter0, (RegularTimePeriod) quarter0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, (CategoryAxis) subCategoryAxis0, (ValueAxis) periodAxis0, (CategoryItemRenderer) null);
      TaskSeriesCollection taskSeriesCollection1 = (TaskSeriesCollection)categoryPlot0.getDataset();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(taskSeriesCollection1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      categoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D_Double0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, (Plot) categoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(13.0, 10.0, 6.283185307179586, 6.283185307179586);
      AxisSpace axisSpace0 = categoryPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Double0);
      assertEquals(23.96875, axisSpace0.getBottom(), 0.01);
      assertEquals(14.0, axisSpace0.getLeft(), 0.01);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.zoom((-1810.098));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-78), (CategoryItemRenderer) categoryStepRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxisLocation((-78), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'offset' argument.");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-1883), (ValueAxis) periodAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setDataset((-1), (CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      JFreeChart jFreeChart0 = new JFreeChart("", logarithmicAxis0.DEFAULT_TICK_LABEL_FONT, (Plot) categoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine(sunGraphics2D0, (Rectangle2D) null, 3921.321124709, stackedBarRenderer3D0.DEFAULT_STROKE, logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateAxisSpace((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker((Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addRangeMarker(15, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) barRenderer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      double[][] doubleArray0 = new double[9][1];
      double[] doubleArray1 = new double[7];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.entity.XYItemEntity");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3190.860131635028), (-3190.860131635028));
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, categoryAxis0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) lineAndShapeRenderer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setAnchorValue(3367.09333031122, true);
      assertEquals(3367.09333031122, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("#'b[fn");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-5303.74313961), "4Z}8M[+wCXo]@:o[V");
      ModuloAxis moduloAxis0 = new ModuloAxis("\"C%F_y", cyclicNumberAxis0.DEFAULT_RANGE);
      combinedDomainCategoryPlot0.getDataRange(moduloAxis0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      boolean boolean0 = combinedRangeCategoryPlot0.render((Graphics2D) null, (Rectangle2D) null, 10, plotRenderingInfo0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(boolean0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.draw((Graphics2D) null, rectangle2D_Double0, point2D_Double0, (PlotState) null, plotRenderingInfo0);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairValue(1.0, true);
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeMarkers(0);
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(10, layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("SV&B#]BBO+[`MN6~dS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(8814, layer0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      ValueMarker valueMarker0 = new ValueMarker((double) 1.0F, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, subCategoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) valueMarker0, layer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) categoryMarker0, layer0);
      assertNull(categoryMarker0.getLabel());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.getDomainMarkers((-4061), layer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) false);
      categoryPlot0.addDomainMarker((-4061), categoryMarker0, layer0);
      assertEquals(1, categoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker(10, (CategoryMarker) null, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) point2D_Double0, (Dataset) null);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getDomainGridlineStroke();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset((Comparable) false);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) basicStroke0, (Dataset) simpleHistogramDataset0);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getLegendItems();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRendererForDataset((CategoryDataset) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, (-4265.319880992392));
      categoryPlot0.setRenderer(1070, (CategoryItemRenderer) stackedBarRenderer3D0, false);
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, (-4265.319880992392));
      categoryPlot0.setRenderer(1070, (CategoryItemRenderer) stackedBarRenderer3D0, true);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("SV&B#]BBO+[`MN6~dS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getRenderer((-2619));
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getRenderer(149);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = categoryPlot0.getRangeAxisForDataset(0);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryDataset categoryDataset0 = categoryPlot0.getDataset((-928));
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.configureRangeAxes();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.configureRangeAxes();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation((-1));
      combinedRangeCategoryPlot0.setRangeAxisLocation(500, axisLocation0, false);
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      categoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals("AxisLocation.BOTTOM_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      assertEquals("AxisLocation.TOP_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.getRangeAxisLocation(1036);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeAxis(0, (ValueAxis) null, true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.getRangeAxis((-2934));
      assertEquals(1, combinedDomainCategoryPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LogAxis logAxis1 = (LogAxis)combinedRangeCategoryPlot0.getRangeAxis(0);
      assertTrue(logAxis1.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("Category_Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.getRangeAxis(500);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.configureDomainAxes();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.configureDomainAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge(10689);
      assertEquals("RectangleEdge.TOP", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setDomainAxisLocation(10689, (AxisLocation) null, true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDomainAxisLocation(10, (AxisLocation) null, false);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'annotation' argument.");
      categoryPlot0.setDomainAxis(1011, (CategoryAxis) subCategoryAxis0, false);
      assertEquals(1012, categoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("%%BoundingBox:");
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainAxis((-1111), categoryAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 2.0F);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) lineRenderer3D0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Layers are not allowed.");
      categoryPlot0.setDomainAxis(0, (CategoryAxis) subCategoryAxis0, true);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot1.getDomainAxis(10);
      assertEquals(1, combinedDomainCategoryPlot1.getWeight());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = combinedDomainCategoryPlot0.getDomainAxis(0);
      assertNotNull(categoryAxis0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot0.getDomainAxis(1);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      categoryPlot0.setOrientation(plotOrientation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0, ".hBmxv-(Mo=bV-");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) null);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setWeight(3);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        categoryPlot0.drawBackground((Graphics2D) null, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isDomainZoomable();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToDomainAxis((-717), (-717));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.mapDatasetToRangeAxis(1, 1);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      boolean boolean0 = combinedDomainCategoryPlot0.isRangeZoomable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      boolean boolean0 = combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.isDomainGridlinesVisible();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRenderer();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getAnnotations();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation(0);
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0, true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis("Requires 'lower' < 'upper'.");
      categoryPlot0.setRangeAxis((ValueAxis) dateAxis0);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-180), categoryAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDatasetRenderingOrder();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Color color0 = (Color)categoryPlot0.getRangeGridlinePaint();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(255, color0.getGreen());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeCategoryPlot0.getRangeGridlineStroke();
      assertEquals(0, basicStroke0.getEndCap());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("java.awt.geom.Rectangle2D$Double[x=-4.0,y=-4.0,w=8.0,h=8.0]");
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) null);
      categoryPlot0.isRangeCrosshairVisible();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("iRC-v(*VeuA`~FY0jt");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logarithmicAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) logarithmicAxis0.DEFAULT_TICK_UNIT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, logarithmicAxis0.DEFAULT_TICK_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      categoryPlot0.setRangeAxis(8840, (ValueAxis) numberAxis0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      // Undeclared exception!
      categoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("/UyNw'");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxis();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      categoryPlot0.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot0.clone();
      assertEquals(1, combinedRangeCategoryPlot1.getDatasetCount());
      assertEquals(1, combinedRangeCategoryPlot1.getRangeAxisCount());
      assertEquals(0, combinedRangeCategoryPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'location' for index 0 not permitted.");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) logAxis0, (CategoryItemRenderer) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1809.8689687912968), 0.05, false);
      boolean boolean0 = categoryPlot0.equals(stackedBarRenderer3D0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(boolean0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertTrue(categoryPlot1.equals((Object)categoryPlot0));
      
      categoryPlot0.setOutlinePaint(categoryPlot1.DEFAULT_BACKGROUND_PAINT);
      categoryPlot1.clearRangeMarkers();
      assertFalse(categoryPlot1.equals((Object)categoryPlot0));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(2795.74282, false);
      assertEquals(2795.74282, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Point2D.Double point2D_Double0 = (Point2D.Double)RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes(484.03125, (-1869.2462431), plotRenderingInfo0, (Point2D) point2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (508.2328125) <= upper (-1962.708555255).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double((-3522.89), (double) 0.0F);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.zoomRangeAxes(0.8, (-1810.098), plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeCategoryPlot0.zoomRangeAxes((-4897.748), plotRenderingInfo0, (Point2D) point0);
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      LogAxis logAxis0 = new LogAxis();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, categoryAxis0, (ValueAxis) logAxis0, (CategoryItemRenderer) intervalBarRenderer0);
      List list0 = categoryPlot0.getCategories();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategories();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("#'b[fn");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      DateAxis dateAxis0 = new DateAxis();
      categoryPlot0.setRangeAxis(15, (ValueAxis) dateAxis0, true);
      assertEquals(16, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(2, (CategoryDataset) taskSeriesCollection0);
      assertEquals(3, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      categoryPlot0.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1.0, 2274.248876575919);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) null, (CategoryItemRenderer) barRenderer3D0);
      List list0 = categoryPlot0.getCategoriesForAxis(categoryAxis0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      categoryPlot0.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      categoryPlot0.getDataRange((ValueAxis) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      assertEquals(1, combinedDomainCategoryPlot0.getWeight());
      
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1955.5133675738), (double) 10);
      combinedRangeCategoryPlot0.setRangeAxis(2, (ValueAxis) cyclicNumberAxis0, false);
      assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1955.5133675738), (double) 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.0, cyclicNumberAxis0, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(135.0, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10, stackedBarRenderer3D0.DEFAULT_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addDomainMarker(categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, (Plot) categoryPlot0, true);
      jFreeChart0.createBufferedImage(500, 500);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0.0, stackedBarRenderer3D0.getUpperClip(), 0.01);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("E{", categoryAxis3D0.DEFAULT_AXIS_LABEL_FONT, (Plot) categoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1377, 0, (-2405), 15, 735, 0, true, true, true, false, true, true);
      Point point0 = chartPanel0.getLocation();
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryPlot0.draw(sunGraphics2D0, (Rectangle2D) null, point0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = categoryPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      assertEquals(0.0, axisSpace0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      Locale locale0 = JComponent.getDefaultLocale();
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getPercentInstance(locale0);
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(10.265714, (NumberFormat) decimalFormat0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) 10, (double) 10, (Comparable) numberTickUnit0, (double) 1.0F, categoryAxis3D0.DEFAULT_TICK_MARK_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      boolean boolean0 = combinedDomainCategoryPlot0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", (Comparable) "ZOOM_RESET_DOMAIN", 2.0, (-1810.098));
      categoryPlot0.addAnnotation(categoryPointerAnnotation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairPaint(combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedRangeCategoryPlot0.setRangeCrosshairStroke(categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logarithmicAxis0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(true);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(689.983279, (-1138.2), (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(false);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(3);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers(967, (Layer) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      ValueMarker valueMarker0 = new ValueMarker((double) 10, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, subCategoryAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker((-2787), (Marker) valueMarker0, (Layer) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainMarkers(1);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) false, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
      Collection collection0 = categoryPlot0.getDomainMarkers(10, layer0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainMarkers((Layer) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("z&`q");
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent((Object) logarithmicAxis0);
      combinedRangeCategoryPlot0.rendererChanged(rendererChangeEvent0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(50000.0);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(0.0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("Z)MGfi,I3}[|`zE4");
      DateAxis dateAxis0 = new DateAxis("hq");
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, categoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) lineAndShapeRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.handleClick(500, 500, plotRenderingInfo0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JEditorPane jEditorPane0 = new JEditorPane();
      ColorUIResource colorUIResource0 = (ColorUIResource)jEditorPane0.getDisabledTextColor();
      categoryPlot0.setRangeGridlinePaint(colorUIResource0);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeGridlinesVisible(false);
      assertFalse(categoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(689.983279, (-1138.2), (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedRangeCategoryPlot0.setDomainGridlinePaint(categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      assertTrue(categoryAxis3D0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      BasicStroke basicStroke0 = (BasicStroke)spiderWebPlot0.getAxisLineStroke();
      combinedDomainCategoryPlot0.setDomainGridlineStroke(basicStroke0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePosition((CategoryAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      combinedRangeCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(true);
      assertTrue(combinedDomainCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(46, "");
      DateAxis dateAxis0 = new DateAxis("java.awt.geom.Rectangle2D$Double[x=-4.0,y=-4.0,w=8.0,h=8.0]", (TimeZone) simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("KD/@wt%YLlk*Z=i6");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      double[][] doubleArray0 = new double[0][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemRenderer categoryItemRenderer0 = combinedDomainCategoryPlot0.getRendererForDataset(defaultIntervalCategoryDataset0);
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      combinedRangeCategoryPlot0.setRenderer(0, (CategoryItemRenderer) statisticalLineAndShapeRenderer0);
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) statisticalLineAndShapeRenderer0, true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 1377, layer0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisForDataset(287);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setDataset(2, (CategoryDataset) null);
      assertEquals(3, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDataset(1071);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeAxes();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-3791), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(689.983279, (-1138.2), (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getRangeAxisEdge(1449);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Q found at end of string.");
      int int0 = combinedRangeCategoryPlot0.getRangeAxisIndex(numberAxis3D0);
      assertEquals((-1), int0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0, 841.207, "e%L_\"5a");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      int int0 = combinedRangeCategoryPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("Category_Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      combinedRangeCategoryPlot0.setRangeAxes(valueAxisArray0);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      categoryPlot1.getDataRange((ValueAxis) null);
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertEquals(0, categoryPlot1.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[3];
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxisArray0[0] = categoryAxis0;
      categoryPlot0.setDomainAxes(categoryAxisArray0);
      assertEquals(3, categoryPlot0.getDomainAxisCount());
      
      categoryPlot0.clearDomainAxes();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("/UyNw'");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = combinedDomainCategoryPlot0.getDomainAxis();
      assertNotNull(categoryAxis1);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      categoryPlot0.getDomainAxis();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setAxisOffset(categoryPlot0.DEFAULT_INSETS);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.05, (double) 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("HT/6_=ipOQx'enJf[");
      categoryPlot0.getDomainAxisIndex(extendedCategoryAxis0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearAnnotations();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("/UyNw'");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      LegendItemCollection legendItemCollection0 = combinedDomainCategoryPlot0.getFixedLegendItems();
      assertNull(legendItemCollection0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataset();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      boolean boolean0 = combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.zoomDomainAxes((-1762.396997235), 0.0, (PlotRenderingInfo) null, (Point2D) null);
      assertFalse(categoryPlot0.isDomainZoomable());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxis((CategoryAxis) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("SV&B#]BBO+[`MN6~dS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      Color color0 = (Color)combinedDomainCategoryPlot0.getDomainGridlinePaint();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(255, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("XAf.%+R;&/|d6a^9G");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      categoryPlot0.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertNotNull(legendItemCollection0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertNotNull(legendItemCollection0);
      
      categoryPlot0.setFixedLegendItems(legendItemCollection0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairValue();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      RectangleEdge rectangleEdge0 = categoryPlot0.getRangeAxisEdge();
      assertEquals("RectangleEdge.LEFT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      RectangleEdge rectangleEdge0 = categoryPlot0.getDomainAxisEdge();
      assertEquals("RectangleEdge.BOTTOM", rectangleEdge0.toString());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("SV&B#]BBO+[`MN6~dS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) 1.0F, 15.0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) barRenderer3D0);
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-1), (CategoryItemRenderer) barRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      int int0 = combinedRangeCategoryPlot0.getWeight();
      assertEquals(0, int0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getDomainAxisCount();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(layer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.addDomainMarker((CategoryMarker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(0.0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(10);
      categoryPlot0.setDomainAxisLocation(axisLocation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      boolean boolean0 = combinedRangeCategoryPlot0.getDrawSharedDomainAxis();
      assertFalse(boolean0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("SV&B#]BBO+[`MN6~dS");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(10);
      categoryPlot0.setRangeAxisLocation(axisLocation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getAnchorValue();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisCount();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainAxisLocation((-1), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker((-1067.7821), categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      categoryPlot0.addRangeMarker((Marker) valueMarker0);
      assertFalse(categoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("/UyNw'");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      BasicStroke basicStroke0 = (BasicStroke)combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      ListItem listItem0 = new ListItem(0.5F, "z&`q");
      ChapterAutoNumber chapterAutoNumber0 = new ChapterAutoNumber((Paragraph) listItem0);
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, (Rectangle2D) null, chapterAutoNumber0);
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-1741), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1304, 1304, 1304, 10, 0, 15, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.zoomDomainAxes(0.0, plotRenderingInfo0, (Point2D) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(chartPanel0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDrawSharedDomainAxis(true);
      assertTrue(categoryPlot0.getDrawSharedDomainAxis());
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = categoryPlot0.getDatasetCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category_Plot");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, (Plot) categoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      categoryPlot0.getIndexOf(stackedBarRenderer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertTrue(combinedDomainCategoryPlot0.equals((Object)combinedDomainCategoryPlot1));
      assertEquals(1, combinedDomainCategoryPlot1.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(0, axisLocation0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }
}
