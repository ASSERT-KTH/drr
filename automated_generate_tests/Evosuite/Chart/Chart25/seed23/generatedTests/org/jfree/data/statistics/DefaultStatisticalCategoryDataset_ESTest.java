/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 12 12:58:38 GMT 2017
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.jfree.data.DefaultKeyedValue;
import org.jfree.data.Range;
import org.jfree.data.gantt.TaskSeries;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.time.Week;
import org.jfree.data.xy.XYDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultStatisticalCategoryDataset_ESTest extends DefaultStatisticalCategoryDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(1, 1, 1, 1, 1);
      Day day0 = new Day((Date) mockDate0);
      Number number0 = defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) day0, (Comparable) mockDate0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((double) 0, 0.0, (Comparable) week0, (Comparable) week0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getValue((Comparable) week0, (Comparable) week0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      TaskSeries taskSeries0 = new TaskSeries("");
      Comparable comparable0 = taskSeries0.getKey();
      defaultStatisticalCategoryDataset0.add((Number) 1886545201, (Number) 8, (Comparable) comparable0, (Comparable) comparable0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getValue((Comparable) comparable0, (Comparable) "");
      assertEquals(1886545201, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) (-1), (-1150.0646811), (Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getValue((Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      assertEquals((-1.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 0, (-1.0), (Comparable) null, (Comparable) null);
      Number number0 = defaultStatisticalCategoryDataset0.getValue(0, 0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem((double) 1501067552, (double) 2);
      defaultStatisticalCategoryDataset0.add((Number) 1501067552, (Number) 2, (Comparable) xYDataItem0, (Comparable) xYDataItem0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) xYDataItem0, (Comparable) xYDataItem0);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) (-1), (-1150.0646811), (Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      assertNotNull(double0);
      assertEquals((-1150.0646811), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), 0.0, (Comparable) week0, (Comparable) week0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((Number) (byte)25, (Number) 53, (Comparable) week0, (Comparable) week0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertEquals(53, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(81.437, (-2017.6), (Comparable) null, (Comparable) null);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getRowKey(0);
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem((double) 1501067552, (double) 2);
      defaultStatisticalCategoryDataset0.add((Number) 1501067552, (Number) 2, (Comparable) xYDataItem0, (Comparable) xYDataItem0);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getRowKey(0);
      assertNotNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex("GVZY|l7pg}|m*N%K8");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      int int0 = defaultStatisticalCategoryDataset0.getRowCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) (short)5, (Comparable) null, (Comparable) null);
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 1372);
      defaultStatisticalCategoryDataset0.add((-2351.3652026196), 0.0, (Comparable) week0, (Comparable) week0);
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
      assertEquals((-2351.3652026196), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((double) 0, 0.0, (Comparable) week0, (Comparable) week0);
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), (-16.243445110077673), (Comparable) week0, (Comparable) week0);
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals((-545.817867), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-2145619617), (-2145619617), (-2145619617), (-2145619617), (-2145619617));
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      Quarter quarter0 = new Quarter(date0);
      defaultStatisticalCategoryDataset0.add(262.50909932618663, Double.NaN, (Comparable) quarter0, (Comparable) mockGregorianCalendar0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertEquals(262.50909932618663, range0.getLowerBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), (-16.243445110077673), (Comparable) week0, (Comparable) week0);
      defaultStatisticalCategoryDataset0.add((double) 0, (-16.243445110077673), (Comparable) week0, (Comparable) week0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(true);
      assertEquals((-16.243445110077673), range0.getUpperBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((double) 0, 0.0, (Comparable) week0, (Comparable) week0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) week0, (Comparable) week0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((Number) 8, (Number) 1886545202, (Comparable) "", (Comparable) week0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) "", (Comparable) week0);
      assertEquals(8, (int)integer0);
      assertNotNull(integer0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(81.437, (-2017.6), (Comparable) null, (Comparable) null);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getColumnKey(0);
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      TimeSeriesDataItem timeSeriesDataItem0 = new TimeSeriesDataItem((RegularTimePeriod) fixedMillisecond0, (-4.0));
      defaultStatisticalCategoryDataset0.add((Number) 8, (Number) 0.714, (Comparable) timeSeriesDataItem0, (Comparable) timeSeriesDataItem0);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getColumnKey(0);
      assertNotNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((long) 3);
      defaultStatisticalCategoryDataset0.add((Number) 1196573017, (Number) 3, (Comparable) fixedMillisecond0, (Comparable) fixedMillisecond0);
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex(fixedMillisecond0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), 0.0, (Comparable) week0, (Comparable) week0);
      DefaultKeyedValue defaultKeyedValue0 = new DefaultKeyedValue((Comparable) "", (Number) 4);
      Comparable comparable0 = defaultKeyedValue0.getKey();
      defaultStatisticalCategoryDataset0.add((Number) 8, (Number) 1886545202, (Comparable) "", (Comparable) comparable0);
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      int int0 = defaultStatisticalCategoryDataset0.getColumnCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue((-1558), 371);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 0, (-1.0), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((int) (byte)16, (int) (byte)16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 16, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((-2043), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRowKey((-1746));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((long) 0);
      defaultStatisticalCategoryDataset0.add((-1.935897163E9), (-1.935897163E9), (Comparable) fixedMillisecond0, (Comparable) fixedMillisecond0);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRangeBounds(true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-3.871794326E9).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) (short)5, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue((-3423), (-3423));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getColumnKey((-1087));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 0, (-19.65038134194021), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), (-545.817867), (Comparable) week0, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.add((double) 0, 0.0, (Comparable) week0, (Comparable) week0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) "GVZY|l7pg}|m*N%K8", (Comparable) "GVZY|l7pg}|m*N%K8");
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) double0, (Comparable) double0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((Number) (byte)25, (Number) 53, (Comparable) week0, (Comparable) week0);
      defaultStatisticalCategoryDataset0.add((Number) 8, (Number) 1886545202, (Comparable) "", (Comparable) week0);
      assertEquals(1392409281319L, week0.getLastMillisecond());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      Number number0 = defaultStatisticalCategoryDataset0.getMeanValue((Comparable) week0, (Comparable) "");
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Day day0 = new Day();
      defaultStatisticalCategoryDataset0.add((Number) 32, (Number) 1024, (Comparable) 893602898, (Comparable) day0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue(0, 0);
      assertEquals(32, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(defaultStatisticalCategoryDataset1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(defaultStatisticalCategoryDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 0, (-1.0), (Comparable) null, (Comparable) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset1.equals(defaultStatisticalCategoryDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) (short)5, (Comparable) null, (Comparable) null);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertNotNull(range0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), 0.0, (Comparable) week0, (Comparable) week0);
      defaultStatisticalCategoryDataset0.add((Number) 8, (Number) 1886545202, (Comparable) "", (Comparable) week0);
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 1, (Number) 1, (Comparable) null, (Comparable) "");
      defaultStatisticalCategoryDataset0.add((double) 0, (-1.0), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(Double.NaN, Double.NaN, (Comparable) "6A", (Comparable) "6A");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), 0.0, (Comparable) week0, (Comparable) week0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) week0, (Comparable) week0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), (-16.243445110077673), (Comparable) week0, (Comparable) week0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertEquals((-16.243445110077673), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(1.0, (-1997.8557), (Comparable) null, (Comparable) null);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week(0, 0);
      defaultStatisticalCategoryDataset0.add((-545.817867), 0.0, (Comparable) week0, (Comparable) week0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) week0, (Comparable) week0);
      assertEquals((-545.817867), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultKeyedValue defaultKeyedValue0 = new DefaultKeyedValue((Comparable) "", (Number) (byte)25);
      Comparable comparable0 = defaultKeyedValue0.getKey();
      defaultStatisticalCategoryDataset0.add((Number) 8, (Number) 1886545202, (Comparable) "", (Comparable) comparable0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getValue(0, 0);
      assertEquals(8, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 0, (-1.0), (Comparable) null, (Comparable) null);
      Number number0 = defaultStatisticalCategoryDataset0.getMeanValue(0, 0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRowKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      List list0 = defaultStatisticalCategoryDataset0.getColumnKeys();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getColumnKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      List list0 = defaultStatisticalCategoryDataset0.getRowKeys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Number number0 = defaultStatisticalCategoryDataset0.getValue((Comparable) null, (Comparable) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex("");
      assertEquals((-1), int0);
  }
}
