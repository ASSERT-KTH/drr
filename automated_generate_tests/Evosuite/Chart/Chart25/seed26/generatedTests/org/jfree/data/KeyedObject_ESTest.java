/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 27 23:40:36 GMT 2017
 */

package org.jfree.data;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.event.TextEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.data.KeyedObject;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyedObject_ESTest extends KeyedObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyedObject keyedObject0 = new KeyedObject((Comparable) null, (Object) null);
      Object object0 = keyedObject0.getObject();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TextEvent textEvent0 = new TextEvent((Object) "rG#JAQV", 5316);
      KeyedObject keyedObject0 = new KeyedObject((Comparable) "unknown type", (Object) textEvent0);
      Comparable comparable0 = keyedObject0.getKey();
      assertEquals("unknown type", comparable0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Week week0 = new Week();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      KeyedObject keyedObject0 = new KeyedObject((Comparable) week0, (Object) standardGradientPaintTransformer0);
      KeyedObject keyedObject1 = (KeyedObject)keyedObject0.clone();
      assertTrue(keyedObject1.equals((Object)keyedObject0));
      
      keyedObject1.setObject(week0);
      boolean boolean0 = keyedObject0.equals(keyedObject1);
      assertFalse(boolean0);
      assertFalse(keyedObject1.equals((Object)keyedObject0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TextEvent textEvent0 = new TextEvent((Object) "rG#JAQV", 5316);
      KeyedObject keyedObject0 = new KeyedObject((Comparable) "unknown type", (Object) textEvent0);
      KeyedObject keyedObject1 = new KeyedObject((Comparable) "rG#JAQV", (Object) "rG#JAQV");
      boolean boolean0 = keyedObject1.equals(keyedObject0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Week week0 = new Week();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      KeyedObject keyedObject0 = new KeyedObject((Comparable) week0, (Object) standardGradientPaintTransformer0);
      boolean boolean0 = keyedObject0.equals(keyedObject0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TextEvent textEvent0 = new TextEvent((Object) "rG#JAQV", 5316);
      KeyedObject keyedObject0 = new KeyedObject((Comparable) "unknown type", (Object) textEvent0);
      boolean boolean0 = keyedObject0.equals(textEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Week week0 = new Week();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      KeyedObject keyedObject0 = new KeyedObject((Comparable) week0, (Object) standardGradientPaintTransformer0);
      KeyedObject keyedObject1 = (KeyedObject)keyedObject0.clone();
      boolean boolean0 = keyedObject0.equals(keyedObject1);
      assertTrue(boolean0);
      assertNotSame(keyedObject1, keyedObject0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TextEvent textEvent0 = new TextEvent((Object) "rG#JAQV", 5316);
      KeyedObject keyedObject0 = new KeyedObject((Comparable) "unknown type", (Object) textEvent0);
      KeyedObject keyedObject1 = (KeyedObject)keyedObject0.clone();
      assertNotSame(keyedObject1, keyedObject0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Week week0 = new Week();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      KeyedObject keyedObject0 = new KeyedObject((Comparable) week0, (Object) standardGradientPaintTransformer0);
      StandardGradientPaintTransformer standardGradientPaintTransformer1 = (StandardGradientPaintTransformer)keyedObject0.getObject();
      assertSame(standardGradientPaintTransformer0, standardGradientPaintTransformer1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      KeyedObject keyedObject0 = new KeyedObject((Comparable) null, (Object) null);
      Comparable comparable0 = keyedObject0.getKey();
      assertNull(comparable0);
  }
}
