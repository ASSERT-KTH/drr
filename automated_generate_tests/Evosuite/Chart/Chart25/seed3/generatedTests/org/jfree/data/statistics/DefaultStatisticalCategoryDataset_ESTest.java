/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 17 21:55:56 GMT 2017
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.time.chrono.HijrahDate;
import java.util.Date;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.Range;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Month;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultStatisticalCategoryDataset_ESTest extends DefaultStatisticalCategoryDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) month0, (Comparable) date0);
      assertEquals(1392409281320L, month0.getFirstMillisecond());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Comparable comparable0 = defaultIntervalCategoryDataset0.getSeriesKey(1);
      Number number0 = defaultStatisticalCategoryDataset0.getValue((Comparable) comparable0, (Comparable) 1103.535768);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (byte)15, (Number) 1482250784, (Comparable) hijrahDate0, (Comparable) hijrahDate0);
      Byte byte0 = (Byte)defaultStatisticalCategoryDataset0.getValue((Comparable) hijrahDate0, (Comparable) hijrahDate0);
      assertEquals((byte)15, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) 1, (Comparable) instant0, (Comparable) month0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getValue(1, 1);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (byte)19, (Number) 1, (Comparable) "", (Comparable) "");
      Byte byte0 = (Byte)defaultStatisticalCategoryDataset0.getValue(0, 0);
      assertEquals((byte)19, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) 0, (Comparable) instant0, (Comparable) month0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getRowKey(0);
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getRowKey(0);
      assertNotNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex("default-typed");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex(month0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      int int0 = defaultStatisticalCategoryDataset0.getRowCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(false);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (-1022), (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
      assertEquals((-1022.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate((-4156), 771, (-4156));
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) mockDate0, (Comparable) mockDate0);
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-28.75265769310143), (-28.75265769310143), (Comparable) null, (Comparable) null);
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(false);
      assertEquals((-28.75265769310143), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-28.75265769310143), (-28.75265769310143), (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertEquals(1860.9386711534494, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertNotNull(range0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertEquals(3750.63, range0.getLowerBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) "default-typed", (Comparable) "default-typed");
      assertEquals(4, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      Float float0 = new Float(0.0);
      defaultStatisticalCategoryDataset0.add((Number) float0, (Number) 1, (Comparable) instant0, (Comparable) month0);
      Float float1 = (Float)defaultStatisticalCategoryDataset0.getMeanValue(2, 2);
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-0.5093592766933661), (-0.5093592766933661), (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      Float float0 = new Float((-0.5093592766933661));
      defaultStatisticalCategoryDataset0.add((Number) float0, (Number) 1, (Comparable) instant0, (Comparable) month0);
      Float float1 = (Float)defaultStatisticalCategoryDataset0.getMeanValue(2, 2);
      assertEquals((-0.5093593F), (float)float1, 0.01F);
      assertNotNull(float1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      Double double0 = new Double(3750.63);
      defaultStatisticalCategoryDataset0.add((Number) double0, (Number) 1, (Comparable) instant0, (Comparable) month0);
      Double double1 = (Double)defaultStatisticalCategoryDataset0.getMeanValue(1, 1);
      assertNotNull(double1);
      assertEquals(3750.63, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) 1, (Comparable) instant0, (Comparable) month0);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getColumnKey(2);
      assertNotNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (-1022), (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex("default-typed");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex(date0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-28.75265769310143), (-28.75265769310143), (Comparable) null, (Comparable) null);
      int int0 = defaultStatisticalCategoryDataset0.getColumnCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(1.0, (double) (-1), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue((-893), 28);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) 14, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) 1, (Comparable) instant0, (Comparable) month0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) instant0, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue(210, (-2147197326));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 210, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((-1), (-4110));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRowKey((-420));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue((Comparable) null, (Comparable) month0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue(154, 154);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 154, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue((-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getColumnKey((-990));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, 0.0, (Comparable) null, (Comparable) null);
      MockDate mockDate0 = new MockDate();
      Millisecond millisecond0 = new Millisecond((Date) mockDate0);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.add((Number) (byte)116, (Number) 5, (Comparable) null, (Comparable) millisecond0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 5, (Number) null, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.add((double) 5, Double.NaN, (Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (-1022), (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) "default-typed", (Comparable) "default-typed");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      Number number0 = defaultStatisticalCategoryDataset0.getMeanValue((Comparable) month0, (Comparable) month0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset1.equals(defaultStatisticalCategoryDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(defaultStatisticalCategoryDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset1.equals(defaultStatisticalCategoryDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-28.75265769310143), (-28.75265769310143), (Comparable) null, (Comparable) null);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertEquals((-28.75265769310143), range0.getUpperBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-0.5093592766933661), (-0.5093592766933661), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRangeBounds(true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-1.0187185533867322).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(Double.NaN, Double.NaN, (Comparable) null, (Comparable) null);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (-1022), (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) "default-typed", (Comparable) "default-typed");
      assertEquals(4, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      MockDate mockDate0 = new MockDate();
      Number number0 = defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) instant0, (Comparable) mockDate0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) 1, (Comparable) instant0, (Comparable) month0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue(1, 1);
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) (-1022), (Number) 4, (Comparable) "default-typed", (Comparable) "default-typed");
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) "default-typed", (Comparable) "default-typed");
      assertEquals((-1022), (int)integer0);
      assertNotNull(integer0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Month month0 = new Month(date0);
      defaultStatisticalCategoryDataset0.add(3750.63, 3750.63, (Comparable) month0, (Comparable) date0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) 1, (Comparable) instant0, (Comparable) null);
      Number number0 = defaultStatisticalCategoryDataset0.getMeanValue(1, 1);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(false);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRowKey(223);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 223, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(false);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      List list0 = defaultStatisticalCategoryDataset0.getColumnKeys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getColumnKey(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      List list0 = defaultStatisticalCategoryDataset0.getRowKeys();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex("default-typed");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex("default-typed");
      assertEquals((-1), int0);
  }
}
