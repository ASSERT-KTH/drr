/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 13 22:48:37 GMT 2017
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfGraphics2D;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.JViewport;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SeriesDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.DefaultXYZDataset;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(0.0);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      CategoryDataset categoryDataset0 = combinedRangeCategoryPlot0.getDataset(1);
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(1);
      assertEquals("AxisLocation.BOTTOM_OR_RIGHT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      categoryPlot0.getDomainAxisLocation(1);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedDomainCategoryPlot0.setDomainAxis(0, categoryAxis0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.mapDatasetToRangeAxis(3645, 473);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logarithmicAxis0);
      combinedRangeCategoryPlot0.zoom(1.0E-8);
      assertEquals((-1.0E-8), logarithmicAxis0.getLowerBound(), 0.01);
      assertEquals(1.0E-8, logarithmicAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      combinedRangeCategoryPlot0.setRenderer(0, (CategoryItemRenderer) lineAndShapeRenderer0);
      LineAndShapeRenderer lineAndShapeRenderer1 = (LineAndShapeRenderer)combinedRangeCategoryPlot0.getRenderer(0);
      assertTrue(lineAndShapeRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)categoryPlot0.getRenderer();
      assertFalse(ganttRenderer1.getIncludeBaseInRange());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      int int0 = combinedRangeCategoryPlot0.getRangeAxisIndex((ValueAxis) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getRangeAxisForDataset(482);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setPositiveArrowVisible(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LogAxis logAxis1 = (LogAxis)combinedRangeCategoryPlot0.getRangeAxisForDataset(10);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertNotNull(logAxis1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setTickMarkInsideLength(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LogAxis logAxis1 = (LogAxis)combinedRangeCategoryPlot0.getRangeAxisForDataset(10);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(logAxis1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = (NumberAxis)combinedRangeCategoryPlot0.getRangeAxisForDataset(8);
      assertNotNull(numberAxis0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      ValueAxis valueAxis0 = combinedDomainCategoryPlot0.getRangeAxis();
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      cyclicNumberAxis0.setTickMarkInsideLength((-2178.78F));
      CyclicNumberAxis cyclicNumberAxis1 = (CyclicNumberAxis)categoryPlot0.getRangeAxis();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(cyclicNumberAxis1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      CyclicNumberAxis cyclicNumberAxis1 = (CyclicNumberAxis)categoryPlot0.getRangeAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertNotNull(cyclicNumberAxis1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(657.76793841, 2064.1389, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      int int0 = combinedRangeCategoryPlot0.getIndexOf((CategoryItemRenderer) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      categoryPlot0.setRenderer(570, (CategoryItemRenderer) lineRenderer3D0);
      int int0 = categoryPlot0.getIndexOf(lineRenderer3D0);
      assertEquals(570, int0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(" 8.F z!H!|6GAm");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      boolean boolean0 = combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("0?A4R1Jo5(g- C,2vX");
      int int0 = combinedRangeCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(" coords=\"");
      DateAxis dateAxis0 = new DateAxis(" coords=\"");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) levelRenderer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = (DefaultStatisticalCategoryDataset)categoryPlot0.getDataset();
      assertSame(defaultStatisticalCategoryDataset0, defaultStatisticalCategoryDataset1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("PLh|!>en*]wy");
      combinedRangeCategoryPlot0.setDomainAxis(1365, (CategoryAxis) extendedCategoryAxis0, true);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[8];
      // Undeclared exception!
      combinedRangeCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("''EA2M?.jpfelqos/", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) symbolAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2012.6149676), (-1167.84188));
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderer((-997), (CategoryItemRenderer) stackedBarRenderer3D0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderer((-958), (CategoryItemRenderer) statisticalLineAndShapeRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-110), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxis(130, (ValueAxis) moduloAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("E/cv^Xb@RSi`.h@fA");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-2546), (ValueAxis) numberAxis3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((Date) mockDate0);
      PeriodAxis periodAxis0 = new PeriodAxis("Default Group", (RegularTimePeriod) fixedMillisecond0, (RegularTimePeriod) fixedMillisecond0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) periodAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation(15);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((-2656), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((-4181), (AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxis((-2278), (CategoryAxis) categoryAxis3D0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.setDataset((-1), (CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.mapDatasetToDomainAxis((-3818), 3621);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(2288, (-1542), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 15");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeLine((Graphics2D) null, defaultCaret0, (-731.119), numberAxis3D0.DEFAULT_TICK_MARK_STROKE, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 15");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)combinedRangeCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("gKuJ0D");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker((CategoryMarker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) (-126);
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Number[][] numberArray0 = new Number[9][0];
      Number[] numberArray1 = new Number[1];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setAnchorValue(1.0, true);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("hj0>!0E");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      LogAxis logAxis0 = new LogAxis("Null 'annotation' argument.");
      valueAxisArray0[3] = (ValueAxis) logAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      categoryPlot0.getDataRange(logAxis0);
      assertEquals(1.258925411794167, logAxis0.getUpperBound(), 0.01);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(0.0, true);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = combinedRangeCategoryPlot0.getRangeMarkers(1697, layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addRangeMarker(346, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis((String) null, (TimeZone) zoneInfo0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) 500, (-4292.6338354));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, (CategoryAxis) categoryAxis3D0, (ValueAxis) dateAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addRangeMarker(500, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(0, layer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(65280, layer0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(1787, categoryMarker0, layer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(2230.819477542);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) defaultValueDataset0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent((Object) thermometerPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset((SeriesDataset) null, 10);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "x");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeZone) simpleTimeZone0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) subSeriesDataset0, (Dataset) timeSeriesCollection0);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) 10, 26.0, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) intervalMarker0, (Dataset) defaultXYZDataset0);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      BarRenderer3D barRenderer3D1 = (BarRenderer3D)categoryPlot0.getRendererForDataset((CategoryDataset) null);
      assertFalse(barRenderer3D1.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRenderer(8957, (CategoryItemRenderer) null, true);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(657.76793841, 2064.1389, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      CategoryItemRenderer categoryItemRenderer0 = combinedRangeCategoryPlot0.getRenderer((-1));
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryDataset categoryDataset0 = combinedDomainCategoryPlot0.getDataset((-2864));
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      categoryPlot0.setRangeAxis(500, (ValueAxis) logarithmicAxis0, true);
      categoryPlot0.configureRangeAxes();
      assertEquals(501, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisEdge(8);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.setRangeAxisLocation(1071, axisLocation0, false);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxis(10);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[4];
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.LocalizationBundle");
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedRangeCategoryPlot0.configureDomainAxes();
      assertEquals(4, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge((-588));
      assertEquals("RectangleEdge.TOP", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) numberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      categoryPlot0.setDomainAxisLocation(714, axisLocation0, true);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(0, axisLocation0, false);
      assertEquals("AxisLocation.TOP_OR_LEFT", axisLocation0.toString());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(0);
      assertEquals("AxisLocation.BOTTOM_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot0.getDomainAxis((-96));
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("IP^nI9W");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, categoryAxis0, (ValueAxis) null, (CategoryItemRenderer) stackedAreaRenderer0);
      CategoryAxis categoryAxis1 = categoryPlot0.getDomainAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertNotNull(categoryAxis1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setWeight(0);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryPlot0.setDomainAxis(categoryAxis0);
      assertEquals(1, categoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(657.76793841, 2064.1389, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend((PaintScale) lookupPaintScale0, (ValueAxis) cyclicNumberAxis0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isDomainZoomable();
      assertFalse(boolean0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.mapDatasetToDomainAxis(2, 0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.mapDatasetToRangeAxis((-1701), (-17));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isRangeZoomable();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot0.getDomainAxis();
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("n%Kco_QV");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) logAxis0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      RectangleEdge rectangleEdge0 = categoryPlot0.getRangeAxisEdge();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals("RectangleEdge.LEFT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boolean boolean0 = combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0, 12.0);
      categoryPlot0.setRangeAxis(570, (ValueAxis) cyclicNumberAxis0);
      assertEquals(571, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      LogAxis logAxis1 = (LogAxis)combinedRangeCategoryPlot0.getRangeAxis();
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4752.6), 0.2, (String) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedBarRenderer0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertEquals(0, categoryPlot1.getRangeAxisCount());
      assertEquals(0, categoryPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) areaRenderer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      boolean boolean0 = categoryPlot0.equals(statisticalLineAndShapeRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setAnchorValue(0.0, false);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes((double) 1.0F, 1.0E-8, (PlotRenderingInfo) null, (Point2D) point2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.0) <= upper (0.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.zoomRangeAxes(25000.0, 0.0, plotRenderingInfo0, (Point2D) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Category 11", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, (Plot) combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.zoomRangeAxes(2.5E-4, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertTrue(chartPanel0.getRefreshBuffer());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[1];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) 0, (double) 0, (double) 10, 10.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        categoryPlot0.drawAxes((Graphics2D) null, rectangle2D_Double0, rectangle2D_Float0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.G2TextMeasurer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(657.76793841, 2064.1389, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getCategories();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      valueAxisArray0[2] = (ValueAxis) logarithmicAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      categoryPlot0.setDataset(247, (CategoryDataset) defaultStatisticalCategoryDataset0);
      assertEquals(4, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.plot.LocalizationBundle");
      categoryPlot0.getCategoriesForAxis(categoryAxis0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 1.0F, 8.0);
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      categoryPlot0.setDataset(247, (CategoryDataset) defaultStatisticalCategoryDataset0);
      assertEquals(248, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0, (double) 0, "");
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 0, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 15");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)combinedRangeCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 0, layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 15");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)combinedRangeCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0);
      combinedRangeCategoryPlot0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, (PlotRenderingInfo) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 15");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)combinedRangeCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D_Double0, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.render((Graphics2D) null, rectangle2D_Float0, 8, plotRenderingInfo0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      categoryPlot0.setRangeAxis(500, (ValueAxis) logarithmicAxis0, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1076.0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) 0, (double) 0, (double) 10, 10.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        categoryPlot0.drawAxes((Graphics2D) null, rectangle2D_Double0, rectangle2D_Float0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1076.0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) 0, (double) 0, (double) 10, 10.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Map map0 = categoryPlot0.drawAxes((Graphics2D) null, rectangle2D_Double0, rectangle2D_Float0, plotRenderingInfo0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      categoryPlot0.setOrientation(plotOrientation0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) 0, (double) 0, (double) 10, 10.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        categoryPlot0.drawAxes((Graphics2D) null, rectangle2D_Double0, rectangle2D_Float0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      categoryPlot0.setRangeAxis(500, (ValueAxis) logarithmicAxis0, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) 0, (double) 0, (double) 10, 10.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        categoryPlot0.drawAxes((Graphics2D) null, rectangle2D_Double0, rectangle2D_Float0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) 1.0F, 1550.481594219519, (Comparable) true, 10.0, categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      categoryPlot0.removeAnnotation(categoryLineAnnotation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("gM\"iO)^+8HsTH", (Comparable) 1.0F, 2069.99302587749, (double) 1.0F);
      categoryPlot0.addAnnotation(categoryPointerAnnotation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Color color0 = (Color)spiderWebPlot0.getLabelPaint();
      categoryPlot0.setRangeCrosshairPaint(color0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4752.6), 0.2, (String) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedBarRenderer0);
      categoryPlot0.setRangeCrosshairStroke(categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeCrosshairVisible(false);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      categoryPlot0.clearRangeMarkers(2958465);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      combinedRangeCategoryPlot0.getRangeMarkers(500, (Layer) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(81, layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(" 8.F z!H!|6GAm");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) 10, 0.0);
      combinedDomainCategoryPlot0.addRangeMarker((-12), (Marker) intervalMarker0, (Layer) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainMarkers(11);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      Collection collection0 = combinedRangeCategoryPlot0.getDomainMarkers(500, (Layer) null);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("hj0>!0E");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logarithmicAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, layer0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker(8, (CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.zoom(2260.438);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("#|UOsv~");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom((-1167.84188));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.handleClick((-707), 156, plotRenderingInfo0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("Category 3");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 3");
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, categoryAxis0, (ValueAxis) numberAxis3D0, (CategoryItemRenderer) stackedBarRenderer0);
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("''EA2M?.jpfelqos/", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) symbolAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinePaint(symbolAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      assertEquals(1.0E-8, logAxis0.getAutoRangeMinimumSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeGridlinesVisible(false);
      assertFalse(categoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("1.2.840.113549.1.1.1", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) symbolAxis0);
      combinedRangeCategoryPlot0.setDomainGridlinePaint(symbolAxis0.DEFAULT_GRID_BAND_PAINT);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlineStroke(logarithmicAxis0.DEFAULT_TICK_MARK_STROKE);
      assertFalse(combinedRangeCategoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainGridlinePosition((CategoryAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(true);
      assertTrue(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(false);
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      // Undeclared exception!
      try { 
        categoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("qkwoBv,PRMe");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      combinedRangeCategoryPlot0.setRowRenderingOrder(sortOrder0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("*_q=(4AVDIZk.5UKyNp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      String[] stringArray0 = new String[6];
      Number[][] numberArray0 = new Number[6][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      CategoryItemRenderer categoryItemRenderer0 = categoryPlot0.getRendererForDataset(defaultIntervalCategoryDataset0);
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[7];
      combinedRangeCategoryPlot0.setRenderers(categoryItemRendererArray0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      combinedRangeCategoryPlot0.setRenderer(0, (CategoryItemRenderer) layeredBarRenderer0, false);
      assertTrue(layeredBarRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(" coords=\"");
      DateAxis dateAxis0 = new DateAxis(" coords=\"");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) levelRenderer0);
      categoryPlot0.setRenderer((CategoryItemRenderer) levelRenderer0, true);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getRenderer(3);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("{fq+QN)a");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) intervalBarRenderer0);
      categoryPlot0.setDataset(500, (CategoryDataset) null);
      assertEquals(501, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeAxis(1, (ValueAxis) null, false);
      assertEquals(2, combinedRangeCategoryPlot0.getRangeAxisCount());
      
      combinedRangeCategoryPlot0.clearRangeAxes();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeAxes();
      combinedRangeCategoryPlot0.getRangeAxisCount();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(500);
      categoryPlot0.setRangeAxisLocation(axisLocation0, true);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((long) 10);
      PeriodAxis periodAxis0 = new PeriodAxis("Category 7", (RegularTimePeriod) fixedMillisecond0, (RegularTimePeriod) fixedMillisecond0, fixedMillisecond0.DEFAULT_TIME_ZONE);
      int int0 = combinedRangeCategoryPlot0.getRangeAxisIndex(periodAxis0);
      assertEquals((-1), int0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(2230.819477542);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) defaultValueDataset0);
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.setRangeAxis(497, (ValueAxis) numberAxis0, true);
      int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(numberAxis0);
      assertEquals(498, combinedDomainCategoryPlot0.getRangeAxisCount());
      assertEquals(497, int0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      categoryPlot0.clearDomainAxes();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category 5");
      combinedDomainCategoryPlot0.setDomainAxis(1, (CategoryAxis) subCategoryAxis0, false);
      assertEquals(2, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      CategoryAxis3D categoryAxis3D1 = (CategoryAxis3D)categoryPlot0.getDomainAxisForDataset(500);
      assertNotNull(categoryAxis3D1);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxis(10);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      combinedRangeCategoryPlot0.setAxisOffset(logAxis0.DEFAULT_AXIS_LABEL_INSETS);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeCategoryPlot0.getDomainGridlineStroke();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("b|Y+AW0<]$S");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("!?\"}_,-^3");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      categoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearAnnotations();
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      combinedRangeCategoryPlot0.getFixedLegendItems();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getDataset();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boolean boolean0 = combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) taskSeriesCollection0);
      Point2D.Double point2D_Double0 = (Point2D.Double)spiderWebPlot0.calculateLabelLocation(rectangle2D_Double0, 45.0, rectangle2D_Double0, 10);
      combinedRangeCategoryPlot0.zoomDomainAxes(0.0, 0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(" coords=\"");
      DateAxis dateAxis0 = new DateAxis(" coords=\"");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) levelRenderer0);
      categoryPlot0.getDomainGridlinePaint();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = (Color)combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      assertEquals(-16776961, color0.getRGB());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis((String) null, (TimeZone) zoneInfo0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) 500, (-4292.6338354));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, (CategoryAxis) categoryAxis3D0, (ValueAxis) dateAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setDataset((CategoryDataset) taskSeriesCollection0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(657.76793841, 2064.1389, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      boolean boolean0 = combinedRangeCategoryPlot0.isDomainGridlinesVisible();
      assertFalse(boolean0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2915.6222077, "^VDh");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) null);
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getRangeGridlineStroke();
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      double double0 = combinedRangeCategoryPlot0.getRangeCrosshairValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PdfContentByte pdfContentByte0 = new PdfContentByte((PdfWriter) null);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes((-3206.0F), (-737.0F), false, (-3206.0F));
      combinedRangeCategoryPlot0.drawRangeLine(pdfGraphics2D0, rectangle2D_Double0, 0.0, logAxis0.DEFAULT_TICK_MARK_STROKE, logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) areaRenderer0);
      boolean boolean0 = categoryPlot0.isRangeGridlinesVisible();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("!?\"}_,-^3");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals("RectangleEdge.BOTTOM", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-45.0), (-45.0));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) null);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getWeight();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      AxisSpace axisSpace0 = combinedRangeCategoryPlot0.getFixedDomainAxisSpace();
      assertNull(axisSpace0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      int int0 = combinedRangeCategoryPlot0.getDomainAxisCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, 10);
      assertEquals(10, combinedDomainCategoryPlot0.getWeight());
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedRangeCategoryPlot0.getDatasetRenderingOrder();
      assertEquals("DatasetRenderingOrder.REVERSE", datasetRenderingOrder0.toString());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("n%Kco_QV");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) true);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: ");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 0.0F, "");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) barRenderer3D0);
      categoryPlot0.setAnchorValue(10.0);
      assertEquals(10.0, categoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(axisLocation0);
      assertFalse(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) ganttRenderer0);
      categoryPlot0.getDrawSharedDomainAxis();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      RectangleInsets rectangleInsets0 = combinedRangeCategoryPlot0.getAxisOffset();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      categoryPlot0.setRangeAxisLocation(axisLocation0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals("AxisLocation.BOTTOM_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getAnchorValue();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisCount();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-138.7), (-138.7));
      combinedDomainCategoryPlot0.addRangeMarker((Marker) intervalMarker0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getRangeCrosshairStroke();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("''EA2M?.jpfelqos/", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) symbolAxis0);
      combinedRangeCategoryPlot0.getAnnotations();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      Color color0 = (Color)combinedRangeCategoryPlot0.getRangeGridlinePaint();
      assertEquals(255, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRenderer();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("b|Y+AW0<]$S");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(722, axisLocation0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.zoomDomainAxes(250.0, plotRenderingInfo0, (Point2D) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = combinedDomainCategoryPlot0.getDatasetCount();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeCrosshairValue((double) 1.0F);
      assertEquals(1.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("java.awt.geom.Rectangle2D$Double[x=-4.0,y=-4.0,w=8.0,h=8.0]");
      PdfContentByte pdfContentByte0 = new PdfContentByte((PdfWriter) null);
      PdfGraphics2D pdfGraphics2D0 = (PdfGraphics2D)pdfContentByte0.createGraphicsShapes(0.85F, 748.063F, false, 0.8F);
      JFreeChart jFreeChart0 = new JFreeChart("B'SmrHRQ", extendedCategoryAxis0.DEFAULT_TICK_LABEL_FONT, (Plot) combinedRangeCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getBounds();
      combinedRangeCategoryPlot0.drawBackground(pdfGraphics2D0, rectangle0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      categoryPlot0.getIndexOf(lineRenderer3D0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-1), (CategoryAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("Category 3");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Category 3");
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, categoryAxis0, (ValueAxis) numberAxis3D0, (CategoryItemRenderer) stackedBarRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation((-318));
      categoryPlot0.setRangeAxisLocation(500, axisLocation0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }
}
