/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 23 10:13:04 GMT 2017
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import javax.swing.border.BevelBorder;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.DefaultKeyedValues;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeTableXYDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(0.0);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getRangeAxisEdge(1);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals("RectangleEdge.RIGHT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      combinedRangeCategoryPlot0.setRangeAxis(500, (ValueAxis) numberAxis3D0);
      assertEquals(501, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("pT'*5p%;F!IQnw>Uh2");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      GrayPaintScale grayPaintScale0 = new GrayPaintScale();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("C64af-e|ykCQmU\"=H");
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend((PaintScale) grayPaintScale0, (ValueAxis) numberAxis3D0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.mapDatasetToDomainAxis(2528, (-1940));
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(4.0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      categoryPlot0.setDomainAxisLocation(987, axisLocation0);
      assertEquals("AxisLocation.TOP_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setWeight(2528);
      int int0 = categoryPlot0.getWeight();
      assertEquals(2528, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(layer0);
      assertNotNull(collection0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) numberAxis3D0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      categoryPlot0.getRangeAxis();
      assertEquals(9, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      categoryPlot0.getRangeAxis();
      assertEquals(9, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getOrientation();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[8];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      int int0 = combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxisArray0[0]);
      assertEquals(8, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[8];
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      int int0 = combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxisArray0[2]);
      assertEquals(8, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category_Plot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      subCategoryAxis0.setTickLabelsVisible(false);
      combinedDomainCategoryPlot0.getDomainAxis();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxis();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[8];
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[0].setCategoryLabelPositionOffset((-1));
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedDomainCategoryPlot0.getDomainAxis();
      assertEquals(8, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("vdU2[");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer0);
      DefaultCategoryDataset defaultCategoryDataset1 = (DefaultCategoryDataset)categoryPlot0.getDataset();
      assertSame(defaultCategoryDataset1, defaultCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      AxisSpace axisSpace1 = extendedCategoryAxis0.reserveSpace(sunGraphics2D0, categoryPlot0, defaultCaret0, rectangleEdge0, axisSpace0);
      categoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, axisSpace1);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      axisSpace0.setRight(2.5E-6);
      AxisSpace axisSpace1 = categoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, axisSpace0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertSame(axisSpace1, axisSpace0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      categoryPlot0.calculateDomainAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace0);
      categoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, axisSpace0);
      assertEquals(4.0, axisSpace0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      AxisSpace axisSpace1 = extendedCategoryAxis0.reserveSpace(sunGraphics2D0, categoryPlot0, defaultCaret0, rectangleEdge0, axisSpace0);
      categoryPlot0.calculateDomainAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace1);
      assertEquals(4.0, axisSpace0.getTop(), 0.01);
      assertEquals(4.0, axisSpace0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      AxisSpace axisSpace1 = extendedCategoryAxis0.reserveSpace(sunGraphics2D0, categoryPlot0, defaultCaret0, rectangleEdge0, axisSpace0);
      categoryPlot0.calculateDomainAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace1);
      assertEquals(4.0, axisSpace1.getBottom(), 0.01);
      assertEquals(0.0, axisSpace0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes(2750.651867735973, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("#d!yt9t", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) symbolAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderer((-2529), (CategoryItemRenderer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-1214), (CategoryItemRenderer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-809));
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-292), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("(Wy[KDlDLTfWDjCT7P");
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxis((-609), (ValueAxis) logarithmicAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      ModuloAxis moduloAxis0 = new ModuloAxis("javax.swing.event.CaretListener", (Range) null);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-1214), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainAxis((-1), (CategoryAxis) extendedCategoryAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxis((int) (byte) (-21), (CategoryAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDataset((-412), (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      // Undeclared exception!
      try { 
        categoryPlot0.mapDatasetToRangeAxis((-86), 71);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.mapDatasetToDomainAxis((-133), (-2258));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawRangeLine(sunGraphics2D0, rectangle2D_Double0, (-133), combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"Yh&\"bxQ", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, (Plot) combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawBackground(sunGraphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      PlotState plotState0 = new PlotState();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, false, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.draw((Graphics2D) null, (Rectangle2D) null, point2D_Double0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 1.0, (Comparable) 0, (Comparable) 0.05);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedAreaRenderer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ModuloAxis moduloAxis0 = new ModuloAxis("9snX", (Range) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) moduloAxis0, (CategoryItemRenderer) stackedBarRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Number[][] numberArray0 = new Number[6][7];
      Number[] numberArray1 = new Number[6];
      numberArray0[2] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, categoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) lineAndShapeRenderer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertEquals(0, categoryPlot1.getRangeAxisCount());
      assertEquals(0, categoryPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(2.0E8, true);
      combinedRangeCategoryPlot0.getAnchorValue();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1316.4041149623936), "\"Yh&\"bxQ");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Range range0 = combinedDomainCategoryPlot0.getDataRange((ValueAxis) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("cl3b0k");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-139.8123963));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setRangeCrosshairValue(1.0, false);
      assertEquals(1.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(1319, layer0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker((double) 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addRangeMarker((-1898), (Marker) valueMarker0, layer0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addRangeMarker(213, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(3, layer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) true);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(1, categoryMarker0, layer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent((Object) rectangle2D_Double0);
      categoryPlot0.rendererChanged(rendererChangeEvent0);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(10.0, 998.99438416, 10.0, 998.99438416);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1720.1834652774), 0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) line2D_Double0, (Dataset) defaultStatisticalCategoryDataset0);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) combinedDomainCategoryPlot0, (Dataset) timeTableXYDataset0);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getRendererForDataset((CategoryDataset) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRenderer(10, (CategoryItemRenderer) null, true);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("'_\"cf");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      combinedDomainCategoryPlot0.setRenderer(500, (CategoryItemRenderer) stackedBarRenderer0, false);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getRenderer((-1214));
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRenderer(2);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-364));
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = categoryPlot0.getRangeAxisForDataset(0);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisForDataset(1049);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisForDataset(0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(2534, (CategoryDataset) taskSeriesCollection0);
      assertEquals(2535, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDataset(1994, (CategoryDataset) null);
      assertEquals(1995, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDataset((-394));
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getDataset(81);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.configureRangeAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(4847.95983948, "Second");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.configureRangeAxes();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.setRangeAxisLocation(10, axisLocation0, false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(4, axisLocation0, true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      assertEquals("AxisLocation.TOP_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3738.5386103978), (double) 1.0F, "*x+oju");
      combinedDomainCategoryPlot0.setRangeAxis(67, (ValueAxis) cyclicNumberAxis0, true);
      assertEquals(1.05, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(68, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.setRangeAxis(0, (ValueAxis) numberAxis0, false);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeAxis(81, (ValueAxis) null, false);
      assertEquals(82, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxis(18);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category_Plot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxis((-209));
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.configureDomainAxes();
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.configureDomainAxes();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(340.162593515, "Kp`\"iDSHms[g<");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedRangeCategoryPlot0.setDomainAxisLocation(1, axisLocation0, true);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(28.312262575808134, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setDomainAxisLocation(327, (AxisLocation) null, false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(1049);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedRangeCategoryPlot0.setDomainAxis(1414, categoryAxis0, false);
      assertEquals(1415, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainAxis(2610, (CategoryAxis) null, true);
      assertEquals(2611, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      categoryPlot0.getDomainAxis(0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxis((-4351));
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = categoryPlot0.getDomainAxis(2);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("HPB0_aj@!+':=]qt\"1<");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2212.99210663), 0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis3D0, (CategoryItemRenderer) stackedBarRenderer3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      categoryPlot0.setOrientation(plotOrientation0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CategoryAxis categoryAxis0 = categoryPlot0.getDomainAxis();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot1 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, categoryAxis0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedAreaRenderer0);
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getDomainGridlineStroke();
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isDomainZoomable();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(boolean0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToDomainAxis(Integer.MAX_VALUE, Integer.MAX_VALUE);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.mapDatasetToRangeAxis(1070, 2744);
      assertTrue(combinedRangeCategoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      boolean boolean0 = combinedDomainCategoryPlot0.isRangeZoomable();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      boolean boolean0 = combinedDomainCategoryPlot0.isRangeGridlinesVisible();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isDomainGridlinesVisible();
      assertFalse(boolean0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      assertEquals("AxisLocation.BOTTOM_OR_LEFT", axisLocation0.toString());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0, true);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge();
      assertEquals("RectangleEdge.BOTTOM", rectangleEdge0.toString());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedDomainCategoryPlot0.setDomainAxis(525, (CategoryAxis) categoryAxis3D0);
      assertEquals(526, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getRangeAxisEdge();
      assertEquals("RectangleEdge.LEFT", rectangleEdge0.toString());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = (Color)combinedRangeCategoryPlot0.getRangeGridlinePaint();
      assertEquals(-4144960, color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedRangeAxisSpace();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedLegendItems();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeCategoryPlot0.getRangeGridlineStroke();
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis(2019, (ValueAxis) moduloAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = (Color)combinedRangeCategoryPlot0.getDomainGridlinePaint();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertEquals(-4144960, color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      AxisSpace axisSpace0 = categoryPlot0.getFixedDomainAxisSpace();
      assertNull(axisSpace0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxis();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      assertTrue(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
      
      combinedDomainCategoryPlot1.setRangeCrosshairStroke(extendedCategoryAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertFalse(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(true);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertTrue(combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1, combinedDomainCategoryPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      assertTrue(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
      
      extendedCategoryAxis0.setLabelToolTip("vdU2[");
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertFalse(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      assertTrue(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
      
      combinedDomainCategoryPlot0.setBackgroundPaint(extendedCategoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertFalse(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertEquals(1, combinedDomainCategoryPlot1.getDatasetCount());
      assertEquals(0, combinedDomainCategoryPlot1.getRangeAxisCount());
      assertTrue(combinedDomainCategoryPlot0.equals((Object)combinedDomainCategoryPlot1));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("Jonathan Gabbai");
      boolean boolean0 = categoryPlot0.equals(periodAxis0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(0.0, false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 15);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes(10.0, 0.0, plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (10.5) <= upper (0.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 15);
      categoryPlot0.zoomRangeAxes(10.0, 0.0, plotRenderingInfo0, (Point2D) point0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Day day0 = new Day();
      Hour hour0 = new Hour((-4534), day0);
      PeriodAxis periodAxis0 = new PeriodAxis("}h<yR1fP/}Ieq+lw.s", (RegularTimePeriod) hour0, (RegularTimePeriod) hour0, hour0.DEFAULT_TIME_ZONE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) periodAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.zoomRangeAxes((-2527.84), plotRenderingInfo0, (Point2D) null);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double(2.302585092994046, (double) 1.0F);
      categoryPlot0.zoomRangeAxes(1663.3929781570446, (PlotRenderingInfo) null, (Point2D) point2D_Double0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("cl3b0k");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-139.8123963));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      List list0 = categoryPlot0.getCategories();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getCategories();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("category=");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("category=");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) null);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("category=");
      categoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((float) 0, (float) (-1), (float) 0, 0.0F);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createUnion(rectangle2D_Float0);
      AxisSpace axisSpace0 = categoryPlot0.calculateDomainAxisSpace(sunGraphics2D0, rectangle2D_Double1, (AxisSpace) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(4.0, axisSpace0.getBottom(), 0.01);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      String[] stringArray0 = new String[5];
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      DateAxis dateAxis0 = new DateAxis(stringArray0[0]);
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      DateAxis dateAxis1 = new DateAxis();
      valueAxisArray0[0] = (ValueAxis) dateAxis1;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      assertEquals(7, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 2.0F, 0.0);
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D_Double0, plotOrientation0, 1.0F, cyclicNumberAxis0, polarPlot0.DEFAULT_OUTLINE_STROKE, polarPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 2.0F, 0.0);
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D_Double0, plotOrientation0, 1.0F, cyclicNumberAxis0, polarPlot0.DEFAULT_OUTLINE_STROKE, polarPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      combinedRangeCategoryPlot0.drawRangeLine(sunGraphics2D0, rectangle2D_Double0, 0.0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      assertEquals((-1118482), sunGraphics2D0.eargb);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"Yh&\"bxQ", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, (Plot) combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers(sunGraphics2D0, (Rectangle2D) null, (-1), layer0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.drawDomainMarkers(sunGraphics2D0, rectangle2D_Double0, 0, layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.drawAnnotations(sunGraphics2D0, rectangle2D_Double0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      List list0 = combinedDomainCategoryPlot0.getSubplots();
      combinedRangeCategoryPlot0.drawRangeGridlines(sunGraphics2D0, rectangle2D_Double0, list0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1108, 1, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      BevelBorder bevelBorder0 = new BevelBorder(2209, sunGraphics2D0.backgroundColor, sunGraphics2D0.backgroundColor);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) chartPanel0, 4, 10, 600, 3);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Map map0 = combinedRangeCategoryPlot0.drawAxes(sunGraphics2D0, rectangle0, rectangle0, plotRenderingInfo0);
      assertEquals((-8355712), sunGraphics2D0.pixel);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) categoryPlot0);
      jFreeChart0.createBufferedImage(10, 2528, (ChartRenderingInfo) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) categoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(42, 10);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      categoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.05, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      categoryPlot0.setFixedDomainAxisSpace(axisSpace0);
      AxisSpace axisSpace1 = categoryPlot0.calculateDomainAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace0);
      assertEquals(0.0, axisSpace1.getBottom(), 0.01);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'lineStroke' argument.", (Comparable) false, 1800.0);
      categoryPlot0.removeAnnotation(categoryTextAnnotation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) 10, 0.0, (Comparable) 0.0, (-1318.0), categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addAnnotation(categoryLineAnnotation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(sunGraphics2D0.backgroundColor);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("7Oa)Ppe~W%3");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(false);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearRangeMarkers(10);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.05, 5659.382879);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, categoryAxis0, (ValueAxis) null, (CategoryItemRenderer) stackedBarRenderer3D0);
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(0, layer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers(7, (Layer) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearRangeMarkers();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      SystemColor systemColor0 = SystemColor.textHighlightText;
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) true, (Paint) systemColor0, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker((Marker) null, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainMarkers(0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainMarkers((Layer) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      Collection collection0 = categoryPlot0.getDomainMarkers(0, layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      DateAxis dateAxis0 = new DateAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.clearDomainMarkers();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) true);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addDomainMarker(1, categoryMarker0, layer0);
      categoryPlot0.addDomainMarker(1, categoryMarker0, layer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) "Null 'order' argument.");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(12, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.zoom(1286.514728639);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom((-1827.40075));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.handleClick(515, 515, plotRenderingInfo0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 2.0F, 0.05, "Null 'marker' not permitted.");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) 0.0F, (-30.35583197939));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getLegendItems();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)categoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      categoryPlot0.drawRangeCrosshair(sunGraphics2D0, rectangle2D_Double0, plotOrientation0, 10, logarithmicAxis0, logarithmicAxis0.DEFAULT_AXIS_LINE_STROKE, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      categoryPlot0.setRangeGridlinePaint(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      combinedRangeCategoryPlot0.setRangeGridlineStroke(basicStroke0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeGridlinesVisible(true);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Color color0 = (Color)categoryPlot0.getRangeCrosshairPaint();
      categoryPlot0.setDomainGridlinePaint(color0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(-16776961, color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      BasicStroke basicStroke0 = (BasicStroke)fastScatterPlot0.getRangeGridlineStroke();
      categoryPlot0.setDomainGridlineStroke(basicStroke0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      assertTrue(categoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("vdU2[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(false);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Day day0 = new Day();
      Hour hour0 = new Hour((-4534), day0);
      PeriodAxis periodAxis0 = new PeriodAxis("}h<yR1fP/}Ieq+lw.s", (RegularTimePeriod) hour0, (RegularTimePeriod) hour0, hour0.DEFAULT_TIME_ZONE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) periodAxis0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedRangeCategoryPlot0.setRowRenderingOrder(sortOrder0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("The number of series keys does not match the data.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      double[][] doubleArray0 = new double[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemRenderer categoryItemRenderer0 = categoryPlot0.getRendererForDataset(defaultIntervalCategoryDataset0);
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      DateAxis dateAxis0 = new DateAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryPlot0.setRenderers(categoryItemRendererArray0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"Yh&\"bxQ", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, (Plot) combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      boolean boolean0 = combinedDomainCategoryPlot0.render(sunGraphics2D0, (Rectangle2D) null, 0, (PlotRenderingInfo) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) 2.0F, 0.05, "Null 'marker' not permitted.");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) 0.0F, (-30.35583197939));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setDataset((CategoryDataset) taskSeriesCollection0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"Yh&\"bxQ", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, (Plot) combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      boolean boolean0 = combinedDomainCategoryPlot0.render(sunGraphics2D0, (Rectangle2D) null, 1, (PlotRenderingInfo) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeAxes();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearRangeAxes();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("? ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation(0, (AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("category=");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("category=");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) null);
      categoryPlot0.getRangeAxisLocation(500);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisEdge(5);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      categoryPlot0.getDomainAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAxisOffset(combinedRangeCategoryPlot0.DEFAULT_INSETS);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAnchor categoryAnchor0 = categoryPlot0.getDomainGridlinePosition();
      assertEquals("CategoryAnchor.MIDDLE", categoryAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'lineStroke' argument.");
      categoryPlot0.getDomainAxisIndex(subCategoryAxis0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) stackedBarRenderer0, false);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearAnnotations();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryDataset categoryDataset0 = categoryPlot0.getDataset();
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1720.1834652774), 0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      boolean boolean0 = combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("VI/9lw95)", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, (Plot) categoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = chartPanel0.getLocation((Point) null);
      Point2D.Double point2D_Double0 = (Point2D.Double)chartPanel0.translateScreenToJava2D(point0);
      categoryPlot0.zoomDomainAxes(2.0, 2.0, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(chartPanel0.isDomainZoomable());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedDomainCategoryPlot0.setDomainAxis(categoryAxis0);
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(42.0);
      assertEquals(42.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      LegendItemCollection legendItemCollection0 = combinedDomainCategoryPlot0.getLegendItems();
      categoryPlot0.setFixedLegendItems(legendItemCollection0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"Yh&\"bxQ", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, (Plot) combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      combinedDomainCategoryPlot0.drawDomainGridlines(sunGraphics2D0, (Rectangle2D) null);
      assertFalse(combinedDomainCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      double double0 = categoryPlot0.getRangeCrosshairValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", (Plot) combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, (AxisSpace) null);
      combinedRangeCategoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, defaultCaret0, axisSpace0);
      assertEquals(14.0, axisSpace0.getLeft(), 0.01);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) categoryStepRenderer0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)combinedRangeCategoryPlot0.getRenderer();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertNotNull(categoryStepRenderer1);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SortOrder sortOrder0 = categoryPlot0.getRowRenderingOrder();
      assertEquals("SortOrder.ASCENDING", sortOrder0.toString());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      combinedDomainCategoryPlot0.setRenderer(8, (CategoryItemRenderer) stackedAreaRenderer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = categoryPlot0.getWeight();
      assertEquals(0, int0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisCount();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("(Wy[KDlDLTfWDjCT7P");
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) logarithmicAxis0);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      assertEquals("DatasetRenderingOrder.REVERSE", datasetRenderingOrder0.toString());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setAnchorValue(1800.0);
      assertEquals(1800.0, categoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(121);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.getDrawSharedDomainAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getAxisOffset();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getAnchorValue();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisCount();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) 0, 0.0, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      categoryPlot0.addRangeMarker((Marker) intervalMarker0);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      List list0 = combinedDomainCategoryPlot0.getAnnotations();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'marker' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 800, (-3768.15649), (double) 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
      List list0 = defaultKeyedValues0.getKeys();
      combinedDomainCategoryPlot0.drawRangeGridlines(sunGraphics2D0, rectangle2D_Double0, list0);
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRenderer();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainAxisLocation((-364), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double((double) 1319, 236.4681);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, (Plot) thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.zoomDomainAxes((double) 1319, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDrawSharedDomainAxis(false);
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      AxisSpace axisSpace0 = categoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D_Double0);
      assertEquals(0.0, axisSpace0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.getDatasetCount();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("[left=");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"Yh&\"bxQ", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, (Plot) combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea();
      combinedDomainCategoryPlot0.drawBackground(sunGraphics2D0, rectangle2D_Double0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryPlot0.getIndexOf(stackedAreaRenderer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      DateAxis dateAxis0 = new DateAxis();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) subCategoryAxis0, (ValueAxis) dateAxis0, (CategoryItemRenderer) ganttRenderer0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertTrue(categoryPlot1.equals((Object)categoryPlot0));
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setRangeAxisLocation(42, (AxisLocation) null);
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
  }
}
