/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 13 12:43:33 GMT 2017
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.Collection;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultWindDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.render(sunGraphics2D0, rectangle2D_Double0, 1, plotRenderingInfo0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getRangeAxisEdge(1);
      assertEquals("RectangleEdge.RIGHT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4487.51355), "Null 'position' argument.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getDomainAxisLocation(1);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      categoryPlot1.getDomainAxisForDataset(2038);
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0, false);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(3, 10);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      combinedDomainCategoryPlot0.drawBackground(sunGraphics2D0, rectangle2D_Double0);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.drawRangeMarkers((Graphics2D) null, (Rectangle2D) null, (byte) (-128), layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      combinedDomainCategoryPlot0.drawDomainMarkers((Graphics2D) null, rectangle0, (-1966), (Layer) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, (-1569.2864F), (float) 10);
      combinedRangeCategoryPlot0.drawAnnotations((Graphics2D) null, rectangle2D_Float0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      combinedDomainCategoryPlot0.setRenderer(42, (CategoryItemRenderer) lineRenderer3D0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
      assertEquals("AxisLocation.BOTTOM_OR_RIGHT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      numberAxis0.setVisible(false);
      NumberAxis numberAxis1 = (NumberAxis)categoryPlot0.getRangeAxisForDataset(40);
      assertSame(numberAxis0, numberAxis1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getRangeAxisForDataset(40);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxis();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      numberAxis0.setVisible(false);
      NumberAxis numberAxis1 = (NumberAxis)categoryPlot0.getRangeAxis();
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "n");
      cyclicNumberAxis0.setRangeWithMargins(0.0, 0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getRangeAxis();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      int int0 = categoryPlot0.getIndexOf(stackedBarRenderer3D0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("Oa#1=<");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) numberAxis0, (CategoryItemRenderer) lineRenderer3D0);
      categoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("{d");
      categoryAxis3D0.setLabelAngle((-1005.32439));
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      CategoryAxis3D categoryAxis3D1 = (CategoryAxis3D)combinedRangeCategoryPlot0.getDomainAxis();
      assertNotNull(categoryAxis3D1);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      CategoryDataset categoryDataset0 = combinedRangeCategoryPlot0.getDataset();
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getRangeAxisEdge((-1));
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Year year0 = new Year();
      PeriodAxis periodAxis0 = new PeriodAxis("SAVE", (RegularTimePeriod) year0, (RegularTimePeriod) year0, year0.DEFAULT_TIME_ZONE);
      AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Double0);
      AxisSpace axisSpace1 = periodAxis0.reserveSpace(sunGraphics2D0, combinedDomainXYPlot0, rectangle2D_Double0, rectangleEdge0, axisSpace0);
      AxisSpace axisSpace2 = combinedDomainCategoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace1);
      assertSame(axisSpace2, axisSpace1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Double0);
      AxisSpace axisSpace1 = combinedDomainCategoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace0);
      assertSame(axisSpace1, axisSpace0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Double0);
      combinedDomainCategoryPlot0.calculateDomainAxisSpace(sunGraphics2D0, rectangle2D_Double0, axisSpace0);
      assertEquals(8.0, axisSpace0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-4);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10.0, (double) 1.0F, 0.0, 1.0E-4);
      combinedRangeCategoryPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Double0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      combinedDomainCategoryPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Double0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Double point2D_Double0 = new Point2D.Double((double) 3316, (double) 1.0F);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes(852.221769661, 0.05, plotRenderingInfo0, (Point2D) point2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (894.8328581440501) <= upper (0.052500000000000005).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxisLocation((-1272), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(".<Yg;\"z1hRbqLTJ^M");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-1257), (ValueAxis) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((-2461), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ERROR : Relative To String");
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainAxis((-143), (CategoryAxis) subCategoryAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      Number[][] numberArray0 = new Number[2][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDataset((-4846), (CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToRangeAxis((-1189), 600);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.annotations.XYPolygonAnnotation");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick((-1363), (-448), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, (-1569.2864F), (float) 10);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker((Marker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addRangeMarker(17, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker((CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker((CategoryMarker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Number[][] numberArray0 = new Number[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-4273.694665431204));
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) levelRenderer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ModuloAxis moduloAxis0 = new ModuloAxis("!9CS'tCvDe'&-A#", (Range) null);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) moduloAxis0, (CategoryItemRenderer) barRenderer3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double[][] doubleArray0 = new double[4][7];
      double[] doubleArray1 = new double[2];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("k|2tTouJWN");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) defaultIntervalCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis3D0, (CategoryItemRenderer) stackedBarRenderer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 500);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(10, 8);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      categoryPlot0.equals(waferMapPlot0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(0.0, true);
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      Range range0 = categoryPlot0.getDataRange(numberAxis0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.render(sunGraphics2D0, rectangle2D_Double0, 4, plotRenderingInfo0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) (byte)87, true);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers((-1));
      assertTrue(combinedDomainCategoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers((-1637), (Layer) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      PeriodAxis periodAxis0 = new PeriodAxis("|$l3h>2'E|$o2N+{Rx");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) periodAxis0, (CategoryItemRenderer) null);
      IntervalMarker intervalMarker0 = new IntervalMarker((-291.03381), (-2450.404076486), categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addRangeMarker(500, (Marker) intervalMarker0, layer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("p\u0001\"ki{'4c8a");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logarithmicAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 0.2);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addRangeMarker(0, (Marker) categoryMarker0, layer0);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainMarkers(0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis3D0);
      combinedRangeCategoryPlot0.getDomainMarkers(500, (Layer) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) false, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(102, categoryMarker0, layer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ObjectList objectList0 = new ObjectList(15);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent((Object) objectList0);
      categoryPlot0.rendererChanged(rendererChangeEvent0);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) statisticalLineAndShapeRenderer0, (Dataset) defaultValueDataset0);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)categoryPlot0.getRendererForDataset(defaultKeyedValues2DDataset0);
      assertEquals(0.0, stackedBarRenderer3D1.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRenderer(1, (CategoryItemRenderer) null, false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      categoryPlot0.setRenderer(77, (CategoryItemRenderer) groupedStackedBarRenderer0, true);
      assertEquals(0.0, groupedStackedBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) 0, 1.0);
      // Undeclared exception!
      try { 
        categoryPlot0.setRenderer((-1229), (CategoryItemRenderer) stackedBarRenderer3D0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CategoryItemRenderer categoryItemRenderer0 = combinedDomainCategoryPlot0.getRenderer(0);
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      ValueAxis valueAxis0 = combinedRangeCategoryPlot0.getRangeAxisForDataset(0);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryDataset categoryDataset0 = categoryPlot0.getDataset((-2146607626));
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "n");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      CategoryDataset categoryDataset0 = combinedRangeCategoryPlot0.getDataset(500);
      assertNull(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.configureRangeAxes();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.configureRangeAxes();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      categoryPlot0.setRangeAxisLocation(10, axisLocation0, true);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainCategoryPlot0.setRangeAxis(3295, (ValueAxis) dateAxis0, false);
      assertEquals(3296, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeAxis(0, (ValueAxis) null, true);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainCategoryPlot0.setRangeAxis(3315, (ValueAxis) dateAxis0, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent((Object) statisticalLineAndShapeRenderer0, (Dataset) defaultValueDataset0);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(3316, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = (NumberAxis)combinedRangeCategoryPlot0.getRangeAxis(0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(numberAxis0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1982.0255924503433, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.configureDomainAxes();
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.configureDomainAxes();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge((-1008));
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(10, axisLocation0, true);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedDomainCategoryPlot0.setDomainAxisLocation(0, axisLocation0, false);
      assertEquals("AxisLocation.BOTTOM_OR_LEFT", axisLocation0.toString());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisLocation(0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4487.51355), "Null 'position' argument.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      combinedRangeCategoryPlot0.setDomainAxis(500, categoryAxis0, false);
      assertEquals(501, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("Oa#1=<");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) numberAxis0, (CategoryItemRenderer) lineRenderer3D0);
      categoryPlot0.setDomainAxis(0, (CategoryAxis) null, true);
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-3220), (CategoryAxis) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("p\u0001\"ki{'4c8a");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) logarithmicAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedRangeCategoryPlot0.setDomainAxis(1308, (CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.getDomainAxis(1308);
      assertEquals(1309, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot0.getDomainAxis((-2547));
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      categoryPlot0.setOrientation(plotOrientation0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) null, (CategoryItemRenderer) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, (-1569.2864F), (float) 10);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawBackground((Graphics2D) null, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      combinedRangeCategoryPlot0.setDomainAxisLocation(axisLocation0, false);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("Oa#1=<");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) numberAxis0, (CategoryItemRenderer) lineRenderer3D0);
      DefaultCategoryDataset defaultCategoryDataset1 = (DefaultCategoryDataset)categoryPlot0.getDataset();
      assertSame(defaultCategoryDataset0, defaultCategoryDataset1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isDomainZoomable();
      assertFalse(boolean0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.mapDatasetToDomainAxis((-670), 1900);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.isRangeZoomable();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      assertEquals("PlotOrientation.VERTICAL", plotOrientation0.toString());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.isDomainGridlinesVisible();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      categoryPlot0.setRangeAxisLocation(0, axisLocation0, false);
      assertEquals("AxisLocation.BOTTOM_OR_LEFT", axisLocation0.toString());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hK`3Uapo`&J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CategoryAxis3D categoryAxis3D1 = (CategoryAxis3D)combinedDomainCategoryPlot0.getDomainAxis();
      assertNotNull(categoryAxis3D1);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer categoryItemRenderer0 = combinedDomainCategoryPlot0.getRenderer();
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      List list0 = combinedRangeCategoryPlot0.getAnnotations();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxisLocation((AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDatasetRenderingOrder();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, categoryItemRendererArray0[1]);
      categoryPlot0.getFixedRangeAxisSpace();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2039.7), ">KC");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeCategoryPlot0.getRangeGridlineStroke();
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isRangeCrosshairVisible();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("m");
      NumberAxis numberAxis0 = new NumberAxis("");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) numberAxis0, (CategoryItemRenderer) layeredBarRenderer0);
      categoryPlot0.setRangeAxis(2141, (ValueAxis) numberAxis0);
      assertEquals(2142, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      boolean boolean0 = categoryPlot0.equals(statisticalLineAndShapeRenderer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(373.346744916616, false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Double point2D_Double0 = new Point2D.Double((double) 3316, (double) 1.0F);
      combinedRangeCategoryPlot0.zoomRangeAxes((-2737.2528465), 0.05, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.zoomRangeAxes(2712.6879395, 10.0, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertFalse(categoryPlot0.isDomainZoomable());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-4);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.5F, plotRenderingInfo0, (Point2D) null);
      assertFalse(cyclicNumberAxis0.isAutoRange());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.zoomRangeAxes(10.0, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategories();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      PeriodAxis periodAxis0 = new PeriodAxis("The renderer has changed and I don't know what to do!");
      valueAxisArray0[7] = (ValueAxis) periodAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      categoryPlot0.setDataset(1, (CategoryDataset) defaultStatisticalCategoryDataset0);
      assertEquals(8, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      categoryPlot1.setDataset(1, (CategoryDataset) defaultStatisticalCategoryDataset0);
      categoryPlot1.getCategoriesForAxis((CategoryAxis) null);
      assertEquals(2, categoryPlot1.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      
      categoryPlot0.setDataset(1, (CategoryDataset) defaultStatisticalCategoryDataset0);
      categoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      assertEquals(2, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      List list0 = categoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, categoryItemRendererArray0[1]);
      Number[][] numberArray0 = new Number[6][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      categoryPlot0.setDataset(500, (CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(501, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[1] = (ValueAxis) logarithmicAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      assertEquals(2, categoryPlot1.getRangeAxisCount());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot1.equals((Object)categoryPlot0));
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, (-1569.2864F), (float) 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)combinedDomainXYPlot0.getDomainGridlineStroke();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeLine((Graphics2D) null, rectangle2D_Float0, 0.0F, basicStroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      List list0 = categoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("The renderer has changed and I don't know what to do!", (Plot) categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 24);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      categoryPlot0.drawRangeGridlines(sunGraphics2D0, rectangle2D_Double0, list0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      List list0 = combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis0);
      combinedDomainCategoryPlot0.drawRangeGridlines(sunGraphics2D0, rectangle2D_Double0, list0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Fft", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, (Plot) categoryPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-25.57), (double) 1.0F, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Point2D.Float point2D_Float0 = new Point2D.Float((-1.0F), (float) 10);
      PlotState plotState0 = new PlotState();
      categoryPlot0.draw(sunGraphics2D0, rectangle2D_Double0, point2D_Float0, plotState0, (PlotRenderingInfo) null);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 3283, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      AxisSpace axisSpace0 = categoryPlot0.calculateRangeAxisSpace(sunGraphics2D0, rectangle2D_Double0, (AxisSpace) null);
      assertEquals(0.0, axisSpace0.getRight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Y");
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) subCategoryAxis0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, (-1569.2864F), (float) 10);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D_Float0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, (-1569.2864F), (float) 10);
      AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D_Float0, (AxisSpace) null);
      assertEquals(0.0, axisSpace0.getLeft(), 0.01);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) 1.0F, 0.05, (Comparable) 10, (-630.4), combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.removeAnnotation(categoryLineAnnotation0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("1l>/", (Comparable) false, (-36.968388927248));
      combinedRangeCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      categoryPlot0.setRangeCrosshairPaint(fastScatterPlot0.DEFAULT_GRIDLINE_PAINT);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
      categoryPlot0.setRangeCrosshairStroke(basicStroke0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(true);
      assertFalse(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(true);
      boolean boolean0 = combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairVisible(false);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = combinedDomainCategoryPlot0.getRangeMarkers(layer0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeMarkers(30, layer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      Collection collection0 = combinedRangeCategoryPlot0.getRangeMarkers(39, layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeMarkers();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F);
      combinedRangeCategoryPlot0.addRangeMarker((-1), (Marker) categoryMarker0, (Layer) null);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getDomainMarkers((-8), layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers((-2992), layer0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 12.0, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker((-154), categoryMarker0, layer0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10.0F, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker(1600, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addDomainMarker((-4430), (CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      combinedRangeCategoryPlot0.zoom(0.05);
      assertFalse(dateAxis0.isAutoRange());
      assertEquals((-0.025), dateAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom((-2450.404076486));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.handleClick(500, 40, plotRenderingInfo0);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getLegendItems();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      BasicStroke basicStroke0 = (BasicStroke)fastScatterPlot0.getRangeGridlineStroke();
      categoryPlot0.setRangeGridlineStroke(basicStroke0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hK`3Uapo`&J");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setDomainGridlinePaint(stackedBarRenderer3D0.DEFAULT_PAINT);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1982.0255924503433, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.setDomainGridlinePosition((CategoryAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setDomainGridlinesVisible(true);
      assertTrue(categoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      SortOrder sortOrder0 = categoryPlot0.getRowRenderingOrder();
      categoryPlot0.setRowRenderingOrder(sortOrder0);
      assertNull(categoryPlot0.getNoDataMessage());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultCategoryDataset0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      categoryItemRendererArray0[0] = (CategoryItemRenderer) waterfallBarRenderer0;
      categoryPlot0.setRenderers(categoryItemRendererArray0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      categoryPlot0.setRenderer((CategoryItemRenderer) lineAndShapeRenderer0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryItemRenderer categoryItemRenderer0 = categoryPlot0.getRenderer(1702);
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.mapDatasetToRangeAxis(10, 10);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("Oa#1=<");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) numberAxis0, (CategoryItemRenderer) lineRenderer3D0);
      categoryPlot0.clearRangeAxes();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(2958465, axisLocation0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxisLocation(10);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      categoryPlot0.setRangeAxes(valueAxisArray0);
      categoryPlot0.clearRangeAxes();
      assertFalse(categoryPlot0.isDomainZoomable());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis("Oa#1=<");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) numberAxis0, (CategoryItemRenderer) lineRenderer3D0);
      categoryPlot0.getRangeAxis(500);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearDomainAxes();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      CategoryAxis3D categoryAxis3D1 = (CategoryAxis3D)categoryPlot0.getDomainAxisForDataset(0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(categoryAxis3D1);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CategoryAxis categoryAxis0 = combinedDomainCategoryPlot0.getDomainAxis(176);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("%W.E4gr");
      combinedRangeCategoryPlot0.setAxisOffset(categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainGridlineStroke();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAnchor categoryAnchor0 = categoryPlot0.getDomainGridlinePosition();
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryPlot0.getDomainAxisIndex(categoryAxis0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) (-1174), (double) 1.0F, false);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) stackedBarRenderer3D0, true);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)combinedDomainCategoryPlot0.getRenderer();
      assertNotNull(stackedBarRenderer3D1);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.clearAnnotations();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedLegendItems();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      List list0 = categoryPlot0.getCategories();
      assertNotNull(list0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      boolean boolean0 = categoryPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setWeight(1);
      assertEquals(1, categoryPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-2236.20273319), (-420.376386721714));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.zoomDomainAxes(0.0, (-291.03381), plotRenderingInfo0, (Point2D) point2D_Double0);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Color color0 = (Color)combinedDomainCategoryPlot0.getDomainGridlinePaint();
      assertEquals(192, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairValue((-874.0744142136));
      assertEquals((-874.0744142136), combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      Color color0 = (Color)categoryPlot0.getRangeCrosshairPaint();
      assertEquals(0, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, categoryItemRendererArray0[1]);
      categoryPlot0.setDataset((CategoryDataset) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
      combinedRangeCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      assertTrue(combinedRangeCategoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("ItemLabelAnchor.INSIDE10", (Plot) combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Object[][] objectArray0 = new Object[6][8];
      List list0 = DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeGridlines(sunGraphics2D0, rectangle2D_Double0, list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.chart.axis.ValueTick
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      double double0 = categoryPlot0.getRangeCrosshairValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getRangeAxisEdge();
      assertEquals("RectangleEdge.LEFT", rectangleEdge0.toString());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isRangeGridlinesVisible();
      assertTrue(boolean0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge();
      assertEquals("RectangleEdge.BOTTOM", rectangleEdge0.toString());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderer((-143), (CategoryItemRenderer) boxAndWhiskerRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      int int0 = categoryPlot0.getWeight();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0, int0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisCount();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      categoryPlot0.setRangeAxis((ValueAxis) numberAxis0);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Collection collection0 = categoryPlot0.getRangeMarkers((Layer) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 1.0F);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.clearDomainMarkers();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      combinedDomainCategoryPlot0.setAnchorValue(2.0);
      assertEquals(2.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(3589);
      assertNotNull(axisLocation0);
      
      categoryPlot0.setDomainAxisLocation(axisLocation0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The renderer has changed and I don't know what to do!");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) logarithmicAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("dH }9V");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0E-8, (-350.0));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, (CategoryAxis) extendedCategoryAxis0, (ValueAxis) numberAxis3D0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boolean boolean0 = combinedRangeCategoryPlot0.getDrawSharedDomainAxis();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainMarkers((Layer) null);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, rectangleInsets0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      double double0 = combinedRangeCategoryPlot0.getAnchorValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1994.263, 0.0025);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) numberAxis0, (CategoryItemRenderer) stackedBarRenderer3D0);
      categoryPlot0.getRangeAxisCount();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(812.53707444);
      combinedRangeCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeCategoryPlot0.getRangeCrosshairStroke();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      Color color0 = (Color)combinedDomainCategoryPlot0.getRangeGridlinePaint();
      assertEquals(192, color0.getBlue());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(10);
      categoryPlot0.setDomainAxisLocation(1702, axisLocation0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("1", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, (Plot) categoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.zoomDomainAxes(8.0, plotRenderingInfo0, (Point2D) point2D_Double0);
      assertFalse(chartPanel0.isDomainZoomable());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(chartPanel0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(true);
      assertTrue(combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = categoryPlot0.getDatasetCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) categoryPlot0);
      jFreeChart0.createBufferedImage(15, 15, (ChartRenderingInfo) null);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      int int0 = combinedRangeCategoryPlot0.getIndexOf(barRenderer3D0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[7];
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      categoryPlot0.setDomainAxes(categoryAxisArray0);
      categoryPlot0.clone();
      assertEquals(7, categoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation((-1));
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-143), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }
}
