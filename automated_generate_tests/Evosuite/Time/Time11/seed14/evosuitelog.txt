* EvoSuite 1.0.4-SNAPSHOT
* Going to generate test cases for class: org.joda.time.tz.DateTimeZoneBuilder
* Starting client
* Connecting to master process on port 6917
* Analyzing classpath: 
  - /tmp/time_11_Genprog_local_s1/lib/
  - /tmp/time_11_Genprog_local_s1/lib/joda-convert-1.2.jar
  - /tmp/time_11_Genprog_local_s1/lib/fixran-0.0.1.jar
  - /tmp/time_11_Genprog_local_s1/lib/junit-3.8.2.jar
  - /tmp/time_11_Genprog_local_s1/lib/jtestex-0.0.1.jar
  - /tmp/time_11_Genprog_local_s1/lib/cobertura-2.0.3.jar
  - /tmp/time_11_Genprog_local_s1/lib/junit-4.11.jar
  - /tmp/time_11_Genprog_local_s1/./outputMutation/AstorMain-Time/bin/default/
* Finished analyzing classpath
* Generating tests for class org.joda.time.tz.DateTimeZoneBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 690
  - Branch 461
  - Exception 0
  - MutationFactory 666
  - Output 17
  - Method 54
  - MethodNoException 54
  - CBranchFitnessFactory 461

[Progress:>                             0%] [Cov:>                                  0%]* Using seed 14
* Starting evolution

[Progress:>                             0%] [Cov:====>                              13%]
[Progress:>                             0%] [Cov:=====>                             15%]
[Progress:>                             0%] [Cov:=====>                             16%]
[Progress:>                             0%] [Cov:=====>                             17%]
[Progress:>                             0%] [Cov:======>                            19%]
[Progress:>                             0%] [Cov:=======>                           20%]
[Progress:>                             0%] [Cov:=======>                           21%]
[Progress:>                             0%] [Cov:=======>                           20%]
[Progress:>                             0%] [Cov:=======>                           21%]
[Progress:>                             0%] [Cov:========>                          25%]
[Progress:>                             0%] [Cov:========>                          25%]
[Progress:>                             0%] [Cov:========>                          25%]
[Progress:>                             0%] [Cov:========>                          25%]
[Progress:>                             0%] [Cov:========>                          25%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         26%]
[Progress:>                             0%] [Cov:=========>                         27%]
[Progress:>                             0%] [Cov:=========>                         27%]
[Progress:>                             0%] [Cov:=========>                         27%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        29%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:==========>                        31%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       32%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       33%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:===========>                       34%][MASTER] 12:17:07.134 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 15096ms

[Progress:>                             1%] [Cov:============>                      35%]
* Search finished after 213s and 192 generations, 100537 statements, best individual has fitness: 4322.021506737394
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 690
* Number of covered goals: 233
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 461
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 29%
* Total number of goals: 666
* Number of covered goals: 190
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 17
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 54
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 20%
* Total number of goals: 54
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 461
* Number of covered goals: 76
* Generated 41 tests with total length 149
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 12:17:19.596 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 12:17:19.898 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 12:17:19.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.joda.time.tz.DateTimeZoneBuilder_51_tmp__ESTest.test0(DateTimeZoneBuilder_51_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 12:17:19.899 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
dateTimeZoneBuilder0.writeTo((String) null, (OutputStream) mockFileOutputStream0);

[MASTER] 12:17:20.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.joda.time.tz.DateTimeZoneBuilder_73_tmp__ESTest.test0(DateTimeZoneBuilder_73_tmp__ESTest.java:27)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 12:17:20.566 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 12:17:20.567 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
dateTimeZoneBuilder0.writeTo("The method getChronology() was added in v1.4 and needs to be implemented by subclasses of AbstractReadableInstantFieldProperty", (OutputStream) mockFileOutputStream0);

[MASTER] 12:17:20.893 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class java.io.FileNotFoundException: null
[MASTER] 12:17:20.893 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 12:17:20.894 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZoneBuilder dateTimeZoneBuilder0 = new DateTimeZoneBuilder();
DateTimeZoneBuilder dateTimeZoneBuilder1 = dateTimeZoneBuilder0.setFixedSavings("where possible options include:", (-1125));
MockFile mockFile0 = new MockFile("where possible options include:", "where possible options include:");
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream((File) mockFile0);
FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) mockFileOutputStream0);
DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) filterOutputStream0);
dateTimeZoneBuilder1.writeTo("where possible options include:", (DataOutput) dataOutputStream0);
MockFileInputStream mockFileInputStream0 = new MockFileInputStream((File) mockFile0);
DateTimeZoneBuilder.readFrom((InputStream) mockFileInputStream0, "where possible options include:");
assertEquals(44L, mockFile0.length());


* Writing JUnit test case 'DateTimeZoneBuilder_ESTest' to evosuite-tests
* Done!


------------