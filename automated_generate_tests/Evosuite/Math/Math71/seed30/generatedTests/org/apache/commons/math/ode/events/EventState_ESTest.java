/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 29 09:28:46 GMT 2017
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-544.49122422), (-544.49122422), (-544.49122422));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-544.49122422), (-544.49122422), 945);
      eventState0.stepAccepted((-544.49122422), (double[]) null);
      assertEquals(945, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals((-544.49122422), eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-544.49122422), (-544.49122422), (-544.49122422));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-544.49122422), (-544.49122422), 945);
      eventState0.reinitializeBegin((-544.49122422), (double[]) null);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(945, eventState0.getMaxIterationCount());
      assertEquals((-544.49122422), eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-2250.36939209), (-2250.36939209), (-2250.36939209));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-2250.36939209), (-2250.36939209), 12);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(12, int0);
      assertEquals((-2250.36939209), eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(3485.132617898384, 1998.62, 3485.132617898384);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 3485.132617898384, 1521.13686396412, (-1266));
      int int0 = eventState0.getMaxIterationCount();
      assertEquals((-1266), int0);
      assertEquals(1521.13686396412, eventState0.getConvergence(), 0.01);
      assertEquals(3485.132617898384, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1.0, 1.0, 3167.60337422);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1.0, (-2014.0303924255309), (-2974));
      double double0 = eventState0.getMaxCheckInterval();
      assertFalse(eventState0.stop());
      assertEquals(2014.0303924255309, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(-2974, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-544.49122422), (-544.49122422), (-544.49122422));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-544.49122422), (-544.49122422), 945);
      double double0 = eventState0.getMaxCheckInterval();
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals((-544.49122422), double0, 0.01);
      assertEquals(945, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1983.138, 1983.138, 1983.138);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1983.138, 1136.82445532506, 0);
      eventState0.getEventHandler();
      assertFalse(eventState0.stop());
      assertEquals(0, eventState0.getMaxIterationCount());
      assertEquals(1136.82445532506, eventState0.getConvergence(), 0.01);
      assertEquals(1983.138, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(2673.5693174845196, 2582.2128462691994, 2582.2128462691994);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 2673.5693174845196, 0.0, 2145626429);
      double double0 = eventState0.getConvergence();
      assertFalse(eventState0.stop());
      assertEquals(2673.5693174845196, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(2145626429, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (-3478.45074961841), (-3478.45074961841), (-1));
      // Undeclared exception!
      try { 
        eventState0.stepAccepted(1.0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 313.4773746, 313.4773746, (-67));
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        eventState0.reinitializeBegin(Double.NaN, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(2673.5693174845196, 2582.2128462691994, 2582.2128462691994);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 2673.5693174845196, 0.0, 2145626429);
      // Undeclared exception!
      try { 
        eventState0.evaluateStep((StepInterpolator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (double) (-27), 0.7853981633974483, (-27));
      double[] doubleArray0 = new double[9];
      boolean boolean0 = eventState0.reset((-27), doubleArray0);
      assertEquals(-27, eventState0.getMaxIterationCount());
      assertEquals((-27.0), eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(0.7853981633974483, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(boolean0);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-2250.36939209), (-2250.36939209), (-2250.36939209));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-2250.36939209), (-2250.36939209), 12);
      boolean boolean0 = eventState0.stop();
      assertEquals((-2250.36939209), eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(12, eventState0.getMaxIterationCount());
      assertFalse(boolean0);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(2673.8193174845196, 2673.8193174845196, 2673.8193174845196);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 2673.8193174845196, 2673.8193174845196, (-985));
      double[] doubleArray0 = new double[8];
      eventState0.stepAccepted((-985), doubleArray0);
      assertEquals(-985, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2673.8193174845196, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-1247.109), (-1247.109), (-1247.109));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.7853981633974483, (-1247.109), 271);
      eventState0.stepAccepted(271, (double[]) null);
      assertEquals(271, eventState0.getMaxIterationCount());
      assertEquals(1247.109, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(0.7853981633974483, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-0.25), (-0.25), (-0.25));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 323.88513882568, 4997.80842492, 1494);
      double[] doubleArray0 = new double[0];
      eventState0.reinitializeBegin(323.88513882568, doubleArray0);
      assertEquals(323.88513882568, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(1494, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(4997.80842492, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1983.138, 1983.138, 1983.138);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1983.138, 1136.82445532506, 0);
      double[] doubleArray0 = new double[16];
      eventState0.reinitializeBegin(1136.82445532506, doubleArray0);
      assertEquals(0, eventState0.getMaxIterationCount());
      assertEquals(1983.138, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(1136.82445532506, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (-5613.2295788443225), (-5613.2295788443225), 6);
      double double0 = eventState0.getConvergence();
      assertFalse(eventState0.stop());
      assertEquals(6, eventState0.getMaxIterationCount());
      assertEquals(5613.2295788443225, double0, 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals((-5613.2295788443225), eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.9, (-680.01774087491), 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, 0.9, 2);
      double double0 = eventState0.getMaxCheckInterval();
      assertEquals(0.0, double0, 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(0.9, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-1247.109), (-1247.109), (-1247.109));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.7853981633974483, (-1247.109), 271);
      double double0 = eventState0.getEventTime();
      assertEquals(1247.109, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(eventState0.stop());
      assertEquals(271, eventState0.getMaxIterationCount());
      assertEquals(0.7853981633974483, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(274.3365711443, 274.3365711443, 274.3365711443);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 274.3365711443, Double.NaN, 0);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(0, int0);
      assertEquals(274.3365711443, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(Double.NaN, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (double) (-27), 0.7853981633974483, (-27));
      eventState0.getEventHandler();
      assertEquals(0.7853981633974483, eventState0.getConvergence(), 0.01);
      assertEquals(-27, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals((-27.0), eventState0.getMaxCheckInterval(), 0.01);
  }
}
