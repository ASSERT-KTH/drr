/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 14 00:20:09 GMT 2017
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.25, 0.25, 0.25);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.25, 0.25, 0);
      double[] doubleArray0 = new double[7];
      eventState0.stepAccepted(8.426149773176359, doubleArray0);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(0.25, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(0, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.25, 0.25, 0.25);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.25, 0.25, 0);
      double[] doubleArray0 = new double[7];
      eventState0.reinitializeBegin(0.25, doubleArray0);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0, eventState0.getMaxIterationCount());
      assertEquals(0.25, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.25, 0.25, 0.25);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.25, 0.25, 0);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(0, int0);
      assertEquals(0.25, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 839.400698138091, 839.400698138091, (-866));
      int int0 = eventState0.getMaxIterationCount();
      assertEquals((-866), int0);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(839.400698138091, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.0, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, 0.0, 2679);
      eventState0.getMaxCheckInterval();
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2679, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(831.7371474, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-191.15991), 730.0, 4);
      double double0 = eventState0.getMaxCheckInterval();
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals((-191.15991), double0, 0.01);
      assertEquals(730.0, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(4, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1169.4717163871526, 1169.4717163871526, 1169.4717163871526);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 386.498018578, 0.0, 3153);
      eventState0.getEventHandler();
      assertEquals(0.0, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(3153, eventState0.getMaxIterationCount());
      assertEquals(386.498018578, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1169.4717163871526, 1169.4717163871526, 1169.4717163871526);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 386.498018578, 0.0, 3153);
      double double0 = eventState0.getConvergence();
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(3153, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(0.0, double0, 0.01);
      assertEquals(386.498018578, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 839.400698138091, 839.400698138091, (-866));
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        eventState0.stepAccepted((-2645.0), doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (-410.154985205), (-0.25), 0);
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        eventState0.reinitializeBegin(0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1.0, 1.0, (-2690.6672));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1.0, (-2690.6672), 40);
      // Undeclared exception!
      try { 
        eventState0.evaluateStep((StepInterpolator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1169.4717163871526, 1169.4717163871526, 1169.4717163871526);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 386.498018578, 0.0, 3153);
      double[] doubleArray0 = new double[9];
      boolean boolean0 = eventState0.reset(1169.4717163871526, doubleArray0);
      assertFalse(boolean0);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0.0, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(3153, eventState0.getMaxIterationCount());
      assertEquals(386.498018578, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 19.085536923187668, (double) 2144495371, 2144495371);
      boolean boolean0 = eventState0.stop();
      assertEquals(19.085536923187668, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(2144495371, eventState0.getMaxIterationCount());
      assertEquals(2.144495371E9, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(800.76330826, 800.76330826, 800.76330826);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 800.76330826, 800.76330826, 4);
      double[] doubleArray0 = new double[10];
      eventState0.stepAccepted(4, doubleArray0);
      assertEquals(4, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(800.76330826, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(800.76330826, (-0.9640275800758169), 800.76330826);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 800.76330826, (-0.9640275800758169), 4);
      double[] doubleArray0 = new double[1];
      eventState0.stepAccepted(800.76330826, doubleArray0);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(4, eventState0.getMaxIterationCount());
      assertEquals(800.76330826, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(0.9640275800758169, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-3383.213836785), (-3383.213836785), (-1252.9475522));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-3383.213836785), (-3383.213836785), 3265);
      double[] doubleArray0 = new double[0];
      eventState0.reinitializeBegin(0.0, doubleArray0);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(3265, eventState0.getMaxIterationCount());
      assertEquals((-3383.213836785), eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1169.4717163871526, 1169.4717163871526, 1169.4717163871526);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 386.498018578, 0.0, 3153);
      double[] doubleArray0 = new double[9];
      eventState0.reinitializeBegin(0.0, doubleArray0);
      assertEquals(3153, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0.0, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(386.498018578, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-3383.213836785), (-3383.213836785), (-1252.9475522));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-3383.213836785), (-3383.213836785), 3265);
      double double0 = eventState0.getConvergence();
      assertEquals(3383.213836785, double0, 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals((-3383.213836785), eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(3265, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-1601.0), (-1601.0), 1216.98043947576);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1216.98043947576, 1216.98043947576, 10);
      double double0 = eventState0.getMaxCheckInterval();
      assertEquals(1216.98043947576, double0, 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(10, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1169.4717163871526, 1169.4717163871526, 1169.4717163871526);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 386.498018578, 0.0, 3153);
      double double0 = eventState0.getEventTime();
      assertEquals(3153, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(0.0, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(386.498018578, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1.0, 1.0, (-2690.6672));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1.0, (-2690.6672), 40);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(40, int0);
      assertEquals(1.0, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2690.6672, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 19.085536923187668, (double) 2144495371, 2144495371);
      eventState0.getEventHandler();
      assertEquals(2.144495371E9, eventState0.getConvergence(), 0.01);
      assertEquals(2144495371, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(19.085536923187668, eventState0.getMaxCheckInterval(), 0.01);
  }
}
