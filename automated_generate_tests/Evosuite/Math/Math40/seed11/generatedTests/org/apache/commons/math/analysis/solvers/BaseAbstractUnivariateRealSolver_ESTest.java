/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 14 19:51:02 GMT 2017
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.DifferentiableUnivariateFunction;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver2;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.RiddersSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(0.0, 0.0);
      SinFunction sinFunction0 = new SinFunction();
      mullerSolver0.setup(226, sinFunction0, 0.0, 3783.405661791, (-1010.72818284916));
      mullerSolver0.verifyBracketing(13.7289325459733, 2871.0);
      assertEquals((-1010.72818284916), mullerSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RiddersSolver riddersSolver0 = new RiddersSolver((-205.68));
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      riddersSolver0.setup(293, xMinus5Function0, 0.0625, 293, (-205.68));
      riddersSolver0.incrementEvaluationCount();
      assertEquals((-205.68), riddersSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BisectionSolver bisectionSolver0 = new BisectionSolver(1.0E-14, 1.0E-14);
      boolean boolean0 = bisectionSolver0.isSequence(Double.NaN, Double.NaN, 1.0E-14);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(1.634294033050537);
      SinFunction sinFunction0 = new SinFunction();
      UnivariateFunction univariateFunction0 = sinFunction0.derivative();
      mullerSolver0.setup(1774, univariateFunction0, 2506.4828012202, 2506.4828012202, 1774);
      boolean boolean0 = mullerSolver0.isBracketing(1.634294033050537, 6.305116324200775E-16);
      assertEquals(2506.4828012202, mullerSolver0.getMin(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1373.15, (-1502.0), (-1502.0));
      Expm1Function expm1Function0 = new Expm1Function();
      UnivariateFunction univariateFunction0 = expm1Function0.derivative();
      brentSolver0.setup(0, univariateFunction0, 0.0, 0.0, (-1828.33717063767));
      brentSolver0.isBracketing(1.0, 0.0);
      assertEquals((-1828.33717063767), brentSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SinFunction sinFunction0 = new SinFunction();
      newtonSolver0.setup(1709, sinFunction0, (-3448.3452458234497), 0.0, 0.0);
      newtonSolver0.computeObjectiveValue(0.0);
      assertEquals((-3448.3452458234497), newtonSolver0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver((-1362.4762));
      SincFunction sincFunction0 = new SincFunction();
      secantSolver0.setup(1086, sincFunction0, 0.0, (-1362.4762), 0.0);
      secantSolver0.computeObjectiveValue(0.0);
      assertEquals((-1362.4762), secantSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver((-1362.4762));
      SincFunction sincFunction0 = new SincFunction();
      secantSolver0.setup(1086, sincFunction0, 0.0, (-1362.4762), 0.0);
      secantSolver0.computeObjectiveValue((-3006.88453));
      assertEquals((-1362.4762), secantSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver(0.0, 0.0);
      // Undeclared exception!
      try { 
        secantSolver0.verifySequence((-1263.4408452), 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      // Undeclared exception!
      try { 
        mullerSolver2_0.verifyInterval(1658.89873839, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,658.899, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RiddersSolver riddersSolver0 = new RiddersSolver(1196.971580537);
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      riddersSolver0.setup(0, xMinus5Function0, (-2.0197142620980974E-8), 1196.971580537, 1196.971580537);
      // Undeclared exception!
      try { 
        riddersSolver0.verifyBracketing((-1920.4), (-1920.4));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-1,920.4, -1,920.4]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(940.77174, (-2.0), (-2.0), 465);
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver0.setup(0, (UnivariateFunction) null, (-3581.450835131), (-3581.450835131), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver();
      // Undeclared exception!
      try { 
        secantSolver0.incrementEvaluationCount();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      // Undeclared exception!
      try { 
        mullerSolver2_0.solve((-2), (UnivariateFunction) xMinus5Function0, (-1249.640783574008), (double) (-2));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(1770.6753, 0.0);
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      // Undeclared exception!
      try { 
        mullerSolver0.solve(870, (UnivariateFunction) xMinus5Function0, 878.3419, 0.0, (-2297.610669371207));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [878.342, -2,297.611]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver0.solve((-1310), (UnivariateFunction) xMinus5Function0, (double) (-1310), 1.0, allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-1,310) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(1.634294033050537);
      // Undeclared exception!
      try { 
        mullerSolver0.isBracketing(1.634294033050537, 6.305116324200775E-16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(0.0, 0.0);
      // Undeclared exception!
      try { 
        mullerSolver0.verifyBracketing(13.7289325459733, 2871.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(1566.2106107192767);
      boolean boolean0 = mullerSolver2_0.isSequence(0.0, 1566.2106107192767, 3171.62072912646);
      assertEquals(1.0E-15, mullerSolver2_0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1.0E-14, mullerSolver2_0.getRelativeAccuracy(), 0.01);
      assertTrue(boolean0);
      assertEquals(1566.2106107192767, mullerSolver2_0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      int int0 = newtonSolver0.getMaxEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SinFunction sinFunction0 = new SinFunction();
      // Undeclared exception!
      try { 
        newtonSolver0.solve((-2123), (DifferentiableUnivariateFunction) sinFunction0, (-1900.3117695120134));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,123) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      newtonSolver0.verifyInterval(0.0, 2227.320757617407);
      assertEquals(1.0E-6, newtonSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      newtonSolver0.verifySequence((-3521.569977885), (-585.472224108), 1030.65434452);
      assertEquals(0.0, newtonSolver0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RiddersSolver riddersSolver0 = new RiddersSolver(1196.971580537);
      riddersSolver0.getEvaluations();
      assertEquals(1.0E-14, riddersSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1196.971580537, riddersSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, riddersSolver0.getFunctionValueAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      try { 
        newtonSolver0.computeObjectiveValue(1030.65434452);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }
}
