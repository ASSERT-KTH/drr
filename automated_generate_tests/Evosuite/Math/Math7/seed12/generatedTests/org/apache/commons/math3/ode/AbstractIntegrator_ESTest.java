/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 09 21:59:30 GMT 2017
 */

package org.apache.commons.math3.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.TestProblem5;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math3.ode.nonstiff.GillIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math3.ode.nonstiff.MidpointIntegrator;
import org.apache.commons.math3.ode.nonstiff.StepProblem;
import org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest;
import org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractIntegrator_ESTest extends AbstractIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      StepProblem stepProblem0 = new StepProblem(1349.50744816806, 1000.0, 2275.531292544495);
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-3590.4672136602667), doubleArray0, 1000.0, doubleArray0);
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, 2275.531292544495, doubleArray0, 7.105427357601002E-12, doubleArray0);
      assertArrayEquals(new double[] {3124023.2675775317}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-101.9487873), (-101.9487873), doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(3550.41717, (-101.9487873), (-250.06838));
      double[] doubleArray1 = new double[4];
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-101.9487873), doubleArray0, 2673.31915, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 1
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(17.896882516230132);
      StepProblem stepProblem0 = new StepProblem((-5474.0), (-1989.813044879568), 0.0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      expandableStatefulODE0.setTime((-438.887));
      midpointIntegrator0.integrate(expandableStatefulODE0, (-3158.37));
      assertEquals("midpoint", midpointIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      StepProblem stepProblem0 = new StepProblem((-2.209492705846306E-7), 1000.0, 2275.5312925445);
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-3551.5134), doubleArray0, 1000.0, doubleArray0);
      dormandPrince54Integrator0.computeDerivatives(1000.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {(-2.209492705846306E-7)}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1.0), (-1.0), (-1.0), (-640.0));
      highamHall54Integrator0.setMaxEvaluations(0);
      int int0 = highamHall54Integrator0.getMaxEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      StepProblem stepProblem0 = new StepProblem((-2.209492705846306E-7), 1000.0, 2275.531292544495);
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-3551.5134), doubleArray0, 1000.0, doubleArray0);
      assertArrayEquals(new double[] {(-0.001005653565786172)}, doubleArray0, 0.01);
      
      int int0 = dormandPrince54Integrator0.getEvaluations();
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1.26892E-8), (-1.26892E-8), doubleArray0, doubleArray0);
      double double0 = dormandPrince54Integrator0.getCurrentSignedStepsize();
      assertEquals(1.26892E-8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StepNormalizerOutputOverlapTest stepNormalizerOutputOverlapTest0 = new StepNormalizerOutputOverlapTest();
      double[] doubleArray0 = new double[1];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-356.939), (-356.939), doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem((-2543.1498421), (-2543.1498421), (-356.939));
      highamHall54Integrator0.addEventHandler((EventHandler) stepProblem0, 4590.467213660267, 3725.5571404, (-1));
      try { 
        highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) stepNormalizerOutputOverlapTest0, 6.8135571305481364E-46, doubleArray0, 0.9888046939581727, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-1) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      StepProblem stepProblem0 = new StepProblem(1349.50744816806, 1000.0, 2275.531292544495);
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.setMaxEvaluations(5);
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, 2275.531292544495, doubleArray0, 7.105427357601002E-12, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (5) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(Double.NaN, 653.9375980442736, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      StepProblem stepProblem0 = new StepProblem(5.321788202347, Double.NaN, (-3362.31));
      SecantSolver secantSolver0 = new SecantSolver();
      dormandPrince54Integrator0.addEventHandler((EventHandler) stepProblem0, (-1381.691544051), 5.321788202347, 940, (UnivariateSolver) secantSolver0);
      testProblem5_0.setInitialConditions((-1183.0842743), doubleArray0);
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, (-449.70269), doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-449.703, \uFFFD], values: [2,912.607, \uFFFD]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GillIntegrator gillIntegrator0 = new GillIntegrator((-2328.0));
      StepNormalizerOutputOverlapTest stepNormalizerOutputOverlapTest0 = new StepNormalizerOutputOverlapTest();
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
      try { 
        gillIntegrator0.integrate((FirstOrderDifferentialEquations) stepNormalizerOutputOverlapTest0, (-809.1), (double[]) null, (-2328.0), doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(17.896882516230132);
      StepProblem stepProblem0 = new StepProblem((-5474.0), (-1989.813044879568), 0.0);
      midpointIntegrator0.addEventHandler((EventHandler) stepProblem0, (-5474.0), 0.0, (-1776));
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      expandableStatefulODE0.setTime(0.0);
      try { 
        midpointIntegrator0.integrate(expandableStatefulODE0, (-3158.37));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-1,776) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1.0), (-1.0), doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) testProblem5_0);
      try { 
        highamHall54Integrator0.integrate(expandableStatefulODE0, 4305.7865994613);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 != 8
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(17.896882516230132);
      // Undeclared exception!
      try { 
        midpointIntegrator0.integrate((ExpandableStatefulODE) null, (-3158.37));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(738.832057, 738.832057, 738.832057, (-2204.23));
      TestProblem5 testProblem5_0 = new TestProblem5();
      TestProblem5 testProblem5_1 = testProblem5_0.copy();
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) testProblem5_1);
      testProblem5_1.n = 16;
      // Undeclared exception!
      try { 
        highamHall54Integrator0.integrate(expandableStatefulODE0, (-2204.23));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      StepProblem stepProblem0 = new StepProblem(1349.50744816806, 1000.0, 2275.5312925445);
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-3551.5134), doubleArray0, 1000.0, doubleArray0);
      dormandPrince54Integrator0.setMaxEvaluations(5);
      try { 
        dormandPrince54Integrator0.computeDerivatives(1000.0, doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (5) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3048.6791242), 4094.4291202, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-1544));
      assertEquals(3533.0724000889527, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      dormandPrince54Integrator0.clearEventHandlers();
      assertEquals(1349.50744816806, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(0.0);
      threeEighthesIntegrator0.clearStepHandlers();
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.computeDerivatives(1000.0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(Double.NaN, 653.9375980442736, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      testProblem5_0.setInitialConditions((-1183.0842743), doubleArray0);
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, (-449.70269), doubleArray0, (-449.70269), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-2247.9609063416), 2796.5865, (-1980.7654997273));
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      expandableStatefulODE0.setTime((-1981.577814389454));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1436.51748317), (-1763.0), (-1979.4137364783703), (-3066.2381690881));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) stepProblem0, (-2247.9609063416), 2796.5865, (-2806));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1979.4137364783703));
      assertEquals(1763.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(23.72858697681999);
      StepProblem stepProblem0 = new StepProblem((-2247.9609063416), 2796.5865, (-1980.7654997273));
      StepNormalizerOutputTest stepNormalizerOutputTest0 = new StepNormalizerOutputTest();
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(23.72858697681999, (FixedStepHandler) stepNormalizerOutputTest0, stepNormalizerBounds0);
      threeEighthesIntegrator0.addStepHandler(stepNormalizer0);
      threeEighthesIntegrator0.addEventHandler((EventHandler) stepProblem0, 2796.5865, (-2.8589982771), 419);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      expandableStatefulODE0.setTime((-1981.577814389454));
      threeEighthesIntegrator0.integrate(expandableStatefulODE0, (-1980.7654997273));
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1889.481425486, Double.NaN, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray1 = new double[2];
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 0.0, doubleArray1, 1889.481425486, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 2
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(Double.NaN, Double.NaN, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 0.0, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 2
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(23.72858697681999);
      StepProblem stepProblem0 = new StepProblem((-2247.9609063416), 2796.5865, (-1980.7654997273));
      threeEighthesIntegrator0.addEventHandler((EventHandler) stepProblem0, 2796.5865, (-2.8589982771), 419);
      threeEighthesIntegrator0.getEventHandlers();
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-298.23094), (-1188.5325), Double.NaN, 0.0);
      String string0 = graggBulirschStoerIntegrator0.getName();
      assertEquals("Gragg-Bulirsch-Stoer", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1.26892E-8), (-1.26892E-8), doubleArray0, doubleArray0);
      Collection<StepHandler> collection0 = dormandPrince54Integrator0.getStepHandlers();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(0.0);
      double double0 = threeEighthesIntegrator0.getCurrentStepStart();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(Double.NaN, Double.NaN, Double.NaN, Double.NaN);
      int int0 = dormandPrince853Integrator0.getMaxEvaluations();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      int int0 = dormandPrince54Integrator0.getEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(2912.96, 0.0, 0.0, (-9.0));
      double double0 = highamHall54Integrator0.getCurrentSignedStepsize();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1349.50744816806, 1349.50744816806, 1414.5423900168223, 1414.5423900168223);
      StepProblem stepProblem0 = new StepProblem((-2.209492705846306E-7), 1000.0, 2275.5312925445);
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-3551.5134), doubleArray0, 1000.0, doubleArray0);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.computeDerivatives(1000.0, doubleArray1, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.EquationsMapper", e);
      }
  }
}
