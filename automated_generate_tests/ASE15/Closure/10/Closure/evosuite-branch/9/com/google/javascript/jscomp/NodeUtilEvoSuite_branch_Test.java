/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 21:04:14 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.ClosureCodingConvention;
import com.google.javascript.jscomp.CodingConvention;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.NodeUtil;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TernaryValue;
import java.io.File;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.mock.java.lang.MockIllegalStateException;
import org.junit.runner.RunWith;


public class NodeUtilEvoSuite_branch_Test  {

  @Test
  public void test000()  throws Throwable  {
      String string0 = "arguSents";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals("arguSents", string1);
      assertNotNull(string1);
      
      Node node0 = Node.newString(string1);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVoid());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.getBestLValueOwner(node0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVoid());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertNull(node1);
      
      double double0 = (-501.0);
      Node node2 = NodeUtil.numberNode(double0, node1);
      assertNotSame(node2, node0);
      assertSame(string0, string1);
      assertNotSame(node0, node2);
      assertSame(string1, string0);
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isSetterDef());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isFor());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isName());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isDelProp());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isDo());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isGetElem());
      assertEquals(true, node2.isNumber());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isNew());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isLabel());
      assertEquals(39, node2.getType());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isComma());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVoid());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertFalse(node2.equals((Object)node0));
      assertFalse(node0.equals((Object)node2));
      assertNotNull(node2);
  }

  @Test
  public void test001()  throws Throwable  {
      String string0 = "arguSents";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals("arguSents", string1);
      assertNotNull(string1);
      
      Node node0 = Node.newString(string1);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isName());
      assertNotNull(node0);
      
      double double0 = (-501.0);
      Node node1 = NodeUtil.numberNode(double0, node0);
      assertNotSame(node1, node0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isFromExterns());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isRegExp());
      assertEquals(39, node1.getType());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBreak());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isContinue());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertNull(node1.getSourceFileName());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isName());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
  }

  @Test
  public void test002()  throws Throwable  {
      double double0 = Double.POSITIVE_INFINITY;
      Node node0 = Node.newNumber(double0);
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssign());
      assertNotNull(node0);
      
      String string0 = NodeUtil.getBestLValueName(node0);
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssign());
      assertNull(string0);
  }

  @Test
  public void test003()  throws Throwable  {
      String string0 = "a";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertNotNull(node0);
      
      node0.addChildToFront(node0);
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      
      Node node1 = NodeUtil.getBestLValueOwner(node0);
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertNull(node1);
  }

  @Test
  public void test004()  throws Throwable  {
      int int0 = (-103);
      String string0 = "}`ylvC&&*fk";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(-103, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFunction());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, node0, int0, int0);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(-103, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFunction());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isGetterDef());
      assertEquals(-103, node1.getType());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isWith());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isTypeOf());
      assertEquals(true, node1.hasOneChild());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isLabel());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCase());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNew());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isContinue());
      assertEquals(-1, node1.getCharno());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      
      Node node2 = NodeUtil.getRValueOfLValue(node0);
      assertNotSame(node0, node1);
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(-103, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFunction());
      assertFalse(node0.equals((Object)node1));
      assertNull(node2);
  }

  @Test
  public void test005()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(int0, int0, int0);
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getType());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getBestLValue(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test006()  throws Throwable  {
      int int0 = (-54);
      String string0 = "Fxu7eDu-T99BC,[";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(-54, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertNotNull(node0);
      
      JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(-54, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertNull(jSDocInfo0);
  }

  @Test
  public void test007()  throws Throwable  {
      int int0 = (-54);
      String string0 = "Fxu7eDu-T99BC,[";
      int int1 = 52;
      Node node0 = Node.newString(int1, string0, int0, int0);
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isInstanceOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(52, node0.getType());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isInstanceOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(52, node0.getType());
      assertTrue(boolean0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test008()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "SU0@.*?7{u=$%`|2]~";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(33, node0.getType());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertNotNull(node0);
      
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      assertNotNull(nodeUtil_MatchShallowStatement0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(33, node0.getType());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertTrue(boolean0);
  }

  @Test
  public void test009()  throws Throwable  {
      int int0 = (-54);
      String string0 = "Fxu7eDu-T99BC,[";
      int int1 = 32;
      Node node0 = Node.newString(int1, string0, int0, int0);
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThis());
      assertEquals(32, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThis());
      assertEquals(32, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertTrue(boolean0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test
  public void test010()  throws Throwable  {
      String string0 = "arguSents";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isNew());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isFunction());
      assertNotNull(node0);
      
      InputId inputId0 = NodeUtil.getInputId(node0);
      assertEquals(false, node0.isNew());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isFunction());
      assertNull(inputId0);
  }

  @Test
  public void test011()  throws Throwable  {
      String string0 = "<<";
      int int0 = (-1329);
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFalse());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTry());
      assertNotNull(node0);
      
      StaticSourceFile staticSourceFile0 = NodeUtil.getSourceFile(node0);
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFalse());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTry());
      assertNull(staticSourceFile0);
  }

  @Test
  public void test012()  throws Throwable  {
      double double0 = (-870.65);
      Node node0 = Node.newNumber(double0);
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertNotNull(node0);
      
      String string0 = NodeUtil.getSourceName(node0);
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertNull(string0);
  }

  @Test
  public void test013()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      String string0 = "java.lang.Short";
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDec());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(132, node0.getType());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNull());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDelProp());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabelName());
      assertNotNull(node0);
  }

  @Test
  public void test014()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "SU0@.*?7{u=$%`|2]~";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isReturn());
      assertEquals(2, node0.getChildCount());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertNotNull(node0);
      
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      assertNotNull(nodeUtil_MatchShallowStatement0);
      
      boolean boolean0 = NodeUtil.isNameReferenced(node0, string0, nodeUtil_MatchShallowStatement0);
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isReturn());
      assertEquals(2, node0.getChildCount());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertFalse(boolean0);
  }

  @Test
  public void test015()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.equals((Object) nodeUtil_MayBeStringResultPredicate0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDebugger());
      assertEquals(44, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertNotNull(node0);
      
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      assertNotNull(nodeUtil_MatchDeclaration0);
      
      boolean boolean1 = nodeUtil_MatchDeclaration0.apply(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDebugger());
      assertEquals(44, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
  }

  @Test
  public void test016()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "9!";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabelName());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasChildren());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertNotNull(node0);
      
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      assertNotNull(nodeUtil_MatchShallowStatement0);
      
      String string1 = "lIY&X%p";
      assertNotSame(string1, string0);
      
      boolean boolean0 = NodeUtil.isNameReferenced(node0, string1, nodeUtil_MatchShallowStatement0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabelName());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasChildren());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertFalse(boolean0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test017()  throws Throwable  {
      String string0 = "a";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.getPrototypeClassName(node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertNull(node1);
  }

  @Test
  public void test018()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      String string0 = "!,{F{9Rcr<?`\"4";
      MockFile mockFile0 = (MockFile)MockFile.createTempFile(string0, string0);
      assertNotNull(mockFile0);
      
      Charset charset0 = null;
      SourceFile.OnDisk sourceFile_OnDisk0 = (SourceFile.OnDisk)SourceFile.fromFile((File) mockFile0, charset0);
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.getOriginalPath());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.toString());
      assertEquals(false, sourceFile_OnDisk0.isExtern());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.getName());
      assertNotNull(sourceFile_OnDisk0);
      
      Node node0 = compiler0.parse((SourceFile) sourceFile_OnDisk0);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.getOriginalPath());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.toString());
      assertEquals(false, sourceFile_OnDisk0.isExtern());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.getName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.getOriginalPath());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.toString());
      assertEquals(false, sourceFile_OnDisk0.isExtern());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", sourceFile_OnDisk0.getName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals("/tmp/!,{F{9Rcr<?`\"40!,{F{9Rcr<?`\"4", node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertFalse(boolean0);
  }

  @Test
  public void test019()  throws Throwable  {
      String string0 = "arguSents";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals("arguSents", string1);
      assertNotNull(string1);
      
      boolean boolean0 = NodeUtil.isValidQualifiedName(string1);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertTrue(boolean0);
  }

  @Test
  public void test020()  throws Throwable  {
      String string0 = "instanceof";
      boolean boolean0 = NodeUtil.isValidQualifiedName(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test021()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) simpleErrorReporter0);
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(jSTypeRegistry0);
      
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      assertEquals(false, jSType0.isTemplateType());
      assertEquals(false, jSType0.isParameterizedType());
      assertEquals(false, jSType0.isNoObjectType());
      assertEquals(false, jSType0.isFunctionType());
      assertEquals(false, jSType0.isStringValueType());
      assertEquals(false, jSType0.isNominalConstructor());
      assertEquals(false, jSType0.isEnumType());
      assertEquals(false, jSType0.isBooleanValueType());
      assertEquals(false, jSType0.isNoResolvedType());
      assertEquals(true, jSType0.isNominalType());
      assertEquals(false, jSType0.isAllType());
      assertEquals(false, jSType0.isNoType());
      assertEquals(false, jSType0.isNumberValueType());
      assertEquals(false, jSType0.isVoidType());
      assertEquals(false, jSType0.isOrdinaryFunction());
      assertEquals(false, jSType0.isFunctionPrototypeType());
      assertEquals(false, jSType0.isCheckedUnknownType());
      assertEquals(false, jSType0.isEnumElementType());
      assertEquals(false, jSType0.isResolved());
      assertEquals(false, jSType0.isInterface());
      assertEquals(false, jSType0.isRecordType());
      assertEquals(false, jSType0.isUnionType());
      assertEquals(false, jSType0.isNullType());
      assertEquals(false, jSType0.isConstructor());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(jSType0);
      
      jSTypeArray0[0] = jSType0;
      assertEquals(false, jSType0.isTemplateType());
      assertEquals(false, jSType0.isParameterizedType());
      assertEquals(false, jSType0.isNoObjectType());
      assertEquals(false, jSType0.isFunctionType());
      assertEquals(false, jSType0.isStringValueType());
      assertEquals(false, jSType0.isNominalConstructor());
      assertEquals(false, jSType0.isEnumType());
      assertEquals(false, jSType0.isBooleanValueType());
      assertEquals(false, jSType0.isNoResolvedType());
      assertEquals(true, jSType0.isNominalType());
      assertEquals(false, jSType0.isAllType());
      assertEquals(false, jSType0.isNoType());
      assertEquals(false, jSType0.isNumberValueType());
      assertEquals(false, jSType0.isVoidType());
      assertEquals(false, jSType0.isOrdinaryFunction());
      assertEquals(false, jSType0.isFunctionPrototypeType());
      assertEquals(false, jSType0.isCheckedUnknownType());
      assertEquals(false, jSType0.isEnumElementType());
      assertEquals(false, jSType0.isResolved());
      assertEquals(false, jSType0.isInterface());
      assertEquals(false, jSType0.isRecordType());
      assertEquals(false, jSType0.isUnionType());
      assertEquals(false, jSType0.isNullType());
      assertEquals(false, jSType0.isConstructor());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(false, jSTypeArray0[0].isEnumType());
      assertEquals(false, jSTypeArray0[0].isResolved());
      assertEquals(false, jSTypeArray0[0].isFunctionPrototypeType());
      assertEquals(false, jSTypeArray0[0].isNullType());
      assertEquals(false, jSTypeArray0[0].isAllType());
      assertEquals(false, jSTypeArray0[0].isRecordType());
      assertEquals(false, jSTypeArray0[0].isConstructor());
      assertEquals(false, jSTypeArray0[0].isParameterizedType());
      assertEquals(false, jSTypeArray0[0].isNoType());
      assertEquals(false, jSTypeArray0[0].isNoObjectType());
      assertEquals(false, jSTypeArray0[0].isUnionType());
      assertEquals(false, jSTypeArray0[0].isBooleanValueType());
      assertEquals(true, jSTypeArray0[0].isNominalType());
      assertEquals(false, jSTypeArray0[0].isTemplateType());
      assertEquals(false, jSTypeArray0[0].isStringValueType());
      assertEquals(false, jSTypeArray0[0].isNumberValueType());
      assertEquals(false, jSTypeArray0[0].isVoidType());
      assertEquals(false, jSTypeArray0[0].isEnumElementType());
      assertEquals(false, jSTypeArray0[0].isFunctionType());
      assertEquals(false, jSTypeArray0[0].isInterface());
      assertEquals(false, jSTypeArray0[0].isOrdinaryFunction());
      assertEquals(false, jSTypeArray0[0].isCheckedUnknownType());
      assertEquals(false, jSTypeArray0[0].isNominalConstructor());
      assertEquals(false, jSTypeArray0[0].isNoResolvedType());
      assertNotNull(jSTypeArray0[0]);
      
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(83, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getRootOfQualifiedName(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test022()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertNotNull(closureCodingConvention0);
      
      String string0 = ".prototype.";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertNotNull(node0);
  }

  @Test
  public void test023()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertNotNull(node0);
      
      NodeUtil.copyNameAnnotations(node0, node0);
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
  }

  @Test
  public void test024()  throws Throwable  {
      int int0 = 110;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test
  public void test025()  throws Throwable  {
      int int0 = 101;
      String string0 = NodeUtil.opToStr(int0);
      assertEquals("&&", string0);
      assertNotNull(string0);
  }

  @Test
  public void test026()  throws Throwable  {
      int int0 = 28;
      String string0 = NodeUtil.opToStr(int0);
      assertEquals("+", string0);
      assertNotNull(string0);
  }

  @Test
  public void test027()  throws Throwable  {
      int int0 = 19;
      String string0 = NodeUtil.opToStrNoFail(int0);
      assertEquals(">>", string0);
      assertNotNull(string0);
  }

  @Test
  public void test028()  throws Throwable  {
      int int0 = 43;
      int int1 = NodeUtil.precedence(int0);
      assertEquals(15, int1);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      
      String string0 = NodeUtil.opToStrNoFail(int1);
      assertEquals("<=", string0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertNotNull(string0);
  }

  @Test
  public void test029()  throws Throwable  {
      int int0 = 11;
      String string0 = NodeUtil.opToStrNoFail(int0);
      assertEquals("&", string0);
      assertNotNull(string0);
  }

  @Test
  public void test030()  throws Throwable  {
      int int0 = (-2853);
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test
  public void test031()  throws Throwable  {
      String string0 = "Y";
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabelName());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabelName());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertFalse(boolean0);
  }

  @Test
  public void test032()  throws Throwable  {
      int int0 = (-328);
      boolean boolean0 = NodeUtil.isAssociative(int0);
      assertFalse(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertNotNull(node0);
      
      JSType jSType0 = null;
      JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertNull(jSType1);
  }

  @Test
  public void test033()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "9!";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.isName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        String string1 = NodeUtil.getObjectLitKeyName(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node type: NAME 9!
         //
      }
  }

  @Test
  public void test034()  throws Throwable  {
      int int0 = (-2853);
      Node node0 = new Node(int0, int0, int0);
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVoid());
      assertEquals(-2853, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.isLValue(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test035()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "SU0@.*?7{u=$%`|2]~";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertFalse(boolean0);
  }

  @Test
  public void test036()  throws Throwable  {
      int int0 = (-778);
      String string0 = ":\\Y8F,)6M`";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertFalse(boolean0);
  }

  @Test
  public void test037()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.equals((Object) nodeUtil_MayBeStringResultPredicate0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isParamList());
      assertEquals(44, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCatch());
      assertNotNull(node0);
      
      boolean boolean1 = NodeUtil.isBleedingFunctionName(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isParamList());
      assertEquals(44, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCatch());
      assertFalse(boolean1);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
  }

  @Test
  public void test038()  throws Throwable  {
      int int0 = 45;
      String string0 = "msg.no.paren.cond";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThis());
      assertEquals(45, node0.getType());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThis());
      assertEquals(45, node0.getType());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertFalse(boolean0);
  }

  @Test
  public void test039()  throws Throwable  {
      int int0 = 11;
      int int1 = NodeUtil.precedence(int0);
      assertEquals(7, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      Node node0 = Node.newNumber((double) int1, int1, int1);
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(28679, node0.getSourcePosition());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertEquals(7, node0.getLineno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isString());
      assertEquals(7, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isReferenceName(node0);
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(28679, node0.getSourcePosition());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertEquals(7, node0.getLineno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isString());
      assertEquals(7, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertFalse(boolean0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test
  public void test040()  throws Throwable  {
      double double0 = 29.65692516591892;
      int int0 = 0;
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertNotNull(node0);
      
      String string0 = "xI`!uM9<@";
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isReturn());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDelProp());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isIn());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isWhile());
      assertEquals(0, node1.getCharno());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isWith());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isNumber());
      assertEquals(0, node1.getSourcePosition());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isInc());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAnd());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFalse());
      assertEquals(1, node1.getChildCount());
      assertEquals(0, node1.getLineno());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNE());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      
      // Undeclared exception!
      try {
        NodeUtil.removeChild(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: NUMBER 29.65692516591892 0 of NUMBER 29.65692516591892 0
         //
      }
  }

  @Test
  public void test041()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.equals((Object) nodeUtil_MayBeStringResultPredicate0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(true, node0.isTrue());
      assertNotNull(node0);
      
      boolean boolean1 = NodeUtil.isStatementParent(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(true, node0.isTrue());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
  }

  @Test
  public void test042()  throws Throwable  {
      double double0 = (-681.49127881);
      int int0 = 1434;
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(1434, node0.getCharno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(1434, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(5875098, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getConditionExpression(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // NUMBER -681.49127881 1434 does not have a condition.
         //
      }
  }

  @Test
  public void test043()  throws Throwable  {
      int int0 = 14;
      Node node0 = new Node(int0);
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(14, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFor());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test044()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertNotNull(closureCodingConvention0);
      
      String string0 = ".";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isVoid());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertNotNull(node0);
      
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      assertNotNull(nodeUtil_NumbericResultPredicate0);
      
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      assertNotNull(nodeUtil_MatchShallowStatement0);
      
      int int0 = NodeUtil.getCount(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_MatchShallowStatement0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isVoid());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals(0, int0);
  }

  @Test
  public void test045()  throws Throwable  {
      String string0 = "Unexpected expression node";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(3687, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCase());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.newExpr(node0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isDo());
      assertEquals(3687, node1.getCharno());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVar());
      assertEquals(15105639, node1.getSourcePosition());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isNew());
      assertEquals(true, node1.hasChildren());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isVarArgs());
      assertEquals(true, node1.isExprResult());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isIn());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isInc());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isThis());
      assertEquals(3687, node1.getLineno());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNE());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isFromExterns());
      assertEquals(130, node1.getType());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(3687, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCase());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.isWithinLoop(node0);
      assertNotSame(node0, node1);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(3687, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCase());
      assertFalse(boolean0);
      assertFalse(node0.equals((Object)node1));
  }

  @Test
  public void test046()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber((double) int0, int0, int0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.getLoopCodeBlock(node0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertNull(node1);
  }

  @Test
  public void test047()  throws Throwable  {
      int int0 = (-957);
      Node node0 = new Node(int0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(-957, node0.getType());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssignAdd());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isForIn(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(-957, node0.getType());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssignAdd());
      assertFalse(boolean0);
  }

  @Test
  public void test048()  throws Throwable  {
      double double0 = 53.0;
      int int0 = (-37);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTry());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFalse());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isExprCall(node0);
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTry());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFalse());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertFalse(boolean0);
  }

  @Test
  public void test049()  throws Throwable  {
      int int0 = (-957);
      Node node0 = new Node(int0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isExprResult());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(-957, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isExprResult());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(-957, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertFalse(boolean0);
  }

  @Test
  public void test050()  throws Throwable  {
      int int0 = (-103);
      String string0 = "}`ylvC&&*fk";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(-103, node0.getType());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getLineno());
      assertNotNull(node0);
      
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test051()  throws Throwable  {
      String string0 = "Unexpected expression node";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVoid());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isParamList());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.referencesThis(node0);
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVoid());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isParamList());
      assertFalse(boolean0);
  }

  @Test
  public void test052()  throws Throwable  {
      String string0 = "Z";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not an assignment op:STRING Z
         //
      }
  }

  @Test
  public void test053()  throws Throwable  {
      int int0 = 11;
      boolean boolean0 = NodeUtil.isCommutative(int0);
      assertTrue(boolean0);
  }

  @Test
  public void test054()  throws Throwable  {
      int int0 = 61;
      boolean boolean0 = NodeUtil.isCommutative(int0);
      assertFalse(boolean0);
  }

  @Test
  public void test055()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertNotNull(node0);
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean1 = nodeUtil_MayBeStringResultPredicate0.apply(node0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      
      boolean boolean2 = NodeUtil.mayBeString(node0, boolean1);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertFalse(boolean2);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
  }

  @Test
  public void test056()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertNotNull(node0);
      
      boolean boolean1 = nodeUtil_MayBeStringResultPredicate0.apply(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
  }

  @Test
  public void test057()  throws Throwable  {
      double double0 = (-681.49127881);
      int int0 = 1434;
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(5875098, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(1434, node0.getLineno());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(1434, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(5875098, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(1434, node0.getLineno());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(1434, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertFalse(boolean0);
  }

  @Test
  public void test058()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNotNull(closureCodingConvention0);
      
      String string0 = ".";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertNotNull(node0);
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.apply(node0);
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertTrue(boolean0);
  }

  @Test
  public void test059()  throws Throwable  {
      int int0 = 16;
      Node node0 = new Node(int0);
      assertEquals(16, node0.getType());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isEmpty());
      assertNotNull(node0);
      
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
      assertNotNull(nodeUtil_BooleanResultPredicate0);
      
      boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node0);
      assertEquals(16, node0.getType());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isEmpty());
      assertTrue(boolean0);
  }

  @Test
  public void test060()  throws Throwable  {
      String string0 = "a";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isInc());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTry());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isFromExterns());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVarArgs());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDebugger());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isStringKey());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isWith());
      assertEquals(true, node1.hasOneChild());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.isUndefined(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isInc());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTry());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isFromExterns());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVarArgs());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDebugger());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isStringKey());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isWith());
      assertEquals(true, node1.hasOneChild());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertTrue(boolean0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
  }

  @Test
  public void test061()  throws Throwable  {
      int int0 = 147;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for GETTER_DEF (type 147)
         //
      }
  }

  @Test
  public void test062()  throws Throwable  {
      int int0 = 128;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 128
         //
      }
  }

  @Test
  public void test063()  throws Throwable  {
      int int0 = 112;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for DEFAULT_CASE (type 112)
         //
      }
  }

  @Test
  public void test064()  throws Throwable  {
      int int0 = 79;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 79
         //
      }
  }

  @Test
  public void test065()  throws Throwable  {
      int int0 = 22;
      int int1 = NodeUtil.precedence(int0);
      assertEquals(11, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test
  public void test066()  throws Throwable  {
      int int0 = 103;
      int int1 = NodeUtil.precedence(int0);
      assertEquals(13, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test
  public void test067()  throws Throwable  {
      String string0 = "Unexpected expression node";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.newExpr(node0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNE());
      assertEquals(3687, node1.getCharno());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isTry());
      assertEquals(15105639, node1.getSourcePosition());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOr());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNull());
      assertEquals(3687, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.wasEmptyNode());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(130, node1.getType());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isScript());
      assertEquals(true, node1.isExprResult());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.canBeSideEffected(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNE());
      assertEquals(3687, node1.getCharno());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isTry());
      assertEquals(15105639, node1.getSourcePosition());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOr());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNull());
      assertEquals(3687, node1.getLineno());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.wasEmptyNode());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(130, node1.getType());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isScript());
      assertEquals(true, node1.isExprResult());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertFalse(boolean0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
  }

  @Test
  public void test068()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertNotNull(node0);
      
      AbstractCompiler abstractCompiler0 = null;
      // Undeclared exception!
      try {
        boolean boolean1 = NodeUtil.functionCallHasSideEffects(node0, abstractCompiler0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected CALL node, got FALSE
         //
      }
  }

  @Test
  public void test069()  throws Throwable  {
      String string0 = "Unexpected expression node";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.newExpr(node0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isIn());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isCall());
      assertEquals(3687, node1.getCharno());
      assertEquals(false, node1.isAnd());
      assertNull(node1.getSourceFileName());
      assertEquals(130, node1.getType());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isTrue());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(true, node1.isExprResult());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isWhile());
      assertEquals(3687, node1.getLineno());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCatch());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isGetterDef());
      assertEquals(15105639, node1.getSourcePosition());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isIn());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isCall());
      assertEquals(3687, node1.getCharno());
      assertEquals(false, node1.isAnd());
      assertNull(node1.getSourceFileName());
      assertEquals(130, node1.getType());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isTrue());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(true, node1.isExprResult());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isWhile());
      assertEquals(3687, node1.getLineno());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCatch());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isGetterDef());
      assertEquals(15105639, node1.getSourcePosition());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertFalse(boolean0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
  }

  @Test
  public void test070()  throws Throwable  {
      String string0 = "a";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCase());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFalse());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLabelName());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isComma());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIn());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isOr());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isGetProp());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isSwitch());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isWhile());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCase());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFalse());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLabelName());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isComma());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIn());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isOr());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isGetProp());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isSwitch());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isWhile());
      assertFalse(boolean0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
  }

  @Test
  public void test071()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(43, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertNotNull(node0);
      
      boolean boolean1 = NodeUtil.mayEffectMutableState(node0);
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(43, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
  }

  @Test
  public void test072()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(int0, int0, int0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isBreak());
      assertEquals(0, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.wasEmptyNode());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isSimpleOperator(node0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isBreak());
      assertEquals(0, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.wasEmptyNode());
      assertFalse(boolean0);
  }

  @Test
  public void test073()  throws Throwable  {
      String string0 = "a";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isRegExp());
      assertNotNull(node0);
      
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isComma());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isName());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isTrue());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isAnd());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(true, node1.hasChildren());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isHook());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDelProp());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isRegExp());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isComma());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isName());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isTrue());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isAnd());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(true, node1.hasChildren());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isHook());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDelProp());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isRegExp());
      assertTrue(boolean0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
  }

  @Test
  public void test074()  throws Throwable  {
      int int0 = 117;
      boolean boolean0 = NodeUtil.isSimpleOperatorType(int0);
      assertFalse(boolean0);
  }

  @Test
  public void test075()  throws Throwable  {
      int int0 = (-328);
      int int1 = 93;
      String string0 = "tqUIr!~:10g>P9";
      Node node0 = Node.newString(int1, string0, int0, int0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(93, node0.getType());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNull());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test076()  throws Throwable  {
      double double0 = 822.51;
      String string0 = NodeUtil.getStringValue(double0);
      assertEquals("822.51", string0);
      assertNotNull(string0);
      
      int int0 = 61;
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLocalResultCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNew());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, node0, int0, int0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isReturn());
      assertNull(node1.getSourceFileName());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isDo());
      assertEquals(61, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(61, node1.getLineno());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFromExterns());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAssign());
      assertEquals(249917, node1.getSourcePosition());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBlock());
      assertEquals(61, node1.getCharno());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLocalResultCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNew());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      
      boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isReturn());
      assertNull(node1.getSourceFileName());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isDo());
      assertEquals(61, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(61, node1.getLineno());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFromExterns());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAssign());
      assertEquals(249917, node1.getSourcePosition());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBlock());
      assertEquals(61, node1.getCharno());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLocalResultCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNew());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertTrue(boolean0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
  }

  @Test
  public void test077()  throws Throwable  {
      int int0 = (-54);
      String string0 = "Fxu7eDu-T99BC,[";
      int int1 = 52;
      Node node0 = Node.newString(int1, string0, int1, int0);
      assertEquals(52, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.isInstanceOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
      assertEquals(52, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.isInstanceOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertFalse(boolean0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test
  public void test078()  throws Throwable  {
      String string0 = "U";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isSimpleOperator(node0);
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertFalse(boolean0);
  }

  @Test
  public void test079()  throws Throwable  {
      double double0 = (-681.49127881);
      int int0 = 1434;
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(1434, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWhile());
      assertEquals(5875098, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isNumber());
      assertEquals(1434, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isStringKey());
      assertNotNull(node0);
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(1434, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWhile());
      assertEquals(5875098, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isNumber());
      assertEquals(1434, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isStringKey());
      assertTrue(boolean0);
  }

  @Test
  public void test080()  throws Throwable  {
      int int0 = (-54);
      String string0 = "Fxu7eDu-T99BC,[";
      int int1 = 32;
      Node node0 = Node.newString(int1, string0, int0, int0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThrow());
      assertEquals(32, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.isTypeOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThrow());
      assertEquals(32, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.isTypeOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertFalse(boolean0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test
  public void test081()  throws Throwable  {
      int int0 = 18;
      boolean boolean0 = NodeUtil.isSimpleOperatorType(int0);
      assertTrue(boolean0);
  }

  @Test
  public void test082()  throws Throwable  {
      double double0 = Double.POSITIVE_INFINITY;
      Node node0 = Node.newNumber(double0);
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isEmptyBlock(node0);
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertFalse(boolean0);
  }

  @Test
  public void test083()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThis());
      assertNotNull(node0);
      
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertNotNull(compilerOptions0);
      
      boolean boolean1 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThis());
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
  }

  @Test
  public void test084()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertNotNull(node0);
      
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertNotNull(compilerOptions0);
      
      boolean boolean1 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertTrue(boolean1);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
  }

  @Test
  public void test085()  throws Throwable  {
      int int0 = 45;
      String string0 = "msg.no.paren.cond";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCase());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNumber());
      assertEquals(45, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertNotNull(node0);
      
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertNotNull(compilerOptions0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test086()  throws Throwable  {
      int int0 = 16;
      Node node0 = new Node(int0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(16, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isRelationalOperation(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(16, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertTrue(boolean0);
  }

  @Test
  public void test087()  throws Throwable  {
      double double0 = 53.0;
      int int0 = (-37);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInstanceOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isRelationalOperation(node0);
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInstanceOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertFalse(boolean0);
  }

  @Test
  public void test088()  throws Throwable  {
      int int0 = 14;
      Node node0 = new Node(int0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDefaultCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetElem());
      assertEquals(14, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isRelationalOperation(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDefaultCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetElem());
      assertEquals(14, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertTrue(boolean0);
  }

  @Test
  public void test089()  throws Throwable  {
      String string0 = "a";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isSymmetricOperation(node0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertFalse(boolean0);
  }

  @Test
  public void test090()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) simpleErrorReporter0);
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(jSTypeRegistry0);
      
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      assertEquals(false, jSType0.isCheckedUnknownType());
      assertEquals(false, jSType0.isUnionType());
      assertEquals(false, jSType0.isNullType());
      assertEquals(false, jSType0.isVoidType());
      assertEquals(false, jSType0.isTemplateType());
      assertEquals(false, jSType0.isNoObjectType());
      assertEquals(false, jSType0.isInterface());
      assertEquals(false, jSType0.isResolved());
      assertEquals(false, jSType0.isParameterizedType());
      assertEquals(false, jSType0.isNumberValueType());
      assertEquals(true, jSType0.isNominalType());
      assertEquals(false, jSType0.isAllType());
      assertEquals(false, jSType0.isStringValueType());
      assertEquals(false, jSType0.isNominalConstructor());
      assertEquals(false, jSType0.isRecordType());
      assertEquals(false, jSType0.isOrdinaryFunction());
      assertEquals(false, jSType0.isConstructor());
      assertEquals(false, jSType0.isFunctionType());
      assertEquals(false, jSType0.isNoResolvedType());
      assertEquals(false, jSType0.isFunctionPrototypeType());
      assertEquals(false, jSType0.isBooleanValueType());
      assertEquals(false, jSType0.isEnumType());
      assertEquals(false, jSType0.isEnumElementType());
      assertEquals(false, jSType0.isNoType());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(jSType0);
      
      jSTypeArray0[0] = jSType0;
      assertEquals(false, jSTypeArray0[0].isVoidType());
      assertEquals(false, jSTypeArray0[0].isNullType());
      assertEquals(false, jSTypeArray0[0].isAllType());
      assertEquals(false, jSTypeArray0[0].isOrdinaryFunction());
      assertEquals(false, jSTypeArray0[0].isCheckedUnknownType());
      assertEquals(false, jSTypeArray0[0].isNoResolvedType());
      assertEquals(false, jSTypeArray0[0].isEnumType());
      assertEquals(false, jSTypeArray0[0].isTemplateType());
      assertEquals(false, jSTypeArray0[0].isConstructor());
      assertEquals(true, jSTypeArray0[0].isNominalType());
      assertEquals(false, jSTypeArray0[0].isEnumElementType());
      assertEquals(false, jSTypeArray0[0].isInterface());
      assertEquals(false, jSTypeArray0[0].isStringValueType());
      assertEquals(false, jSTypeArray0[0].isNoObjectType());
      assertEquals(false, jSTypeArray0[0].isRecordType());
      assertEquals(false, jSTypeArray0[0].isNoType());
      assertEquals(false, jSTypeArray0[0].isNumberValueType());
      assertEquals(false, jSTypeArray0[0].isParameterizedType());
      assertEquals(false, jSTypeArray0[0].isFunctionPrototypeType());
      assertEquals(false, jSTypeArray0[0].isFunctionType());
      assertEquals(false, jSTypeArray0[0].isNominalConstructor());
      assertEquals(false, jSTypeArray0[0].isBooleanValueType());
      assertEquals(false, jSTypeArray0[0].isResolved());
      assertEquals(false, jSTypeArray0[0].isUnionType());
      assertEquals(false, jSType0.isCheckedUnknownType());
      assertEquals(false, jSType0.isUnionType());
      assertEquals(false, jSType0.isNullType());
      assertEquals(false, jSType0.isVoidType());
      assertEquals(false, jSType0.isTemplateType());
      assertEquals(false, jSType0.isNoObjectType());
      assertEquals(false, jSType0.isInterface());
      assertEquals(false, jSType0.isResolved());
      assertEquals(false, jSType0.isParameterizedType());
      assertEquals(false, jSType0.isNumberValueType());
      assertEquals(true, jSType0.isNominalType());
      assertEquals(false, jSType0.isAllType());
      assertEquals(false, jSType0.isStringValueType());
      assertEquals(false, jSType0.isNominalConstructor());
      assertEquals(false, jSType0.isRecordType());
      assertEquals(false, jSType0.isOrdinaryFunction());
      assertEquals(false, jSType0.isConstructor());
      assertEquals(false, jSType0.isFunctionType());
      assertEquals(false, jSType0.isNoResolvedType());
      assertEquals(false, jSType0.isFunctionPrototypeType());
      assertEquals(false, jSType0.isBooleanValueType());
      assertEquals(false, jSType0.isEnumType());
      assertEquals(false, jSType0.isEnumElementType());
      assertEquals(false, jSType0.isNoType());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(jSTypeArray0[0]);
      
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(83, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(true, node0.isParamList());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTypeOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected expression nodePARAM_LIST
         //  parent:null
         //
      }
  }

  @Test
  public void test091()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertNotNull(node0);
      
      boolean boolean1 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
  }

  @Test
  public void test092()  throws Throwable  {
      String string0 = "arguSents";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals("arguSents", string1);
      assertNotNull(string1);
      
      Node node0 = Node.newString(string1);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isComma());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isFunctionExpression(node0);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isComma());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.isLiteralValue(node0, boolean0);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isComma());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertTrue(boolean1);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
  }

  @Test
  public void test093()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "9!";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWhile());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWhile());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertFalse(boolean0);
  }

  @Test
  public void test094()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLocalResultCall());
      assertNotNull(node0);
      
      boolean boolean1 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLocalResultCall());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
  }

  @Test
  public void test095()  throws Throwable  {
      double double0 = 822.51;
      String string0 = NodeUtil.getStringValue(double0);
      assertEquals("822.51", string0);
      assertNotNull(string0);
      
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFalse());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getLength());
      assertNotNull(node0);
      
      String string1 = NodeUtil.getNearestFunctionName(node0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFalse());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getLength());
      assertNull(string1);
  }

  @Test
  public void test096()  throws Throwable  {
      String string0 = " $[";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("$[", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
  }

  @Test
  public void test097()  throws Throwable  {
      String string0 = "Expected CALL node, got ";
      Double double0 = NodeUtil.getStringNumberValue(string0);
      assertEquals(Double.NaN, (double)double0, 0.01D);
  }

  @Test
  public void test098()  throws Throwable  {
      String string0 = "";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals("", string1);
      assertNotNull(string1);
  }

  @Test
  public void test099()  throws Throwable  {
      String string0 = "U";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertNotNull(node0);
      
      Double double0 = NodeUtil.getNumberValue(node0);
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(Double.NaN, (double)double0, 0.01D);
  }

  @Test
  public void test100()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      String string0 = "lIY&X%p";
      Node node0 = compiler0.parseTestCode(string0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(1, node0.getLineno());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWhile());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNotNull(node0);
      
      String string1 = NodeUtil.arrayToString(node0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(1, node0.getLineno());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWhile());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNull(string1);
  }

  @Test
  public void test101()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertNotNull(node0);
      
      String string0 = NodeUtil.getStringValue(node0);
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals("false", string0);
      assertNotNull(string0);
  }

  @Test
  public void test102()  throws Throwable  {
      String string0 = "arguSents";
      String string1 = NodeUtil.trimJsWhiteSpace(string0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals("arguSents", string1);
      assertNotNull(string1);
      
      Node node0 = Node.newString(string1);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals(false, node0.isDo());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertNotNull(node0);
      
      String string2 = NodeUtil.getArrayElementStringValue(node0);
      assertSame(string0, string1);
      assertSame(string0, string2);
      assertSame(string1, string2);
      assertSame(string1, string0);
      assertSame(string2, string1);
      assertSame(string2, string0);
      assertEquals(false, node0.isDo());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertEquals("arguSents", string2);
      assertNotNull(string2);
  }

  @Test
  public void test103()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNotNull(closureCodingConvention0);
      
      String string0 = ".";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(33, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNotNull(node0);
      
      String string1 = NodeUtil.arrayToString(node0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(33, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNull(string1);
  }

  @Test
  public void test104()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.equals((Object) nodeUtil_MayBeStringResultPredicate0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAnd());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertNotNull(node0);
      
      String string0 = NodeUtil.getStringValue(node0);
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAnd());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals("true", string0);
      assertNotNull(string0);
  }

  @Test
  public void test105()  throws Throwable  {
      String string0 = ".prototype.";
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      Node node0 = compiler0.parseTestCode(string0);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(true, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(1, compiler0.getErrorCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(132, node0.getType());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertNotNull(node0);
      
      TernaryValue ternaryValue0 = NodeUtil.getPureBooleanValue(node0);
      assertEquals("UNKNOWN", ternaryValue0.name());
      assertEquals(2, ternaryValue0.ordinal());
      assertEquals("unknown", ternaryValue0.toString());
      assertEquals(TernaryValue.UNKNOWN, ternaryValue0.not());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(true, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(1, compiler0.getErrorCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(132, node0.getType());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
  }

  @Test
  public void test106()  throws Throwable  {
      int int0 = (-328);
      boolean boolean0 = NodeUtil.isAssociative(int0);
      assertFalse(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNew());
      assertNotNull(node0);
      
      TernaryValue ternaryValue0 = NodeUtil.getPureBooleanValue(node0);
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNew());
      assertEquals(0, ternaryValue0.ordinal());
      assertEquals(TernaryValue.TRUE, ternaryValue0.not());
      assertEquals("FALSE", ternaryValue0.name());
      assertEquals("false", ternaryValue0.toString());
  }

  @Test
  public void test107()  throws Throwable  {
      String string0 = "U";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertNotNull(node0);
      
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      assertEquals(TernaryValue.FALSE, ternaryValue0.not());
      assertEquals(1, ternaryValue0.ordinal());
      assertEquals("true", ternaryValue0.toString());
      assertEquals("TRUE", ternaryValue0.name());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
  }

  @Test
  public void test108()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNumber());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertNotNull(node0);
      
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      assertEquals("TRUE", ternaryValue0.name());
      assertEquals(1, ternaryValue0.ordinal());
      assertEquals("true", ternaryValue0.toString());
      assertEquals(TernaryValue.FALSE, ternaryValue0.not());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNumber());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
  }

  @Test
  public void test109()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      assertNotNull(nodeUtil_NumbericResultPredicate0);
  }

  @Test
  public void test110()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      assertNotNull(nodeUtil_BooleanResultPredicate0);
  }

  @Test
  public void test111()  throws Throwable  {
      int int0 = (-778);
      String string0 = ":\\Y8F,)6M`";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDec());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDec());
      assertFalse(boolean0);
  }

  @Test
  public void test112()  throws Throwable  {
      String string0 = "Z";
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.mayBeString(node0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertTrue(boolean0);
  }

  @Test
  public void test113()  throws Throwable  {
      String string0 = "Unexpected expression node";
      int int0 = 3687;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVar());
      assertNotNull(node0);
      
      int int1 = NodeUtil.getNameReferenceCount(node0, string0);
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(3687, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(15105639, node0.getSourcePosition());
      assertEquals(3687, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVar());
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test114()  throws Throwable  {
      int int0 = 11;
      boolean boolean0 = NodeUtil.isAssociative(int0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDebugger());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getFunctionBody(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test115()  throws Throwable  {
      double double0 = Double.POSITIVE_INFINITY;
      Node node0 = Node.newNumber(double0);
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isComma());
      assertNotNull(node0);
      
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      assertNotNull(nodeUtil_NumbericResultPredicate0);
      
      int int0 = 0;
      int int1 = NodeUtil.getNodeTypeReferenceCount(node0, int0, nodeUtil_NumbericResultPredicate0);
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isComma());
      assertEquals(0, int1);
      assertTrue(int0 == int1);
      assertTrue(int1 == int0);
  }

  @Test
  public void test116()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      String string0 = "lIY&X%p";
      Node node0 = compiler0.parseTestCode(string0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isReturn());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDo());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertNotNull(node0);
      
      NodeUtil.redeclareVarsInsideBranch(node0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isReturn());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDo());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
  }

  @Test
  public void test117()  throws Throwable  {
      int int0 = 45;
      String string0 = "msg.no.paren.cond";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(45, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isParamList());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(45, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isParamList());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertFalse(boolean0);
  }

  @Test
  public void test118()  throws Throwable  {
      int int0 = (-778);
      String string0 = ":\\Y8F,)6M`";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOr());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getArgumentForCallOrNew(node0, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test119()  throws Throwable  {
      double double0 = 822.51;
      String string0 = NodeUtil.getStringValue(double0);
      assertEquals("822.51", string0);
      assertNotNull(string0);
      
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        String string1 = NodeUtil.getPrototypePropertyName(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test120()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.equals((Object) nodeUtil_MayBeStringResultPredicate0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isQuotedString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean1 = NodeUtil.isStatement(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test121()  throws Throwable  {
      String string0 = "b<2gM";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNumber());
      assertEquals(true, node1.hasChildren());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isContinue());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isVarArgs());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isGetElem());
      assertEquals(118, node1.getType());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isRegExp());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isAnd());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isGetterDef());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isIf());
      assertNotNull(node1);
      
      // Undeclared exception!
      try {
        Node node2 = NodeUtil.getCatchBlock(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test122()  throws Throwable  {
      int int0 = 130;
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      String string0 = "lIY&X%p";
      Node node0 = compiler0.parseTestCode(string0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIf());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getArgumentForFunction(node0, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test123()  throws Throwable  {
      int int0 = 1536;
      String string0 = ": ";
      int int1 = NodeUtil.getInverseOperator(int0);
      assertEquals((-1), int1);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      
      Node node0 = Node.newString(int0, string0, int1, int0);
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDo());
      assertEquals(1536, node0.getType());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQuotedString());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.newHasLocalResult(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test124()  throws Throwable  {
      String string0 = "arguSents";
      Node node0 = Node.newString(string0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFalse());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.constructorCallHasSideEffects(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected NEW node, got STRING
         //
      }
  }

  @Test
  public void test125()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber((double) int0, int0, int0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getLength());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.containsFunction(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isNull());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getLength());
      assertFalse(boolean0);
  }

  @Test
  public void test126()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      String string0 = "lIY&X%p";
      Node node0 = compiler0.parseTestCode(string0);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.canBeSideEffected(node0);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertTrue(boolean0);
  }

  @Test
  public void test127()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "m0^,sCY]x,.";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isContinue());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isGetProp());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isQuotedString());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertNotNull(node0);
      
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      boolean boolean0 = NodeUtil.mayEffectMutableState(node0, compiler0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isContinue());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isGetProp());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isQuotedString());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertFalse(boolean0);
  }

  @Test
  public void test128()  throws Throwable  {
      String string0 = ": ";
      boolean boolean0 = NodeUtil.isValidPropertyName(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test129()  throws Throwable  {
      double double0 = 53.0;
      int int0 = (-37);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertNotNull(node0);
      
      String string0 = NodeUtil.arrayToString(node0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals("", string0);
      assertNotNull(string0);
      
      CodingConvention codingConvention0 = null;
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.newName(codingConvention0, string0, node0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test130()  throws Throwable  {
      int int0 = 45;
      String string0 = "msg.no.paren.cond";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getChildCount());
      assertEquals(45, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVoid());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(45, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(184365, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isContinue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getChildCount());
      assertEquals(45, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVoid());
      assertEquals(45, node0.getCharno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertTrue(boolean0);
  }

  @Test
  public void test131()  throws Throwable  {
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNotNull(closureCodingConvention0);
      
      String string0 = "9!";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, string0);
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(38, node0.getType());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertNotNull(node0);
      
      boolean boolean0 = NodeUtil.isNameReferenced(node0, string0);
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(38, node0.getType());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertTrue(boolean0);
  }

  @Test
  public void test132()  throws Throwable  {
      int int0 = (-778);
      String string0 = ":\\Y8F,)6M`";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCatch());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNot());
      assertNotNull(node0);
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = NodeUtil.allResultsMatch(node0, nodeUtil_MayBeStringResultPredicate0);
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCatch());
      assertEquals(-778, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNot());
      assertTrue(boolean0);
  }
}
