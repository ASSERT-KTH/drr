/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:16:30 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.PreprocessorSymbolTable;
import com.google.javascript.jscomp.ProcessClosurePrimitives;
import com.google.javascript.rhino.Node;
import java.io.PrintStream;
import java.util.Set;



import org.junit.runner.RunWith;


public class ProcessClosurePrimitivesEvoSuite_branch_Test  {

  @Test
  public void test0() {}
//   @Test
//   public void test0()  throws Throwable  {
//       PrintStream printStream0 = null;
//       Compiler compiler0 = new Compiler(printStream0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertNotNull(compiler0);
//       
//       PreprocessorSymbolTable preprocessorSymbolTable0 = null;
//       CheckLevel checkLevel0 = CheckLevel.WARNING;
//       ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, checkLevel0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertNotNull(processClosurePrimitives0);
//       
//       String string0 = "com.googe.jvascript.jsco-p53rocessCCosurePiaGtiv7s";
//       Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0);
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isOr());
//       assertEquals(true, node0.hasOneChild());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isCast());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isVoid());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isCase());
//       assertEquals(1, node0.getChildCount());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isName());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNot());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isRegExp());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertNotNull(node0);
//       
//       processClosurePrimitives0.process(node0, node0);
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isOr());
//       assertEquals(true, node0.hasOneChild());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isCast());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isVoid());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isCase());
//       assertEquals(1, node0.getChildCount());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isName());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNot());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isRegExp());
//       assertEquals("[testcode]", node0.getSourceFileName());
//   }

  @Test
  public void test1() {}
//   @Test
//   public void test1()  throws Throwable  {
//       PrintStream printStream0 = null;
//       Compiler compiler0 = new Compiler(printStream0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertNotNull(compiler0);
//       
//       PreprocessorSymbolTable preprocessorSymbolTable0 = null;
//       CheckLevel checkLevel0 = CheckLevel.OFF;
//       ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, checkLevel0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertNotNull(processClosurePrimitives0);
//       
//       String string0 = "goog.base";
//       Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0);
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isAnd());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isNE());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(true, node0.hasOneChild());
//       assertEquals(false, node0.isVoid());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isAssign());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isNot());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isContinue());
//       assertEquals(1, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(0, node0.getLength());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isTry());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertNotNull(node0);
//       
//       processClosurePrimitives0.process(node0, node0);
//       assertEquals(1, compiler0.getErrorCount());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(true, compiler0.hasErrors());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isAnd());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isNE());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(true, node0.hasOneChild());
//       assertEquals(false, node0.isVoid());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isAssign());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isNot());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isContinue());
//       assertEquals(1, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(0, node0.getLength());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isTry());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//   }

  @Test
  public void test2()  throws Throwable  {
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      PreprocessorSymbolTable preprocessorSymbolTable0 = null;
      CheckLevel checkLevel0 = CheckLevel.OFF;
      ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, checkLevel0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(processClosurePrimitives0);
      
      Set<String> set0 = processClosurePrimitives0.getExportedVariableNames();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertNotNull(set0);
  }
}
