/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 21:04:06 GMT 2014
 */

package com.google.javascript.jscomp.parsing;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.IRFactory;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Node;
import com.google.javascript.rhino.head.ast.AstNode;
import com.google.javascript.rhino.head.ast.AstRoot;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.ast.ErrorNode;
import com.google.javascript.rhino.head.ast.GeneratorExpressionLoop;
import com.google.javascript.rhino.head.ast.ObjectProperty;
import com.google.javascript.rhino.head.ast.Scope;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.lang.MockIllegalStateException;
import org.junit.runner.RunWith;


public class IRFactoryEvoSuite_branch_Test  {

  @Test
  public void test0() {}
//   @Test
//   public void test0()  throws Throwable  {
//       int int0 = 12;
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       
//       GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(int0, int0);
//       //  // Unstable assertion: assertNull(generatorExpressionLoop0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, generatorExpressionLoop0.depth());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getEachPosition());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getInPosition());
//       //  // Unstable assertion: assertEquals(false, generatorExpressionLoop0.isForEach());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getLp());
//       //  // Unstable assertion: assertEquals(false, generatorExpressionLoop0.hasChildren());
//       //  // Unstable assertion: assertEquals(12, generatorExpressionLoop0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getRp());
//       //  // Unstable assertion: assertEquals(12, generatorExpressionLoop0.getLength());
//       //  // Unstable assertion: assertEquals(12, generatorExpressionLoop0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals("119", generatorExpressionLoop0.toString());
//       //  // Unstable assertion: assertEquals(119, generatorExpressionLoop0.getType());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getLineno());
//       //  // Unstable assertion: assertNotNull(generatorExpressionLoop0);
//       
//       astRoot0.addChildToFront((Node) generatorExpressionLoop0);
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(generatorExpressionLoop0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, generatorExpressionLoop0.depth());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getEachPosition());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getInPosition());
//       //  // Unstable assertion: assertEquals(false, generatorExpressionLoop0.isForEach());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getLp());
//       //  // Unstable assertion: assertEquals(false, generatorExpressionLoop0.hasChildren());
//       //  // Unstable assertion: assertEquals(12, generatorExpressionLoop0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getRp());
//       //  // Unstable assertion: assertEquals(12, generatorExpressionLoop0.getLength());
//       //  // Unstable assertion: assertEquals(12, generatorExpressionLoop0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals("119", generatorExpressionLoop0.toString());
//       //  // Unstable assertion: assertEquals(119, generatorExpressionLoop0.getType());
//       //  // Unstable assertion: assertEquals(-1, generatorExpressionLoop0.getLineno());
//       
//       String string0 = "";
//       boolean boolean0 = false;
//       SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
//       //  // Unstable assertion: assertEquals("", simpleSourceFile0.toString());
//       //  // Unstable assertion: assertEquals(false, simpleSourceFile0.isExtern());
//       //  // Unstable assertion: assertEquals("", simpleSourceFile0.getName());
//       //  // Unstable assertion: assertNotNull(simpleSourceFile0);
//       
//       Locale locale0 = Locale.PRC;
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertNotNull(locale0);
//       
//       Set<String> set0 = locale0.getUnicodeLocaleAttributes();
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertNotNull(set0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
//       Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertNotNull(config0);
//       
//       Context context0 = Context.enter();
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(context0);
//       
//       ErrorCollector errorCollector0 = (ErrorCollector)context0.getErrorReporter();
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(errorCollector0);
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) simpleSourceFile0, string0, config0, (ErrorReporter) errorCollector0);
//        //  fail("Expecting exception: NullPointerException");
//        // Unstable assertion
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-216);
      ErrorNode errorNode0 = new ErrorNode(int0);
      assertEquals(-1, errorNode0.getType());
      assertNull(errorNode0.getJsDoc());
      assertEquals(1, errorNode0.getLength());
      assertNull(errorNode0.getMessage());
      assertEquals(-216, errorNode0.getAbsolutePosition());
      assertEquals(false, errorNode0.hasChildren());
      assertEquals(-216, errorNode0.getPosition());
      assertEquals("-1", errorNode0.toString());
      assertEquals(0, errorNode0.depth());
      assertEquals(-1, errorNode0.getLineno());
      assertNotNull(errorNode0);
      
      AstRoot astRoot0 = errorNode0.getAstRoot();
      assertEquals(-1, errorNode0.getType());
      assertNull(errorNode0.getJsDoc());
      assertEquals(1, errorNode0.getLength());
      assertNull(errorNode0.getMessage());
      assertEquals(-216, errorNode0.getAbsolutePosition());
      assertEquals(false, errorNode0.hasChildren());
      assertEquals(-216, errorNode0.getPosition());
      assertEquals("-1", errorNode0.toString());
      assertEquals(0, errorNode0.depth());
      assertEquals(-1, errorNode0.getLineno());
      assertNull(astRoot0);
      
      StaticSourceFile staticSourceFile0 = null;
      String string0 = "";
      Locale locale0 = Locale.ITALIAN;
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.getLanguage());
      assertNotNull(locale0);
      
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.getLanguage());
      assertNotNull(set0);
      
      boolean boolean0 = false;
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
      Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getISO3Country());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.getLanguage());
      assertNotNull(config0);
      
      ErrorCollector errorCollector0 = new ErrorCollector();
      assertNotNull(errorCollector0);
      
      // Undeclared exception!
      try {
        com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, staticSourceFile0, string0, config0, (ErrorReporter) errorCollector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2() {}
//   @Test
//   public void test2()  throws Throwable  {
//       int int0 = 28;
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(28, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(28, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       
//       String string0 = "";
//       Scope scope0 = new Scope(int0);
//       //  // Unstable assertion: assertNull(scope0.getJsDoc());
//       //  // Unstable assertion: assertEquals(1, scope0.getLength());
//       //  // Unstable assertion: assertEquals(28, scope0.getPosition());
//       //  // Unstable assertion: assertEquals(0, scope0.depth());
//       //  // Unstable assertion: assertEquals(-1, scope0.getLineno());
//       //  // Unstable assertion: assertEquals(129, scope0.getType());
//       //  // Unstable assertion: assertEquals("129", scope0.toString());
//       //  // Unstable assertion: assertEquals(28, scope0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, scope0.hasChildren());
//       //  // Unstable assertion: assertNotNull(scope0);
//       
//       astRoot0.addChild((AstNode) scope0);
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(28, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(28, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertNull(scope0.getJsDoc());
//       //  // Unstable assertion: assertEquals(1, scope0.getLength());
//       //  // Unstable assertion: assertEquals(-1, scope0.getLineno());
//       //  // Unstable assertion: assertEquals(129, scope0.getType());
//       //  // Unstable assertion: assertEquals("129", scope0.toString());
//       //  // Unstable assertion: assertEquals(28, scope0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, scope0.hasChildren());
//       //  // Unstable assertion: assertEquals(1, scope0.depth());
//       //  // Unstable assertion: assertEquals(0, scope0.getPosition());
//       
//       boolean boolean0 = false;
//       SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
//       //  // Unstable assertion: assertEquals("", simpleSourceFile0.getName());
//       //  // Unstable assertion: assertEquals("", simpleSourceFile0.toString());
//       //  // Unstable assertion: assertEquals(false, simpleSourceFile0.isExtern());
//       //  // Unstable assertion: assertNotNull(simpleSourceFile0);
//       
//       Locale locale0 = Locale.PRC;
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertNotNull(locale0);
//       
//       Set<String> set0 = locale0.getUnicodeLocaleAttributes();
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertNotNull(set0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
//       Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertNotNull(config0);
//       
//       Context context0 = Context.enter();
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(context0);
//       
//       ErrorCollector errorCollector0 = (ErrorCollector)context0.getErrorReporter();
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(errorCollector0);
//       
//       com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) simpleSourceFile0, string0, config0, (ErrorReporter) errorCollector0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(28, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(28, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, node0.getChildCount());
//       //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
//       //  // Unstable assertion: assertEquals(false, node0.isStringKey());
//       //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
//       //  // Unstable assertion: assertEquals(false, node0.isWhile());
//       //  // Unstable assertion: assertEquals(false, node0.isExprResult());
//       //  // Unstable assertion: assertEquals(false, node0.isDebugger());
//       //  // Unstable assertion: assertEquals(false, node0.isDelProp());
//       //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
//       //  // Unstable assertion: assertEquals(false, node0.isFor());
//       //  // Unstable assertion: assertEquals(false, node0.isInc());
//       //  // Unstable assertion: assertEquals(false, node0.isBreak());
//       //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
//       //  // Unstable assertion: assertEquals(false, node0.isIn());
//       //  // Unstable assertion: assertEquals(false, node0.isWith());
//       //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
//       //  // Unstable assertion: assertEquals(false, node0.isName());
//       //  // Unstable assertion: assertEquals(0, node0.getLength());
//       //  // Unstable assertion: assertEquals(false, node0.isCase());
//       //  // Unstable assertion: assertEquals(false, node0.isReturn());
//       //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
//       //  // Unstable assertion: assertEquals(false, node0.isIf());
//       //  // Unstable assertion: assertEquals(true, node0.isScript());
//       //  // Unstable assertion: assertEquals(false, node0.isDec());
//       //  // Unstable assertion: assertEquals(false, node0.isNumber());
//       //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
//       //  // Unstable assertion: assertEquals("", node0.getSourceFileName());
//       //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
//       //  // Unstable assertion: assertEquals(false, node0.isFunction());
//       //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
//       //  // Unstable assertion: assertEquals(false, node0.isAssign());
//       //  // Unstable assertion: assertEquals(false, node0.isParamList());
//       //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
//       //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
//       //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
//       //  // Unstable assertion: assertEquals(false, node0.isHook());
//       //  // Unstable assertion: assertEquals(false, node0.isLabelName());
//       //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
//       //  // Unstable assertion: assertEquals(false, node0.isNull());
//       //  // Unstable assertion: assertEquals(false, node0.isGetElem());
//       //  // Unstable assertion: assertEquals(false, node0.isCatch());
//       //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
//       //  // Unstable assertion: assertEquals(false, node0.isNE());
//       //  // Unstable assertion: assertEquals(-1, node0.getCharno());
//       //  // Unstable assertion: assertEquals(false, node0.isLabel());
//       //  // Unstable assertion: assertEquals(false, node0.isDo());
//       //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
//       //  // Unstable assertion: assertEquals(false, node0.isTry());
//       //  // Unstable assertion: assertEquals(true, node0.hasChildren());
//       //  // Unstable assertion: assertEquals(false, node0.isOr());
//       //  // Unstable assertion: assertEquals(false, node0.isComma());
//       //  // Unstable assertion: assertEquals(false, node0.isAdd());
//       //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
//       //  // Unstable assertion: assertEquals(true, node0.hasOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.isCall());
//       //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
//       //  // Unstable assertion: assertEquals(-1, node0.getLineno());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       //  // Unstable assertion: assertEquals(false, node0.isVoid());
//       //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
//       //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
//       //  // Unstable assertion: assertEquals(false, node0.isGetProp());
//       //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       //  // Unstable assertion: assertEquals(false, node0.isSwitch());
//       //  // Unstable assertion: assertEquals(false, node0.isCast());
//       //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
//       //  // Unstable assertion: assertEquals(false, node0.isString());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
//       //  // Unstable assertion: assertEquals(false, node0.isTrue());
//       //  // Unstable assertion: assertEquals(false, node0.isBlock());
//       //  // Unstable assertion: assertEquals(false, node0.isNew());
//       //  // Unstable assertion: assertEquals(false, node0.isNot());
//       //  // Unstable assertion: assertEquals(false, node0.isAnd());
//       //  // Unstable assertion: assertEquals(false, node0.isContinue());
//       //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
//       //  // Unstable assertion: assertEquals(false, node0.isThis());
//       //  // Unstable assertion: assertEquals(false, node0.isRegExp());
//       //  // Unstable assertion: assertEquals(false, node0.isEmpty());
//       //  // Unstable assertion: assertEquals(false, node0.isFalse());
//       //  // Unstable assertion: assertEquals(132, node0.getType());
//       //  // Unstable assertion: assertEquals(false, node0.isThrow());
//       //  // Unstable assertion: assertEquals(false, node0.isVar());
//       //  // Unstable assertion: assertEquals("", simpleSourceFile0.getName());
//       //  // Unstable assertion: assertEquals("", simpleSourceFile0.toString());
//       //  // Unstable assertion: assertEquals(false, simpleSourceFile0.isExtern());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(node0);
//   }

  @Test
  public void test3() {}
//   @Test
//   public void test3()  throws Throwable  {
//       int int0 = (-5);
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-5, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-5, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       
//       AstRoot astRoot1 = (AstRoot)astRoot0.setType(int0);
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getLineno());
//       //  // Unstable assertion: assertNull(astRoot1.getSourceName());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getEncodedSourceStart());
//       //  // Unstable assertion: assertNull(astRoot1.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot1.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-5, astRoot1.getPosition());
//       //  // Unstable assertion: assertEquals("-5", astRoot1.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot1.depth());
//       //  // Unstable assertion: assertEquals(false, astRoot1.hasChildren());
//       //  // Unstable assertion: assertEquals(-5, astRoot1.getAbsolutePosition());
//       //  // Unstable assertion: assertNull(astRoot1.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-5, astRoot1.getType());
//       //  // Unstable assertion: assertEquals(false, astRoot1.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot1.getRegexpCount());
//       //  // Unstable assertion: assertEquals(1, astRoot1.getLength());
//       //  // Unstable assertion: assertEquals(0, astRoot1.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals("-5", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-5, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-5, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-5, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertSame(astRoot1, astRoot0);
//       //  // Unstable assertion: assertSame(astRoot0, astRoot1);
//       //  // Unstable assertion: assertNotNull(astRoot1);
//       
//       String string0 = "jvK";
//       boolean boolean0 = true;
//       SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
//       //  // Unstable assertion: assertEquals("jvK", simpleSourceFile0.getName());
//       //  // Unstable assertion: assertEquals(true, simpleSourceFile0.isExtern());
//       //  // Unstable assertion: assertEquals("jvK", simpleSourceFile0.toString());
//       //  // Unstable assertion: assertNotNull(simpleSourceFile0);
//       
//       Locale locale0 = Locale.PRC;
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertNotNull(locale0);
//       
//       Set<String> set0 = locale0.getUnicodeLocaleAttributes();
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertNotNull(set0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
//       Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertNotNull(config0);
//       
//       Context context0 = Context.enter();
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(context0);
//       
//       ErrorCollector errorCollector0 = (ErrorCollector)context0.getErrorReporter();
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(errorCollector0);
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) simpleSourceFile0, string0, config0, (ErrorReporter) errorCollector0);
//        //  fail("Expecting exception: IllegalStateException");
//        // Unstable assertion
//       } catch(IllegalStateException e) {
//          //
//          // -5
//          //
//       }
//   }

  @Test
  public void test4() {}
//   @Test
//   public void test4()  throws Throwable  {
//       int int0 = 12;
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       
//       String string0 = "l";
//       boolean boolean0 = true;
//       SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
//       //  // Unstable assertion: assertEquals("l", simpleSourceFile0.toString());
//       //  // Unstable assertion: assertEquals(true, simpleSourceFile0.isExtern());
//       //  // Unstable assertion: assertEquals("l", simpleSourceFile0.getName());
//       //  // Unstable assertion: assertNotNull(simpleSourceFile0);
//       
//       Locale locale0 = Locale.PRC;
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertNotNull(locale0);
//       
//       Set<String> set0 = locale0.getUnicodeLocaleAttributes();
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertNotNull(set0);
//       
//       ObjectProperty objectProperty0 = new ObjectProperty();
//       //  // Unstable assertion: assertEquals(103, objectProperty0.getType());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getLineno());
//       //  // Unstable assertion: assertNull(objectProperty0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isSetter());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.hasChildren());
//       //  // Unstable assertion: assertEquals("103", objectProperty0.toString());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getOperatorPosition());
//       //  // Unstable assertion: assertEquals(1, objectProperty0.getLength());
//       //  // Unstable assertion: assertEquals(0, objectProperty0.depth());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isGetter());
//       //  // Unstable assertion: assertNotNull(objectProperty0);
//       
//       astRoot0.addChildToBack((Node) objectProperty0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(12, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(103, objectProperty0.getType());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getLineno());
//       //  // Unstable assertion: assertNull(objectProperty0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isSetter());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.hasChildren());
//       //  // Unstable assertion: assertEquals("103", objectProperty0.toString());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getOperatorPosition());
//       //  // Unstable assertion: assertEquals(1, objectProperty0.getLength());
//       //  // Unstable assertion: assertEquals(0, objectProperty0.depth());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isGetter());
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
//       Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertNotNull(config0);
//       
//       Context context0 = Context.enter();
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(context0);
//       
//       ErrorCollector errorCollector0 = (ErrorCollector)context0.getErrorReporter();
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isSealed());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertTrue(context0.generateObserverCount);
//       //  // Unstable assertion: assertNotNull(errorCollector0);
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) simpleSourceFile0, string0, config0, (ErrorReporter) errorCollector0);
//        //  fail("Expecting exception: IllegalStateException");
//        // Unstable assertion
//       } catch(IllegalStateException e) {
//          //
//          // 103
//          //
//       }
//   }
}
