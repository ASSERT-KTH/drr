/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 22:24:55 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import com.google.debugging.sourcemap.FilePosition;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.rhino.Node;
import java.io.File;
import java.util.LinkedList;
import java.util.List;



import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.junit.runner.RunWith;


public class SourceMapEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "Ac(L\\/hx/_Rs(W??6)";
      int int0 = 38;
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isReturn());
      assertEquals(38, node0.getType());
      assertEquals(-2147483610, node0.getSourceOffset());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(38, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(155686, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(38, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(true, node0.isQualifiedName());
      assertNotNull(node0);
      
      LinkedList<SourceMap.LocationMapping> linkedList0 = new LinkedList<SourceMap.LocationMapping>();
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertNotNull(linkedList0);
      
      sourceMap0.setPrefixMappings((List<SourceMap.LocationMapping>) linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      
      node0.setSourceFileForTesting(string0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isReturn());
      assertEquals(38, node0.getType());
      assertEquals(-2147483610, node0.getSourceOffset());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(38, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isUnscopedQualifiedName());
      assertEquals("Ac(L\\/hx/_Rs(W??6)", node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(155686, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(38, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(true, node0.isQualifiedName());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertEquals(38, filePosition0.getColumn());
      assertEquals(38, filePosition0.getLine());
      assertNotNull(filePosition0);
      
      String string1 = "f";
      assertNotSame(string1, string0);
      
      SourceMap.LocationMapping sourceMap_LocationMapping0 = new SourceMap.LocationMapping(string1, string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNotNull(sourceMap_LocationMapping0);
      
      linkedList0.addFirst(sourceMap_LocationMapping0);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertEquals(1, linkedList0.size());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string0, string1);
      assertEquals(38, filePosition0.getColumn());
      assertEquals(38, filePosition0.getLine());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isReturn());
      assertEquals(38, node0.getType());
      assertEquals(-2147483610, node0.getSourceOffset());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(38, node0.getCharno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isUnscopedQualifiedName());
      assertEquals("Ac(L\\/hx/_Rs(W??6)", node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(155686, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(38, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(true, node0.isQualifiedName());
  }

  @Test
  public void test01()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V1;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "com.google.avcript.jcomp.SourceMap$DetailLevel";
      int int0 = 15;
      LinkedList<SourceMap.LocationMapping> linkedList0 = new LinkedList<SourceMap.LocationMapping>();
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      sourceMap0.setPrefixMappings((List<SourceMap.LocationMapping>) linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(-2147483633, node0.getSourceOffset());
      assertEquals(61455, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(15, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(15, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertNotNull(node0);
      
      node0.setSourceFileForTesting(string0);
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(-2147483633, node0.getSourceOffset());
      assertEquals(61455, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals("com.google.avcript.jcomp.SourceMap$DetailLevel", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(15, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(15, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertEquals(15, filePosition0.getLine());
      assertEquals(15, filePosition0.getColumn());
      assertNotNull(filePosition0);
      
      SourceMap.LocationMapping sourceMap_LocationMapping0 = new SourceMap.LocationMapping(string0, string0);
      assertNotNull(sourceMap_LocationMapping0);
      
      linkedList0.addFirst(sourceMap_LocationMapping0);
      assertEquals(1, linkedList0.size());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(-2147483633, node0.getSourceOffset());
      assertEquals(61455, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals("com.google.avcript.jcomp.SourceMap$DetailLevel", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(15, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(15, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(15, filePosition0.getLine());
      assertEquals(15, filePosition0.getColumn());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(-2147483633, node0.getSourceOffset());
      assertEquals(61455, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals("com.google.avcript.jcomp.SourceMap$DetailLevel", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(15, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(15, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(15, filePosition0.getLine());
      assertEquals(15, filePosition0.getColumn());
  }

  @Test
  public void test02()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V3;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = ".`b2Fns/1#qDN*";
      int int0 = 3753;
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(3753, node0.getCharno());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(-2147479895, node0.getSourceOffset());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(15376041, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThis());
      assertEquals(3753, node0.getLineno());
      assertEquals(false, node0.isAnd());
      assertNotNull(node0);
      
      node0.setSourceFileForTesting(string0);
      assertEquals(3753, node0.getCharno());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(-2147479895, node0.getSourceOffset());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(".`b2Fns/1#qDN*", node0.getSourceFileName());
      assertEquals(15376041, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThis());
      assertEquals(3753, node0.getLineno());
      assertEquals(false, node0.isAnd());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertEquals(3753, filePosition0.getLine());
      assertEquals(3753, filePosition0.getColumn());
      assertNotNull(filePosition0);
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(3753, filePosition0.getLine());
      assertEquals(3753, filePosition0.getColumn());
      assertEquals(3753, node0.getCharno());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(-2147479895, node0.getSourceOffset());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(".`b2Fns/1#qDN*", node0.getSourceFileName());
      assertEquals(15376041, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThis());
      assertEquals(3753, node0.getLineno());
      assertEquals(false, node0.isAnd());
  }

  @Test
  public void test03()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "m";
      int int0 = (-1529);
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertNotNull(node0);
      
      node0.setSourceFileForTesting(string0);
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals("m", node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertEquals(-1529, filePosition0.getLine());
      assertEquals(-1529, filePosition0.getColumn());
      assertNotNull(filePosition0);
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(-1529, filePosition0.getLine());
      assertEquals(-1529, filePosition0.getColumn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals("m", node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
  }

  @Test
  public void test04()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V1;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "iW(B\\d!nhwD(|[";
      int int0 = (-2560);
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertNotNull(node0);
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertEquals(-2560, filePosition0.getColumn());
      assertEquals(-2560, filePosition0.getLine());
      assertNotNull(filePosition0);
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(-2560, filePosition0.getColumn());
      assertEquals(-2560, filePosition0.getLine());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
  }

  @Test
  public void test05() {}
//   @Test
//   public void test05()  throws Throwable  {
//       SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
//       assertEquals(1, sourceMap_DetailLevel0.ordinal());
//       assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
//       assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
//       
//       int int0 = 4;
//       String string0 = "*M*4";
//       Node node0 = Node.newString(string0);
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertNull(node0.getSourceFileName());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isNumber());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(2147483647, node0.getSourceOffset());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isNot());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isAdd());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(-1, node0.getSourcePosition());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCase());
//       assertNotNull(node0);
//       
//       Node node1 = new Node(int0, node0, node0, node0);
//       assertFalse(node0.equals((Object)node1));
//       assertFalse(node1.equals((Object)node0));
//       assertNotSame(node0, node1);
//       assertNotSame(node1, node0);
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertNull(node0.getSourceFileName());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isNumber());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(2147483647, node0.getSourceOffset());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isNot());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isAdd());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(-1, node0.getSourcePosition());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node1.isOr());
//       assertEquals(false, node1.isAnd());
//       assertEquals(false, node1.isString());
//       assertEquals(false, node1.isHook());
//       assertEquals(false, node1.isCall());
//       assertEquals(false, node1.isQualifiedName());
//       assertEquals(false, node1.isName());
//       assertEquals(false, node1.isNumber());
//       assertEquals(false, node1.isVarArgs());
//       assertEquals(false, node1.isDo());
//       assertEquals(false, node1.isGetterDef());
//       assertEquals(false, node1.hasMoreThanOneChild());
//       assertNull(node1.getSourceFileName());
//       assertEquals(false, node1.isThrow());
//       assertEquals(false, node1.isTrue());
//       assertEquals(false, node1.isDec());
//       assertEquals(false, node1.isObjectLit());
//       assertEquals(true, node1.hasChildren());
//       assertEquals(false, node1.isEmpty());
//       assertEquals(0, node1.getLength());
//       assertEquals(-1, node1.getCharno());
//       assertEquals(false, node1.isParamList());
//       assertEquals(false, node1.isDefaultCase());
//       assertEquals(false, node1.isLabelName());
//       assertEquals(false, node1.isQuotedString());
//       assertEquals(false, node1.isFalse());
//       assertEquals(false, node1.isNot());
//       assertEquals(false, node1.isOptionalArg());
//       assertEquals(false, node1.isGetProp());
//       assertEquals(false, node1.isLabel());
//       assertEquals(false, node1.isArrayLit());
//       assertEquals(2147483647, node1.getSourceOffset());
//       assertEquals(4, node1.getType());
//       assertEquals(false, node1.isSyntheticBlock());
//       assertEquals(false, node1.isCatch());
//       assertEquals(-1, node1.getSourcePosition());
//       assertEquals(false, node1.isCase());
//       assertEquals(false, node1.isVoid());
//       assertEquals(false, node1.isSwitch());
//       assertEquals(0, node1.getSideEffectFlags());
//       assertEquals(false, node1.isScript());
//       assertEquals(false, node1.isNoSideEffectsCall());
//       assertEquals(false, node1.isTry());
//       assertEquals(false, node1.isFor());
//       assertEquals(false, node1.isIf());
//       assertEquals(false, node1.isSetterDef());
//       assertEquals(false, node1.isOnlyModifiesThisCall());
//       assertEquals(false, node1.wasEmptyNode());
//       assertEquals(false, node1.isUnscopedQualifiedName());
//       assertEquals(false, node1.isAssign());
//       assertEquals(false, node1.isNew());
//       assertEquals(-1, node1.getLineno());
//       assertEquals(false, node1.isThis());
//       assertEquals(false, node1.isExprResult());
//       assertEquals(true, node1.hasOneChild());
//       assertEquals(false, node1.isGetElem());
//       assertEquals(false, node1.isLocalResultCall());
//       assertEquals(1, node1.getChildCount());
//       assertEquals(true, node1.isReturn());
//       assertEquals(false, node1.isInc());
//       assertEquals(false, node1.isFromExterns());
//       assertEquals(false, node1.isAdd());
//       assertEquals(false, node1.isRegExp());
//       assertEquals(false, node1.isBlock());
//       assertEquals(false, node1.isVar());
//       assertEquals(false, node1.isComma());
//       assertEquals(false, node1.isFunction());
//       assertEquals(false, node1.isNull());
//       assertNotNull(node1);
//       
//       boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
//       assertFalse(node0.equals((Object)node1));
//       assertFalse(boolean0);
//       assertNotSame(node0, node1);
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertNull(node0.getSourceFileName());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isNumber());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(2147483647, node0.getSourceOffset());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isNot());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isAdd());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(-1, node0.getSourcePosition());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCase());
//       assertEquals(1, sourceMap_DetailLevel0.ordinal());
//       assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
//       assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
//   }

  @Test
  public void test06()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      
      int int0 = 4;
      String string0 = "*M*4";
      Node node0 = Node.newString(string0);
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, node0, node0, node0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQualifiedName());
      assertEquals(false, node1.isVarArgs());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isIf());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isThis());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isScript());
      assertEquals(1, node1.getChildCount());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isUnscopedQualifiedName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(2147483647, node1.getSourceOffset());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isThrow());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isGetterDef());
      assertEquals(true, node1.isReturn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isInc());
      assertEquals(4, node1.getType());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertNotNull(node1);
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node1);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertFalse(boolean0);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQualifiedName());
      assertEquals(false, node1.isVarArgs());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isIf());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isThis());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isScript());
      assertEquals(1, node1.getChildCount());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isUnscopedQualifiedName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(2147483647, node1.getSourceOffset());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isThrow());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isGetterDef());
      assertEquals(true, node1.isReturn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isInc());
      assertEquals(4, node1.getType());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
  }

  @Test
  public void test07()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      
      String string0 = "";
      int int0 = 35;
      Node node0 = Node.newString(string0);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.isString());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, node0, node0, node0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isQualifiedName());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getLength());
      assertEquals(-2147483613, node1.getSourceOffset());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isName());
      assertEquals(1, node1.getChildCount());
      assertEquals(35, node1.getCharno());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isDec());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(143395, node1.getSourcePosition());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCatch());
      assertNull(node1.getSourceFileName());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isThrow());
      assertEquals(35, node1.getType());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.isGetElem());
      assertEquals(false, node1.isVarArgs());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBlock());
      assertEquals(35, node1.getLineno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isUnscopedQualifiedName());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.isString());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertNotNull(node1);
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertFalse(node0.equals((Object)node1));
      assertTrue(boolean0);
      assertNotSame(node0, node1);
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.isString());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isName());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
  }

  @Test
  public void test08()  throws Throwable  {
      String string0 = "Ac(L\\/hx/_Rs(W??6)";
      int int0 = 38;
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      
      Node[] nodeArray0 = new Node[9];
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTry());
      assertEquals(38, node0.getCharno());
      assertEquals(true, node0.isQualifiedName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertEquals(38, node0.getLineno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(155686, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-2147483610, node0.getSourceOffset());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertNotNull(node0);
      
      nodeArray0[0] = node0;
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(true, nodeArray0[0].isUnscopedQualifiedName());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(155686, nodeArray0[0].getSourcePosition());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(false, nodeArray0[0].isAdd());
      assertNull(nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(-2147483610, nodeArray0[0].getSourceOffset());
      assertEquals(false, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(38, nodeArray0[0].getType());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(true, nodeArray0[0].isQualifiedName());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertEquals(38, nodeArray0[0].getCharno());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(true, nodeArray0[0].isName());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(false, nodeArray0[0].isScript());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(false, nodeArray0[0].isThrow());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(0, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isCall());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertEquals(38, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isSyntheticBlock());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTry());
      assertEquals(38, node0.getCharno());
      assertEquals(true, node0.isQualifiedName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertEquals(38, node0.getLineno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(155686, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-2147483610, node0.getSourceOffset());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFunction());
      assertNotNull(nodeArray0[0]);
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(nodeArray0[0]);
      assertTrue(boolean0);
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
  }

  @Test
  public void test09()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      
      String string0 = "";
      int int0 = 35;
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isCase());
      assertEquals(35, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(143395, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-2147483613, node0.getSourceOffset());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSetterDef());
      assertEquals(35, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(35, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertNotNull(node0);
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertTrue(boolean0);
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(false, node0.isCase());
      assertEquals(35, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(143395, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-2147483613, node0.getSourceOffset());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSetterDef());
      assertEquals(35, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(35, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = "F*";
      int int0 = 37;
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      
      Node[] nodeArray0 = new Node[20];
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(151589, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(-2147483611, node0.getSourceOffset());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetProp());
      assertEquals(37, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isCall());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(37, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNotNull(node0);
      
      nodeArray0[0] = node0;
      assertEquals(151589, nodeArray0[0].getSourcePosition());
      assertEquals(false, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(false, nodeArray0[0].isScript());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(37, nodeArray0[0].getCharno());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(0, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(false, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertNull(nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(-2147483611, nodeArray0[0].getSourceOffset());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(false, nodeArray0[0].isAdd());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(false, nodeArray0[0].isUnscopedQualifiedName());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(37, nodeArray0[0].getType());
      assertEquals(true, nodeArray0[0].isCall());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(37, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(false, nodeArray0[0].isQualifiedName());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isSyntheticBlock());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isName());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(151589, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(-2147483611, node0.getSourceOffset());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetProp());
      assertEquals(37, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isCall());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(37, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNotNull(nodeArray0[0]);
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(nodeArray0[0]);
      assertTrue(boolean0);
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = "7`}*";
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      MockFile mockFile0 = new MockFile(string0);
      assertNotNull(mockFile0);
      
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
      assertNotNull(mockFileWriter0);
      
      sourceMap0.appendTo((Appendable) mockFileWriter0, string0);
  }

  @Test
  public void test12() {}
//   @Test
//   public void test12()  throws Throwable  {
//       SourceMap.Format sourceMap_Format0 = SourceMap.Format.V2;
//       SourceMap sourceMap0 = sourceMap_Format0.getInstance();
//       assertNotNull(sourceMap0);
//       
//       int int0 = 35;
//       sourceMap0.setStartingPosition(int0, int0);
//   }

  @Test
  public void test13()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      
      Node node0 = null;
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertTrue(boolean0);
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      sourceMap0.validate(boolean0);
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
      assertEquals("ALL", sourceMap_DetailLevel0.name());
  }

  @Test
  public void test14()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V1;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "iW(B\\d!nhwD(|[";
      sourceMap0.setWrapperPrefix(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V2;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      sourceMap0.reset();
  }
}
