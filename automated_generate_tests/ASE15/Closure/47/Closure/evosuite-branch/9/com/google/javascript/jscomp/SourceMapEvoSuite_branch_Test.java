/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 12 00:10:15 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import com.google.debugging.sourcemap.FilePosition;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import java.io.StringWriter;
import java.util.LinkedList;
import java.util.List;



import org.junit.runner.RunWith;


public class SourceMapEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      double double0 = (-1089.349880155434);
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      
      int int0 = 163;
      LinkedList<SourceMap.LocationMapping> linkedList0 = new LinkedList<SourceMap.LocationMapping>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      
      String string0 = "sjQaJ^";
      SourceMap.LocationMapping sourceMap_LocationMapping0 = new SourceMap.LocationMapping(string0, string0);
      assertNotNull(sourceMap_LocationMapping0);
      
      boolean boolean0 = linkedList0.add(sourceMap_LocationMapping0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      
      String string1 = "U+PLE";
      assertNotSame(string1, string0);
      
      sourceMap0.setPrefixMappings((List<SourceMap.LocationMapping>) linkedList0);
      assertEquals(1, linkedList0.size());
      
      node0.setLineno(int0);
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(163, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(-2147483648, node0.getSourceOffset());
      
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string1, boolean0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(simpleSourceFile0);
      assertEquals("U+PLE", simpleSourceFile0.getName());
      assertEquals("U+PLE", simpleSourceFile0.toString());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals(1, linkedList0.size());
      
      node0.setStaticSourceFile((StaticSourceFile) simpleSourceFile0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(163, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isFromExterns());
      assertEquals("U+PLE", node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals("U+PLE", simpleSourceFile0.getName());
      assertEquals("U+PLE", simpleSourceFile0.toString());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals(1, linkedList0.size());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertNotNull(filePosition0);
      assertEquals(163, filePosition0.getLine());
      assertEquals(163, filePosition0.getColumn());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(163, filePosition0.getLine());
      assertEquals(163, filePosition0.getColumn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(163, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isScript());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isFromExterns());
      assertEquals("U+PLE", node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(-2147483648, node0.getSourceOffset());
  }

  @Test
  public void test01()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      double double0 = (-1089.349880155434);
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      
      int int0 = 163;
      LinkedList<SourceMap.LocationMapping> linkedList0 = new LinkedList<SourceMap.LocationMapping>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      
      String string0 = "sjQaJ^";
      SourceMap.LocationMapping sourceMap_LocationMapping0 = new SourceMap.LocationMapping(string0, string0);
      assertNotNull(sourceMap_LocationMapping0);
      
      boolean boolean0 = linkedList0.add(sourceMap_LocationMapping0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      
      sourceMap0.setPrefixMappings((List<SourceMap.LocationMapping>) linkedList0);
      assertEquals(1, linkedList0.size());
      
      node0.setLineno(int0);
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(163, node0.getLineno());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
      assertNotNull(simpleSourceFile0);
      assertEquals(1, linkedList0.size());
      assertEquals("sjQaJ^", simpleSourceFile0.toString());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals("sjQaJ^", simpleSourceFile0.getName());
      
      node0.setStaticSourceFile((StaticSourceFile) simpleSourceFile0);
      assertEquals(1, linkedList0.size());
      assertEquals("sjQaJ^", simpleSourceFile0.toString());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals("sjQaJ^", simpleSourceFile0.getName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(163, node0.getLineno());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals("sjQaJ^", node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertNotNull(filePosition0);
      assertEquals(163, filePosition0.getLine());
      assertEquals(163, filePosition0.getColumn());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(163, filePosition0.getLine());
      assertEquals(163, filePosition0.getColumn());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(163, node0.getLineno());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals("sjQaJ^", node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(163, filePosition0.getLine());
      assertEquals(163, filePosition0.getColumn());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(163, node0.getLineno());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(667648, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals("sjQaJ^", node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
  }

  @Test
  public void test02()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V3;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      double double0 = 148.56549636976095;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      
      int int0 = 8220;
      node0.setLineno(int0);
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(33669120, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(8220, node0.getLineno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      
      String string0 = "";
      boolean boolean0 = true;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
      assertNotNull(simpleSourceFile0);
      assertEquals("", simpleSourceFile0.getName());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals("", simpleSourceFile0.toString());
      
      node0.setStaticSourceFile((StaticSourceFile) simpleSourceFile0);
      assertEquals("", simpleSourceFile0.getName());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals("", simpleSourceFile0.toString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(33669120, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(8220, node0.getLineno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals("", node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertNotNull(filePosition0);
      assertEquals(8220, filePosition0.getColumn());
      assertEquals(8220, filePosition0.getLine());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(-2147483648, node0.getSourceOffset());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(33669120, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(8220, node0.getLineno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals("", node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      assertEquals(8220, filePosition0.getColumn());
      assertEquals(8220, filePosition0.getLine());
  }

  @Test
  public void test03()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      double double0 = (-1089.349880155434);
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isName());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isNumber());
      
      int int0 = 163;
      LinkedList<SourceMap.LocationMapping> linkedList0 = new LinkedList<SourceMap.LocationMapping>();
      assertNotNull(linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      
      String string0 = "sjQaJ^";
      SourceMap.LocationMapping sourceMap_LocationMapping0 = new SourceMap.LocationMapping(string0, string0);
      assertNotNull(sourceMap_LocationMapping0);
      
      boolean boolean0 = linkedList0.add(sourceMap_LocationMapping0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
      assertNotNull(simpleSourceFile0);
      assertEquals("sjQaJ^", simpleSourceFile0.getName());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals("sjQaJ^", simpleSourceFile0.toString());
      assertEquals(1, linkedList0.size());
      
      node0.setStaticSourceFile((StaticSourceFile) simpleSourceFile0);
      assertEquals("sjQaJ^", simpleSourceFile0.getName());
      assertEquals(true, simpleSourceFile0.isExtern());
      assertEquals("sjQaJ^", simpleSourceFile0.toString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isName());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals("sjQaJ^", node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isNumber());
      assertEquals(1, linkedList0.size());
      
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertNotNull(filePosition0);
      assertEquals(163, filePosition0.getColumn());
      assertEquals(163, filePosition0.getLine());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(163, filePosition0.getColumn());
      assertEquals(163, filePosition0.getLine());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isFromExterns());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isName());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals("sjQaJ^", node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isNumber());
  }

  @Test
  public void test04()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V2;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "5_F3~USRU~&\\";
      Node node0 = Node.newString(string0);
      assertNotNull(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      
      int int0 = (-2518);
      FilePosition filePosition0 = new FilePosition(int0, int0);
      assertNotNull(filePosition0);
      assertEquals(-2518, filePosition0.getLine());
      assertEquals(-2518, filePosition0.getColumn());
      
      sourceMap0.addMapping(node0, filePosition0, filePosition0);
      assertEquals(-1, node0.getLineno());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(-2518, filePosition0.getLine());
      assertEquals(-2518, filePosition0.getColumn());
  }

  @Test
  public void test05()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      
      double double0 = 0.0;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertFalse(boolean0);
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
  }

  @Test
  public void test06()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      
      int int0 = (-42);
      String string0 = "ic ^<";
      Node node0 = Node.newString(string0);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      
      Node node1 = new Node(int0, node0, node0, node0, int0, int0);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isQualifiedName());
      assertEquals(false, node1.isUnscopedQualifiedName());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDo());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isGetProp());
      assertEquals(2147483647, node1.getSourceOffset());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isRegExp());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFor());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(-42, node1.getType());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isScript());
      assertEquals(0, node1.getSideEffectFlags());
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertNotSame(node0, node1);
      assertFalse(node0.equals((Object)node1));
      assertFalse(boolean0);
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
  }

  @Test
  public void test07()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      
      int int0 = 148;
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(39, node0.getType());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      
      Node node1 = new Node(int0, node0, node0, node0, node0, int0, int0);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(39, node0.getType());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node1.isSetterDef());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isUnscopedQualifiedName());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isObjectLit());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isGetElem());
      assertEquals(148, node1.getLineno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isComma());
      assertEquals(148, node1.getCharno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(-2147483500, node1.getSourceOffset());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isQualifiedName());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(148, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isThrow());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isGetProp());
      assertEquals(1, node1.getChildCount());
      assertEquals(606356, node1.getSourcePosition());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isQuotedString());
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node1);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertTrue(boolean0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(39, node0.getType());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals(true, node1.isSetterDef());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isUnscopedQualifiedName());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isObjectLit());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isGetElem());
      assertEquals(148, node1.getLineno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isComma());
      assertEquals(148, node1.getCharno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(-2147483500, node1.getSourceOffset());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isQualifiedName());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(148, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isThrow());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isGetProp());
      assertEquals(1, node1.getChildCount());
      assertEquals(606356, node1.getSourcePosition());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isQuotedString());
  }

  @Test
  public void test08()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
      
      int int0 = 37;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(true, node0.isCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertTrue(boolean0);
      assertEquals(true, node0.isCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(2147483647, node0.getSourceOffset());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQualifiedName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isUnscopedQualifiedName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.toString());
      assertEquals(1, sourceMap_DetailLevel0.ordinal());
      assertEquals("SYMBOLS", sourceMap_DetailLevel0.name());
  }

  @Test
  public void test09()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V3;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      int int0 = 12;
      StringWriter stringWriter0 = new StringWriter(int0);
      assertNotNull(stringWriter0);
      assertEquals("", stringWriter0.toString());
      
      String string0 = "ja@n!hQU=#%L";
      sourceMap0.appendTo((Appendable) stringWriter0, string0);
      assertEquals("{\n\"version\":3,\n\"file\":\"ja@n!hQU=#%L\",\n\"lineCount\":1,\n\"mappings\":\";\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V3;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      int int0 = 0;
      sourceMap0.setStartingPosition(int0, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V3;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
      
      boolean boolean0 = sourceMap_DetailLevel0.equals((Object) sourceMap_DetailLevel0);
      assertTrue(boolean0);
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
      
      sourceMap0.validate(boolean0);
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
  }

  @Test
  public void test12()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V2;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      String string0 = "5_F3~USRU~&\\";
      sourceMap0.setWrapperPrefix(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.DEFAULT;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
      
      sourceMap0.reset();
  }

  @Test
  public void test14()  throws Throwable  {
      SourceMap.Format sourceMap_Format0 = SourceMap.Format.V1;
      SourceMap sourceMap0 = sourceMap_Format0.getInstance();
      assertNotNull(sourceMap0);
  }

  @Test
  public void test15()  throws Throwable  {
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
      
      Node node0 = null;
      boolean boolean0 = sourceMap_DetailLevel0.apply(node0);
      assertTrue(boolean0);
      assertEquals("ALL", sourceMap_DetailLevel0.name());
      assertEquals(0, sourceMap_DetailLevel0.ordinal());
      assertEquals("ALL", sourceMap_DetailLevel0.toString());
  }
}
