/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:36:48 GMT 2014
 */

package com.google.javascript.jscomp.parsing;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocToken;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.BreakStatement;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.LetNode;
import com.google.javascript.rhino.head.ast.ObjectProperty;
import com.google.javascript.rhino.head.ast.SwitchCase;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import java.nio.charset.Charset;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;



import org.junit.runner.RunWith;


public class JsDocInfoParserEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      String string0 = "`W_q$]xc.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isGetElem();
      assertFalse(boolean0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.EOL;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
      assertNull(node1);
      
      boolean boolean1 = jsDocInfoParser0.parse();
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(5, node0.getLength());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChangeTime());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFor());
  }

  @Test
  public void test01()  throws Throwable  {
      String string0 = "[";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertNull(node0);
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = "(Z)V";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(301, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isReturn());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertNotNull(node0);
  }

  @Test
  public void test03()  throws Throwable  {
      String string0 = "{.W,):nG[s]g3'Tc-|";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertNull(node0);
  }

  @Test
  public void test04()  throws Throwable  {
      String string0 = "*729";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(302, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertNotNull(node0);
  }

  @Test
  public void test05() {}
//   @Test
//   public void test05()  throws Throwable  {
//       String string0 = "jO_6>HqhO7c]S/Td|T";
//       int int0 = (-2408);
//       JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0, int0);
//       assertNotNull(jsDocTokenStream0);
//       
//       BreakStatement breakStatement0 = new BreakStatement();
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals("120", breakStatement0.toString());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNotNull(breakStatement0);
//       
//       boolean boolean0 = JsDocTokenStream.isJSSpace(int0);
//       assertFalse(boolean0);
//       
//       Comment comment0 = breakStatement0.getJsDocNode();
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals("120", breakStatement0.toString());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNull(comment0);
//       
//       LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertNotNull(linkedHashSet0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
//       Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertNotNull(config0);
//       
//       Node node0 = null;
//       Context context0 = Context.getCurrentContext();
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertNotNull(context0);
//       assertTrue(context0.generateObserverCount);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertNotNull(toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals("120", breakStatement0.toString());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNotNull(jsDocInfoParser0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocToken jsDocToken0 = jsDocTokenStream0.getJsDocToken();
//       assertEquals("STRING", jsDocToken0.name());
//       assertEquals("STRING", jsDocToken0.toString());
//       assertEquals(4, jsDocToken0.ordinal());
//       
//       JsDocToken jsDocToken1 = JsDocToken.QMARK;
//       assertFalse(jsDocToken1.equals((Object)jsDocToken0));
//       assertNotSame(jsDocToken1, jsDocToken0);
//       
//       Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken1);
//       assertFalse(jsDocToken1.equals((Object)jsDocToken0));
//       assertEquals(false, node1.isIn());
//       assertEquals(false, node1.isLabel());
//       assertEquals(false, node1.isReturn());
//       assertEquals(false, node1.isInc());
//       assertEquals(false, node1.isCall());
//       assertEquals(false, node1.isIf());
//       assertEquals(false, node1.isOnlyModifiesThisCall());
//       assertEquals(false, node1.isFunction());
//       assertEquals(false, node1.isName());
//       assertEquals(false, node1.isVoid());
//       assertEquals(false, node1.isNot());
//       assertEquals(false, node1.isHook());
//       assertEquals(true, node1.mayMutateArguments());
//       assertEquals(false, node1.isAssign());
//       assertEquals(false, node1.isSetterDef());
//       assertEquals(false, node1.isBreak());
//       assertEquals(false, node1.isCatch());
//       assertEquals(false, node1.isLabelName());
//       assertEquals(false, node1.isDec());
//       assertEquals(false, node1.isFromExterns());
//       assertEquals(0, node1.getChildCount());
//       assertEquals(false, node1.isNoSideEffectsCall());
//       assertEquals(false, node1.isVar());
//       assertEquals(304, node1.getType());
//       assertEquals(-1, node1.getSourcePosition());
//       assertEquals(false, node1.isLocalResultCall());
//       assertEquals(false, node1.hasMoreThanOneChild());
//       assertEquals(false, node1.isNE());
//       assertEquals(false, node1.isParamList());
//       assertEquals(false, node1.hasChildren());
//       assertEquals(false, node1.isAnd());
//       assertEquals(false, node1.isExprResult());
//       assertEquals(false, node1.isBlock());
//       assertEquals(false, node1.wasEmptyNode());
//       assertEquals(false, node1.isGetElem());
//       assertEquals(false, node1.isString());
//       assertEquals(false, node1.isDebugger());
//       assertEquals(false, node1.isWhile());
//       assertEquals(false, node1.isDo());
//       assertEquals(false, node1.isAdd());
//       assertEquals(false, node1.isCase());
//       assertEquals(0, node1.getChangeTime());
//       assertEquals(false, node1.isAssignAdd());
//       assertEquals(false, node1.isGetterDef());
//       assertEquals(false, node1.isRegExp());
//       assertEquals(false, node1.isThis());
//       assertEquals(false, node1.isScript());
//       assertEquals(false, node1.isEmpty());
//       assertEquals(false, node1.isContinue());
//       assertEquals(false, node1.isCast());
//       assertEquals(false, node1.isDefaultCase());
//       assertEquals(-1, node1.getLineno());
//       assertEquals(false, node1.isQuotedString());
//       assertEquals(false, node1.isThrow());
//       assertEquals(false, node1.isDelProp());
//       assertEquals(false, node1.isFalse());
//       assertEquals(false, node1.isTypeOf());
//       assertEquals(false, node1.isComma());
//       assertEquals(false, node1.isNew());
//       assertEquals(false, node1.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node1.isOptionalArg());
//       assertNull(node1.getSourceFileName());
//       assertEquals(false, node1.isNumber());
//       assertEquals(false, node1.isVarArgs());
//       assertEquals(false, node1.isSyntheticBlock());
//       assertEquals(false, node1.isOr());
//       assertEquals(false, node1.isGetProp());
//       assertEquals(false, node1.isNull());
//       assertEquals(false, node1.hasOneChild());
//       assertEquals(false, node1.isTry());
//       assertEquals(false, node1.isInstanceOf());
//       assertEquals(false, node1.isTrue());
//       assertEquals(false, node1.isWith());
//       assertEquals(false, node1.isStringKey());
//       assertEquals(0, node1.getLength());
//       assertEquals(0, node1.getSideEffectFlags());
//       assertEquals(false, node1.isArrayLit());
//       assertEquals(true, node1.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node1.isFor());
//       assertEquals(-1, node1.getCharno());
//       assertEquals(false, node1.isSwitch());
//       assertEquals(false, node1.isObjectLit());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals("120", breakStatement0.toString());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNotSame(jsDocToken1, jsDocToken0);
//       assertNotNull(node1);
//       assertTrue(context0.generateObserverCount);
//   }

  @Test
  public void test06()  throws Throwable  {
      String string0 = "[W_q]E*.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      
      int int0 = (-1888);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.QMARK;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isComma());
      assertEquals(1, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isInc());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isCast());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(true, node1.hasOneChild());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(true, node1.mayMutateGlobalStateOrThrow());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isOnlyModifiesArgumentsCall());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isVoid());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(0, node1.getChangeTime());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isWith());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNull());
      assertEquals(true, node1.mayMutateArguments());
      assertEquals(false, node1.isDelProp());
      assertEquals(304, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isVar());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isContinue());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isCase());
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertNotNull(node1);
  }

  @Test
  public void test07()  throws Throwable  {
      String string0 = "S\\iP|(fW(F@=";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertNull(node0);
  }

  @Test
  public void test08() {}
//   @Test
//   public void test08()  throws Throwable  {
//       String string0 = "GET";
//       int int0 = (-2408);
//       JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0, int0);
//       assertNotNull(jsDocTokenStream0);
//       
//       BreakStatement breakStatement0 = new BreakStatement();
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(1, breakStatement0.getLength());
//       assertNotNull(breakStatement0);
//       
//       boolean boolean0 = JsDocTokenStream.isJSSpace(int0);
//       assertFalse(boolean0);
//       
//       Comment comment0 = breakStatement0.getJsDocNode();
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(1, breakStatement0.getLength());
//       assertNull(comment0);
//       
//       LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, linkedHashSet0.size());
//       assertNotNull(linkedHashSet0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
//       Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, linkedHashSet0.size());
//       assertNotNull(config0);
//       
//       Node node0 = null;
//       Context context0 = Context.getCurrentContext();
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertNotNull(context0);
//       assertTrue(context0.generateObserverCount);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertNotNull(toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertNotNull(jsDocInfoParser0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocToken jsDocToken0 = jsDocTokenStream0.getJsDocToken();
//       assertEquals(4, jsDocToken0.ordinal());
//       assertEquals("STRING", jsDocToken0.name());
//       assertEquals("STRING", jsDocToken0.toString());
//       
//       JsDocToken jsDocToken1 = JsDocToken.LC;
//       assertFalse(jsDocToken1.equals((Object)jsDocToken0));
//       assertNotSame(jsDocToken1, jsDocToken0);
//       
//       Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken1);
//       assertFalse(jsDocToken1.equals((Object)jsDocToken0));
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertNotSame(jsDocToken1, jsDocToken0);
//       assertNull(node1);
//       assertTrue(context0.generateObserverCount);
//   }

  @Test
  public void test09()  throws Throwable  {
      String string0 = "[W_q]E*.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      boolean boolean1 = true;
      assertFalse(boolean1 == boolean0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean1, config_LanguageMode0, boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.BANG;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isArrayLit());
      assertEquals(0, node1.getChangeTime());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNumber());
      assertEquals(-1, node1.getSourcePosition());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isOnlyModifiesArgumentsCall());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isCatch());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isReturn());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isCall());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetterDef());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFunction());
      assertEquals(true, node1.mayMutateGlobalStateOrThrow());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isThis());
      assertEquals(306, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isTry());
      assertEquals(true, node1.mayMutateArguments());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isCast());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertNotNull(node1);
      
      Node node2 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node0.equals((Object)node2));
      assertFalse(node0.equals((Object)node1));
      assertFalse(node2.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isName());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isFalse());
      assertEquals(true, node2.mayMutateGlobalStateOrThrow());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isFor());
      assertEquals(306, node2.getType());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isCatch());
      assertEquals(1, node2.getChildCount());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isCast());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isComma());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isEmpty());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(false, node2.isDefaultCase());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isOr());
      assertEquals(0, node2.getChangeTime());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isParamList());
      assertEquals(true, node2.hasChildren());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isOnlyModifiesArgumentsCall());
      assertEquals(false, node2.isScript());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isDo());
      assertEquals(true, node2.mayMutateArguments());
      assertEquals(false, node2.isDebugger());
      assertEquals(true, node2.hasOneChild());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isCase());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotSame(node0, node2);
      assertNotSame(node0, node1);
      assertNotSame(node2, node0);
      assertNotSame(node2, node1);
      assertNotNull(node2);
      
      boolean boolean2 = jsDocInfoParser0.parse();
      assertFalse(boolean2);
      assertFalse(node0.equals((Object)node2));
      assertFalse(node0.equals((Object)node1));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotSame(node0, node2);
      assertNotSame(node0, node1);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = "[W_q]E*";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(1, node0.getCharno());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(1, node0.getCharno());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      boolean boolean1 = true;
      assertFalse(boolean1 == boolean0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean1, config_LanguageMode0, boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(1, node0.getCharno());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(1, node0.getCharno());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.ANNOTATION;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(1, node0.getCharno());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      assertNull(node1);
      
      boolean boolean2 = jsDocInfoParser0.parse();
      assertFalse(boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isComma());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(1, node0.getCharno());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = "x6bcHGR(c";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(7, node0.getLength());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(7, node0.getLength());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      boolean boolean1 = true;
      assertFalse(boolean1 == boolean0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean1, config_LanguageMode0, boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(7, node0.getLength());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(7, node0.getLength());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(7, node0.getLength());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNull(node1);
      
      boolean boolean2 = jsDocInfoParser0.parse();
      assertFalse(boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isEmpty());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(7, node0.getLength());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
  }

  @Test
  public void test12()  throws Throwable  {
      byte byte0 = (byte)3;
      String string0 = "}o@X * B<=";
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, byte0, byte0);
      assertNotNull(jsDocTokenStream0);
      
      SwitchCase switchCase0 = new SwitchCase((int) byte0, (int) byte0);
      assertEquals(true, switchCase0.isDefault());
      assertEquals(false, switchCase0.hasChildren());
      assertEquals(115, switchCase0.getType());
      assertEquals(0, switchCase0.depth());
      assertEquals("115", switchCase0.toString());
      assertEquals(3, switchCase0.getAbsolutePosition());
      assertNull(switchCase0.getJsDoc());
      assertEquals(-1, switchCase0.getLineno());
      assertEquals(3, switchCase0.getPosition());
      assertEquals(3, switchCase0.getLength());
      assertNotNull(switchCase0);
      
      Node node0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotNull(linkedHashSet0);
      
      boolean boolean0 = true;
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Comment comment0 = switchCase0.getJsDocNode();
      assertEquals(true, switchCase0.isDefault());
      assertEquals(false, switchCase0.hasChildren());
      assertEquals(115, switchCase0.getType());
      assertEquals(0, switchCase0.depth());
      assertEquals("115", switchCase0.toString());
      assertEquals(3, switchCase0.getAbsolutePosition());
      assertNull(switchCase0.getJsDoc());
      assertEquals(-1, switchCase0.getLineno());
      assertEquals(3, switchCase0.getPosition());
      assertEquals(3, switchCase0.getLength());
      assertNull(comment0);
      
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotNull(config0);
      
      ErrorReporter errorReporter0 = null;
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, switchCase0.isDefault());
      assertEquals(false, switchCase0.hasChildren());
      assertEquals(115, switchCase0.getType());
      assertEquals(0, switchCase0.depth());
      assertEquals("115", switchCase0.toString());
      assertEquals(3, switchCase0.getAbsolutePosition());
      assertNull(switchCase0.getJsDoc());
      assertEquals(-1, switchCase0.getLineno());
      assertEquals(3, switchCase0.getPosition());
      assertEquals(3, switchCase0.getLength());
      assertNotNull(jsDocInfoParser0);
      
      // Undeclared exception!
      try {
        boolean boolean1 = jsDocInfoParser0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      String string0 = "`W_q$]xc.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getCharno());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(5, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isGetElem();
      assertFalse(boolean0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getCharno());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(5, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      boolean boolean1 = true;
      assertFalse(boolean1 == boolean0);
      
      JsDocToken jsDocToken0 = jsDocTokenStream0.getJsDocToken();
      assertEquals("STRING", jsDocToken0.toString());
      assertEquals(4, jsDocToken0.ordinal());
      assertEquals("STRING", jsDocToken0.name());
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean1, config_LanguageMode0, boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getCharno());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(5, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getCharno());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(5, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
      assertNotNull(jsDocInfoParser0);
      
      boolean boolean2 = jsDocInfoParser0.parse();
      assertFalse(boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getCharno());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(5, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isScript());
  }

  @Test
  public void test14()  throws Throwable  {
      String string0 = "[W_q]E*.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChangeTime());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTrue());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isDelProp());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabel());
      assertNotNull(node0);
      
      int int0 = (-1884);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      boolean boolean0 = true;
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(true, toolErrorReporter0.isReportingWarnings());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChangeTime());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTrue());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isDelProp());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(true, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(jsDocInfoParser0);
      
      boolean boolean1 = jsDocInfoParser0.parse();
      assertFalse(boolean1);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getChangeTime());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTrue());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isDelProp());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(true, toolErrorReporter0.isReportingWarnings());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(0, linkedHashSet0.size());
  }

  @Test
  public void test15()  throws Throwable  {
      String string0 = "qVIV!c";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCast());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(4, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(306, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(4, node0.getCharno());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCast());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(4, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(306, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(4, node0.getCharno());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      JsDocToken jsDocToken0 = jsDocTokenStream0.getJsDocToken();
      assertEquals("STRING", jsDocToken0.name());
      assertEquals(4, jsDocToken0.ordinal());
      assertEquals("STRING", jsDocToken0.toString());
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      boolean boolean1 = true;
      assertFalse(boolean1 == boolean0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean1, config_LanguageMode0, boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCast());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(4, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(306, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(4, node0.getCharno());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCast());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(4, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(306, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(4, node0.getCharno());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
      assertNotNull(jsDocInfoParser0);
      
      boolean boolean2 = jsDocInfoParser0.parse();
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCast());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(4, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFunction());
      assertEquals(306, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(4, node0.getCharno());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAnd());
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = "[W_q]E*.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.BANG;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node1.isSwitch());
      assertEquals(true, node1.mayMutateArguments());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDo());
      assertEquals(true, node1.mayMutateGlobalStateOrThrow());
      assertEquals(false, node1.isEmpty());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isOnlyModifiesArgumentsCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNew());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isVarArgs());
      assertEquals(306, node1.getType());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCast());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isFunction());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(0, node1.getChangeTime());
      assertEquals(false, node1.isNull());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isDebugger());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isAssign());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isWhile());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertNotNull(node1);
      
      Node node2 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node0.equals((Object)node2));
      assertFalse(node0.equals((Object)node1));
      assertFalse(node2.equals((Object)node1));
      assertFalse(node2.equals((Object)node0));
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(-1, node2.getSourcePosition());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isComma());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isString());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isOnlyModifiesArgumentsCall());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(true, node2.mayMutateGlobalStateOrThrow());
      assertEquals(false, node2.isSwitch());
      assertEquals(true, node2.hasChildren());
      assertEquals(false, node2.isFunction());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isDo());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isCall());
      assertEquals(true, node2.mayMutateArguments());
      assertEquals(false, node2.isName());
      assertEquals(false, node2.isScript());
      assertEquals(1, node2.getChildCount());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isWhile());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isOr());
      assertEquals(306, node2.getType());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isHook());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isCast());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isGetProp());
      assertEquals(true, node2.hasOneChild());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isAnd());
      assertEquals(0, node2.getChangeTime());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotSame(node0, node2);
      assertNotSame(node0, node1);
      assertNotSame(node2, node1);
      assertNotSame(node2, node0);
      assertNotNull(node2);
      
      boolean boolean1 = jsDocInfoParser0.parse();
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
      assertFalse(node0.equals((Object)node2));
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node0.isContinue());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(308, node0.getType());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotSame(node0, node2);
      assertNotSame(node0, node1);
  }

  @Test
  public void test17() {}
//   @Test
//   public void test17()  throws Throwable  {
//       String string0 = "e<yndefnex";
//       int int0 = (-2408);
//       JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0, int0);
//       assertNotNull(jsDocTokenStream0);
//       
//       BreakStatement breakStatement0 = new BreakStatement();
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNotNull(breakStatement0);
//       
//       boolean boolean0 = JsDocTokenStream.isJSSpace(int0);
//       assertFalse(boolean0);
//       
//       Comment comment0 = breakStatement0.getJsDocNode();
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNull(comment0);
//       
//       LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertNotNull(linkedHashSet0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
//       Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertNotNull(config0);
//       
//       Node node0 = null;
//       Context context0 = Context.getCurrentContext();
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertNotNull(context0);
//       assertTrue(context0.generateObserverCount);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertNotNull(toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNotNull(jsDocInfoParser0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocToken jsDocToken0 = JsDocToken.EOC;
//       Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertNull(node1);
//       assertTrue(context0.generateObserverCount);
//       
//       boolean boolean1 = jsDocInfoParser0.parse();
//       assertTrue(boolean1);
//       assertFalse(boolean0 == boolean1);
//       assertFalse(boolean1 == boolean0);
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(0, linkedHashSet0.size());
//       assertEquals(true, linkedHashSet0.isEmpty());
//       assertEquals("[]", linkedHashSet0.toString());
//       assertEquals(0, breakStatement0.depth());
//       assertEquals(false, breakStatement0.hasChildren());
//       assertEquals("120", breakStatement0.toString());
//       assertNull(breakStatement0.getJsDoc());
//       assertEquals(-1, breakStatement0.getAbsolutePosition());
//       assertEquals(-1, breakStatement0.getLineno());
//       assertEquals(1, breakStatement0.getLength());
//       assertEquals(120, breakStatement0.getType());
//       assertEquals(-1, breakStatement0.getPosition());
//       assertTrue(context0.generateObserverCount);
//   }

  @Test
  public void test18()  throws Throwable  {
      String string0 = "@";
      int int0 = 0;
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0, int0);
      //  // Unstable assertion: assertNotNull(jsDocTokenStream0);
      
      LetNode letNode0 = new LetNode();
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertNotNull(letNode0);
      
      Comment comment0 = letNode0.getJsDocNode();
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertNull(comment0);
      
      Node node0 = new Node(int0);
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertNotNull(node0);
      
      TreeSet<String> treeSet0 = new TreeSet<String>();
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertNotNull(treeSet0);
      
      boolean boolean0 = false;
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
      Config config0 = new Config(treeSet0, treeSet0, boolean0, config_LanguageMode0, boolean0);
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
      //  // Unstable assertion: assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertNotNull(jsDocInfoParser0);
      
      JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertNull(jSDocInfo0);
  }

  @Test
  public void test19()  throws Throwable  {
      String string0 = "[W_q]E*.";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      
      int int0 = (-1884);
      node0.setSourceFileForTesting(string0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals("[W_q]E*.", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals("[W_q]E*.", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals("[W_q]E*.", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals("[W_q]E*.", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(jsDocInfoParser0);
      
      boolean boolean1 = jsDocInfoParser0.parse();
      assertFalse(boolean1);
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean1 == boolean0);
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasOneChild());
      assertEquals(308, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isCast());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals("[W_q]E*.", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isTrue());
      assertEquals(1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
  }

  @Test
  public void test20() {}
//   @Test
//   public void test20()  throws Throwable  {
//       String string0 = "2'G2Hv,Y55QWI5";
//       Node node0 = JsDocInfoParser.parseTypeString(string0);
//       assertEquals(0, node0.getLineno());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(6, node0.getLength());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCase());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isTypeOf());
//       assertNull(node0.getSourceFileName());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(0, node0.getSourcePosition());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNull());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCatch());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isFor());
//       assertNotNull(node0);
//       
//       boolean boolean0 = node0.isBreak();
//       assertFalse(boolean0);
//       assertEquals(0, node0.getLineno());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(6, node0.getLength());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCase());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isTypeOf());
//       assertNull(node0.getSourceFileName());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(0, node0.getSourcePosition());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNull());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCatch());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isFor());
//       
//       int int0 = 83;
//       JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0, int0);
//       assertNotNull(jsDocTokenStream0);
//       
//       ObjectProperty objectProperty0 = new ObjectProperty();
//       assertEquals(false, objectProperty0.isSetter());
//       assertEquals(1, objectProperty0.getLength());
//       assertEquals(-1, objectProperty0.getOperatorPosition());
//       assertEquals(-1, objectProperty0.getLineno());
//       assertEquals(-1, objectProperty0.getAbsolutePosition());
//       assertNull(objectProperty0.getJsDoc());
//       assertEquals(0, objectProperty0.depth());
//       assertEquals(103, objectProperty0.getType());
//       assertEquals("103", objectProperty0.toString());
//       assertEquals(false, objectProperty0.isGetter());
//       assertEquals(false, objectProperty0.hasChildren());
//       assertEquals(-1, objectProperty0.getPosition());
//       assertNotNull(objectProperty0);
//       
//       Comment comment0 = objectProperty0.getJsDocNode();
//       assertEquals(false, objectProperty0.isSetter());
//       assertEquals(1, objectProperty0.getLength());
//       assertEquals(-1, objectProperty0.getOperatorPosition());
//       assertEquals(-1, objectProperty0.getLineno());
//       assertEquals(-1, objectProperty0.getAbsolutePosition());
//       assertNull(objectProperty0.getJsDoc());
//       assertEquals(0, objectProperty0.depth());
//       assertEquals(103, objectProperty0.getType());
//       assertEquals("103", objectProperty0.toString());
//       assertEquals(false, objectProperty0.isGetter());
//       assertEquals(false, objectProperty0.hasChildren());
//       assertEquals(-1, objectProperty0.getPosition());
//       assertNull(comment0);
//       
//       Charset charset0 = Charset.defaultCharset();
//       assertEquals(true, charset0.isRegistered());
//       assertEquals("UTF-8", charset0.toString());
//       assertEquals("UTF-8", charset0.name());
//       assertEquals("UTF-8", charset0.displayName());
//       assertEquals(true, charset0.canEncode());
//       assertNotNull(charset0);
//       
//       Set<String> set0 = charset0.aliases();
//       assertEquals(true, charset0.isRegistered());
//       assertEquals("UTF-8", charset0.toString());
//       assertEquals("UTF-8", charset0.name());
//       assertEquals("UTF-8", charset0.displayName());
//       assertEquals(true, charset0.canEncode());
//       assertEquals(false, set0.isEmpty());
//       assertEquals(2, set0.size());
//       assertNotNull(set0);
//       
//       Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
//       Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
//       assertEquals(true, charset0.isRegistered());
//       assertEquals("UTF-8", charset0.toString());
//       assertEquals("UTF-8", charset0.name());
//       assertEquals("UTF-8", charset0.displayName());
//       assertEquals(true, charset0.canEncode());
//       assertEquals(0, node0.getLineno());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(6, node0.getLength());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCase());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isTypeOf());
//       assertNull(node0.getSourceFileName());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(0, node0.getSourcePosition());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNull());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCatch());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, set0.isEmpty());
//       assertEquals(2, set0.size());
//       assertNotNull(config0);
//       
//       ContextFactory contextFactory0 = ContextFactory.getGlobal();
//       assertEquals(true, contextFactory0.isSealed());
//       assertEquals(false, contextFactory0.hasExplicitGlobal());
//       assertNotNull(contextFactory0);
//       
//       Context context0 = contextFactory0.enterContext();
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(false, context0.isSealed());
//       assertEquals(true, contextFactory0.isSealed());
//       assertEquals(false, contextFactory0.hasExplicitGlobal());
//       assertNotNull(context0);
//       assertTrue(context0.generateObserverCount);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(false, context0.isSealed());
//       assertEquals(true, contextFactory0.isSealed());
//       assertEquals(false, contextFactory0.hasExplicitGlobal());
//       assertNotNull(toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       
//       JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
//       assertEquals(true, charset0.isRegistered());
//       assertEquals("UTF-8", charset0.toString());
//       assertEquals("UTF-8", charset0.name());
//       assertEquals("UTF-8", charset0.displayName());
//       assertEquals(true, charset0.canEncode());
//       assertEquals(0, node0.getLineno());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(6, node0.getLength());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCase());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isTypeOf());
//       assertNull(node0.getSourceFileName());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(0, node0.getSourcePosition());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNull());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCatch());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, set0.isEmpty());
//       assertEquals(2, set0.size());
//       assertEquals(false, objectProperty0.isSetter());
//       assertEquals(1, objectProperty0.getLength());
//       assertEquals(-1, objectProperty0.getOperatorPosition());
//       assertEquals(-1, objectProperty0.getLineno());
//       assertEquals(-1, objectProperty0.getAbsolutePosition());
//       assertNull(objectProperty0.getJsDoc());
//       assertEquals(0, objectProperty0.depth());
//       assertEquals(103, objectProperty0.getType());
//       assertEquals("103", objectProperty0.toString());
//       assertEquals(false, objectProperty0.isGetter());
//       assertEquals(false, objectProperty0.hasChildren());
//       assertEquals(-1, objectProperty0.getPosition());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(false, context0.isSealed());
//       assertEquals(true, contextFactory0.isSealed());
//       assertEquals(false, contextFactory0.hasExplicitGlobal());
//       assertNotNull(jsDocInfoParser0);
//       assertTrue(context0.generateObserverCount);
//       
//       JSDocInfo jSDocInfo0 = null;
//       jsDocInfoParser0.setFileOverviewJSDocInfo(jSDocInfo0);
//       assertEquals(true, charset0.isRegistered());
//       assertEquals("UTF-8", charset0.toString());
//       assertEquals("UTF-8", charset0.name());
//       assertEquals("UTF-8", charset0.displayName());
//       assertEquals(true, charset0.canEncode());
//       assertEquals(0, node0.getLineno());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDo());
//       assertEquals(6, node0.getLength());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCase());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isTypeOf());
//       assertNull(node0.getSourceFileName());
//       assertEquals(40, node0.getType());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(0, node0.getSourcePosition());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isScript());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNull());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCatch());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.isString());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, toolErrorReporter0.hasReportedError());
//       assertEquals(true, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, set0.isEmpty());
//       assertEquals(2, set0.size());
//       assertEquals(false, objectProperty0.isSetter());
//       assertEquals(1, objectProperty0.getLength());
//       assertEquals(-1, objectProperty0.getOperatorPosition());
//       assertEquals(-1, objectProperty0.getLineno());
//       assertEquals(-1, objectProperty0.getAbsolutePosition());
//       assertNull(objectProperty0.getJsDoc());
//       assertEquals(0, objectProperty0.depth());
//       assertEquals(103, objectProperty0.getType());
//       assertEquals("103", objectProperty0.toString());
//       assertEquals(false, objectProperty0.isGetter());
//       assertEquals(false, objectProperty0.hasChildren());
//       assertEquals(-1, objectProperty0.getPosition());
//       assertEquals(true, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(false, context0.isSealed());
//       assertEquals(true, contextFactory0.isSealed());
//       assertEquals(false, contextFactory0.hasExplicitGlobal());
//       assertTrue(context0.generateObserverCount);
//   }

  @Test
  public void test21()  throws Throwable  {
      String string0 = "undefined";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(9, node0.getLength());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(true, node0.isString());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertNotNull(node0);
  }

  @Test
  public void test22()  throws Throwable  {
      String string0 = "out of <rangeindex";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(3, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(3, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0);
      assertNotNull(jsDocTokenStream0);
      
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(3, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertNotNull(config0);
      
      ErrorReporter errorReporter0 = null;
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(3, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertNotNull(jsDocInfoParser0);
      
      JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
      assertEquals(0, linkedHashSet0.size());
      assertEquals("[]", linkedHashSet0.toString());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(3, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetterDef());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, jSDocInfo0.isJaggerProvide());
      assertNull(jSDocInfo0.getFileOverview());
      assertEquals(false, jSDocInfo0.makesStructs());
      assertNull(jSDocInfo0.getBlockDescription());
      assertEquals(false, jSDocInfo0.isMappedIdGenerator());
      assertEquals(false, jSDocInfo0.isJaggerInject());
      assertEquals(false, jSDocInfo0.isStableIdGenerator());
      assertEquals(0, jSDocInfo0.getParameterCount());
      assertEquals(false, jSDocInfo0.hasTypedefType());
      assertEquals(false, jSDocInfo0.isInterface());
      assertEquals(false, jSDocInfo0.isNoTypeCheck());
      assertEquals(false, jSDocInfo0.hasReturnType());
      assertEquals(false, jSDocInfo0.shouldPreserveTry());
      assertNull(jSDocInfo0.getReturnDescription());
      assertNull(jSDocInfo0.getDescription());
      assertNull(jSDocInfo0.getMeaning());
      assertEquals(false, jSDocInfo0.isNoAlias());
      assertEquals(false, jSDocInfo0.isExport());
      assertEquals(false, jSDocInfo0.hasThisType());
      assertEquals(false, jSDocInfo0.isConstructor());
      assertNull(jSDocInfo0.getSourceName());
      assertEquals(false, jSDocInfo0.isNoShadow());
      assertEquals(false, jSDocInfo0.isDefine());
      assertEquals(JSDocInfo.Visibility.INHERITED, jSDocInfo0.getVisibility());
      assertNull(jSDocInfo0.getLicense());
      assertEquals(false, jSDocInfo0.isDisposes());
      assertEquals(false, jSDocInfo0.isJavaDispatch());
      assertEquals(false, jSDocInfo0.isNoCompile());
      assertEquals(false, jSDocInfo0.isNoSideEffects());
      assertNull(jSDocInfo0.getLendsName());
      assertEquals(false, jSDocInfo0.isIdGenerator());
      assertEquals(false, jSDocInfo0.isImplicitCast());
      assertEquals(true, jSDocInfo0.hasType());
      assertEquals(0, jSDocInfo0.getImplementedInterfaceCount());
      assertEquals(false, jSDocInfo0.hasEnumParameterType());
      assertEquals(false, jSDocInfo0.makesDicts());
      assertNull(jSDocInfo0.getVersion());
      assertEquals(false, jSDocInfo0.isJaggerModule());
      assertEquals(false, jSDocInfo0.hasFileOverview());
      assertNull(jSDocInfo0.getDeprecationReason());
      assertEquals(false, jSDocInfo0.isExterns());
      assertEquals(0, jSDocInfo0.getExtendedInterfacesCount());
      assertEquals(false, jSDocInfo0.isConsistentIdGenerator());
      assertEquals(false, jSDocInfo0.isOverride());
      assertEquals(false, jSDocInfo0.hasBaseType());
      assertEquals(true, jSDocInfo0.containsDeclaration());
      assertEquals(false, jSDocInfo0.isWizaction());
      assertEquals(false, jSDocInfo0.isDeprecated());
      assertEquals(false, jSDocInfo0.hasModifies());
      assertEquals(0, jSDocInfo0.getOriginalCommentPosition());
      assertNull(jSDocInfo0.getOriginalCommentString());
      assertEquals(false, jSDocInfo0.isHidden());
      assertEquals(false, jSDocInfo0.isNgInject());
      assertEquals("JSDocInfo", jSDocInfo0.toString());
      assertEquals(false, jSDocInfo0.isExpose());
      assertEquals(false, jSDocInfo0.isConstant());
      assertNotNull(jSDocInfo0);
  }

  @Test
  public void test23()  throws Throwable  {
      String string0 = "msg.jsdoc.export";
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0);
      assertNotNull(jsDocTokenStream0);
      
      int int0 = 162;
      Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
      Comment comment0 = new Comment(int0, int0, token_CommentType0, string0);
      assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
      assertEquals(false, comment0.hasChildren());
      assertNull(comment0.getJsDoc());
      assertEquals("161", comment0.toString());
      assertEquals("msg.jsdoc.export", comment0.getValue());
      assertEquals(162, comment0.getLength());
      assertEquals(162, comment0.getAbsolutePosition());
      assertEquals(0, comment0.depth());
      assertEquals(162, comment0.getPosition());
      assertEquals(161, comment0.getType());
      assertEquals(-1, comment0.getLineno());
      assertNotNull(comment0);
      
      Node node0 = new Node(int0, int0, int0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(663714, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(162, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(162, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(162, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCatch());
      assertNotNull(node0);
      
      Locale locale0 = Locale.FRENCH;
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertNotNull(locale0);
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertNotNull(set0);
      
      boolean boolean0 = false;
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
      Config config0 = new Config(set0, set0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertNotNull(config0);
      
      ErrorReporter errorReporter0 = null;
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
      assertEquals(false, comment0.hasChildren());
      assertNull(comment0.getJsDoc());
      assertEquals("161", comment0.toString());
      assertEquals("msg.jsdoc.export", comment0.getValue());
      assertEquals(162, comment0.getLength());
      assertEquals(162, comment0.getAbsolutePosition());
      assertEquals(0, comment0.depth());
      assertEquals(162, comment0.getPosition());
      assertEquals(161, comment0.getType());
      assertEquals(-1, comment0.getLineno());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(663714, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(162, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(162, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(162, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCatch());
      assertNotNull(jsDocInfoParser0);
      
      JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
      assertEquals(0, set0.size());
      assertEquals(true, set0.isEmpty());
      assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
      assertEquals(false, comment0.hasChildren());
      assertNull(comment0.getJsDoc());
      assertEquals("161", comment0.toString());
      assertEquals("msg.jsdoc.export", comment0.getValue());
      assertEquals(162, comment0.getLength());
      assertEquals(162, comment0.getAbsolutePosition());
      assertEquals(0, comment0.depth());
      assertEquals(162, comment0.getPosition());
      assertEquals(161, comment0.getType());
      assertEquals(-1, comment0.getLineno());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isBreak());
      assertEquals(663714, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(162, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(162, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(162, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isCatch());
      assertNull(jSDocInfo0);
  }

  @Test
  public void test24()  throws Throwable  {
      String string0 = "@";
      int int0 = 0;
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0, int0);
      //  // Unstable assertion: assertNotNull(jsDocTokenStream0);
      
      LetNode letNode0 = new LetNode();
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertNotNull(letNode0);
      
      Comment comment0 = letNode0.getJsDocNode();
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertNull(comment0);
      
      Node node0 = new Node(int0);
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertNotNull(node0);
      
      TreeSet<String> treeSet0 = new TreeSet<String>();
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertNotNull(treeSet0);
      
      boolean boolean0 = false;
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
      Config config0 = new Config(treeSet0, treeSet0, boolean0, config_LanguageMode0, boolean0);
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
      //  // Unstable assertion: assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
      //  // Unstable assertion: assertNotNull(jsDocInfoParser0);
      
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertNotNull(node_FileLevelJsDocBuilder0);
      
      jsDocInfoParser0.setFileLevelJsDocBuilder(node_FileLevelJsDocBuilder0);
      //  // Unstable assertion: assertEquals(false, node0.isDelProp());
      //  // Unstable assertion: assertEquals(false, node0.isRegExp());
      //  // Unstable assertion: assertEquals(false, node0.isContinue());
      //  // Unstable assertion: assertEquals(false, node0.isDebugger());
      //  // Unstable assertion: assertEquals(false, node0.isNumber());
      //  // Unstable assertion: assertEquals(false, node0.isSwitch());
      //  // Unstable assertion: assertEquals(false, node0.isCase());
      //  // Unstable assertion: assertEquals(false, node0.isThis());
      //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
      //  // Unstable assertion: assertEquals(false, node0.isObjectLit());
      //  // Unstable assertion: assertEquals(false, node0.isSetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isIn());
      //  // Unstable assertion: assertEquals(false, node0.isDefaultCase());
      //  // Unstable assertion: assertEquals(false, node0.isNE());
      //  // Unstable assertion: assertEquals(false, node0.isInc());
      //  // Unstable assertion: assertEquals(false, node0.isArrayLit());
      //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
      //  // Unstable assertion: assertEquals(false, node0.isNot());
      //  // Unstable assertion: assertEquals(false, node0.isExprResult());
      //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
      //  // Unstable assertion: assertEquals(false, node0.isName());
      //  // Unstable assertion: assertEquals(false, node0.isTry());
      //  // Unstable assertion: assertEquals(false, node0.isFunction());
      //  // Unstable assertion: assertNull(node0.getSourceFileName());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      //  // Unstable assertion: assertEquals(false, node0.isCall());
      //  // Unstable assertion: assertEquals(false, node0.isThrow());
      //  // Unstable assertion: assertEquals(false, node0.isGetElem());
      //  // Unstable assertion: assertEquals(false, node0.isDec());
      //  // Unstable assertion: assertEquals(false, node0.isParamList());
      //  // Unstable assertion: assertEquals(false, node0.isOr());
      //  // Unstable assertion: assertEquals(false, node0.isLabelName());
      //  // Unstable assertion: assertEquals(false, node0.isCast());
      //  // Unstable assertion: assertEquals(false, node0.isAssign());
      //  // Unstable assertion: assertEquals(-1, node0.getSourcePosition());
      //  // Unstable assertion: assertEquals(true, node0.mayMutateArguments());
      //  // Unstable assertion: assertEquals(0, node0.getType());
      //  // Unstable assertion: assertEquals(-1, node0.getLineno());
      //  // Unstable assertion: assertEquals(false, node0.isTypeOf());
      //  // Unstable assertion: assertEquals(false, node0.isString());
      //  // Unstable assertion: assertEquals(false, node0.isWhile());
      //  // Unstable assertion: assertEquals(false, node0.isTrue());
      //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
      //  // Unstable assertion: assertEquals(false, node0.isBreak());
      //  // Unstable assertion: assertEquals(false, node0.isEmpty());
      //  // Unstable assertion: assertEquals(false, node0.isFalse());
      //  // Unstable assertion: assertEquals(false, node0.isNew());
      //  // Unstable assertion: assertEquals(false, node0.isDo());
      //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
      //  // Unstable assertion: assertEquals(false, node0.isHook());
      //  // Unstable assertion: assertEquals(false, node0.isAssignAdd());
      //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
      //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
      //  // Unstable assertion: assertEquals(false, node0.isLabel());
      //  // Unstable assertion: assertEquals(false, node0.isGetterDef());
      //  // Unstable assertion: assertEquals(false, node0.isWith());
      //  // Unstable assertion: assertEquals(false, node0.isVar());
      //  // Unstable assertion: assertEquals(false, node0.isScript());
      //  // Unstable assertion: assertEquals(0, node0.getChildCount());
      //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
      //  // Unstable assertion: assertEquals(false, node0.isBlock());
      //  // Unstable assertion: assertEquals(false, node0.isAdd());
      //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
      //  // Unstable assertion: assertEquals(false, node0.isStringKey());
      //  // Unstable assertion: assertEquals(false, node0.isIf());
      //  // Unstable assertion: assertEquals(false, node0.isAnd());
      //  // Unstable assertion: assertEquals(false, node0.isGetProp());
      //  // Unstable assertion: assertEquals(false, node0.isInstanceOf());
      //  // Unstable assertion: assertEquals(0, node0.getLength());
      //  // Unstable assertion: assertEquals(false, node0.isNull());
      //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
      //  // Unstable assertion: assertEquals(false, node0.isCatch());
      //  // Unstable assertion: assertEquals(false, node0.isVoid());
      //  // Unstable assertion: assertEquals(false, node0.isComma());
      //  // Unstable assertion: assertEquals(false, node0.hasChildren());
      //  // Unstable assertion: assertEquals(0, node0.getChangeTime());
      //  // Unstable assertion: assertEquals(false, node0.isReturn());
      //  // Unstable assertion: assertEquals(false, node0.isFor());
      //  // Unstable assertion: assertEquals(-1, node0.getCharno());
      //  // Unstable assertion: assertEquals(false, node0.isFromExterns());
      //  // Unstable assertion: assertEquals(false, letNode0.hasChildren());
      //  // Unstable assertion: assertEquals(0, letNode0.depth());
      //  // Unstable assertion: assertEquals("158", letNode0.toString());
      //  // Unstable assertion: assertNull(letNode0.getJsDoc());
      //  // Unstable assertion: assertEquals(1, letNode0.getLength());
      //  // Unstable assertion: assertEquals(158, letNode0.getType());
      //  // Unstable assertion: assertEquals(-1, letNode0.getRp());
      //  // Unstable assertion: assertEquals(-1, letNode0.getPosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getAbsolutePosition());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLineno());
      //  // Unstable assertion: assertEquals(-1, letNode0.getLp());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
      //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
      //  // Unstable assertion: assertEquals("[]", treeSet0.toString());
  }

  @Test
  public void test25()  throws Throwable  {
      String string0 = "#F6?sr\\";
      Node node0 = JsDocInfoParser.parseTypeString(string0);
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      assertNotNull(node0);
      
      boolean boolean0 = node0.isName();
      assertFalse(boolean0);
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      
      int int0 = (-1878);
      JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(string0, int0);
      assertNotNull(jsDocTokenStream0);
      
      Comment comment0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertEquals(0, linkedHashSet0.size());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotNull(linkedHashSet0);
      
      Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
      Config config0 = new Config(linkedHashSet0, linkedHashSet0, boolean0, config_LanguageMode0, boolean0);
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotNull(config0);
      
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(boolean0);
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertNotNull(toolErrorReporter0);
      
      JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotNull(jsDocInfoParser0);
      
      JsDocToken jsDocToken0 = JsDocToken.BANG;
      Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isTry());
      assertEquals(true, node1.mayMutateArguments());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isNumber());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isFalse());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(true, node1.mayMutateGlobalStateOrThrow());
      assertEquals(false, node1.isIn());
      assertEquals(-1, node1.getLineno());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isGetElem());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(0, node1.getChangeTime());
      assertEquals(false, node1.isCast());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isOnlyModifiesArgumentsCall());
      assertEquals(false, node1.isScript());
      assertEquals(true, node1.hasOneChild());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isLabel());
      assertEquals(306, node1.getType());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFor());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertNotNull(node1);
      
      Node node2 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
      assertFalse(node0.equals((Object)node1));
      assertEquals(304, node0.getType());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isBlock());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCast());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.mayMutateGlobalStateOrThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(3, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChangeTime());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.mayMutateArguments());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesArgumentsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(3, node0.getSourcePosition());
      assertEquals(false, toolErrorReporter0.isReportingWarnings());
      assertEquals(false, toolErrorReporter0.hasReportedError());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(true, linkedHashSet0.isEmpty());
      assertEquals("[]", linkedHashSet0.toString());
      assertNotSame(node0, node1);
      assertNull(node2);
  }
}
