/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:58:18 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.CodeGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;


public class CodeGeneratorEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      String string0 = "qmOx6L#Tg7";
      String string1 = CodeGenerator.identifierEscape(string0);
      assertNotNull(string1);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals("qmOx6L#Tg7", string1);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = "18";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(18.0, double0, 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = "8";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(8.0, double0, 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = "qmOx6L#Tg7";
      boolean boolean0 = CodeGenerator.isSimpleNumber(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = "+YluqO;kY;TYq*";
      boolean boolean0 = CodeGenerator.isSimpleNumber(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = "";
      boolean boolean0 = CodeGenerator.isSimpleNumber(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = "08";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      String string0 = "\u0000\u06DD\u070F2)\u1680\u180E\"\u2000\u206AUnb\uD800\uFEFFX\uFFF9\uFFFA";
      String string1 = CodeGenerator.identifierEscape(string0);
      assertNotNull(string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("\\u0000\\u007f\\u06dd\\u070f\\u007f2)\\u1680\\u180e\"\\u2000\\u206aUnb\\ud800\\ufeffX\\ufff9\\ufffa", string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
  }
}
