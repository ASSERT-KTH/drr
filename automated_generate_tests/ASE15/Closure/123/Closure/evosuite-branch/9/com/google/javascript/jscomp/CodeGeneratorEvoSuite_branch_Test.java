/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 21:04:15 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.CodeGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;


public class CodeGeneratorEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      String string0 = "3";
      String string1 = CodeGenerator.identifierEscape(string0);
      assertEquals("3", string1);
      assertNotNull(string1);
      assertSame(string1, string0);
      assertSame(string0, string1);
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = "12";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(12.0, double0, 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      String string0 = "3";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(3.0, double0, 0.01D);
  }

  @Test
  public void test3()  throws Throwable  {
      String string0 = "V";
      boolean boolean0 = CodeGenerator.isSimpleNumber(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = "08";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test5()  throws Throwable  {
      String string0 = "";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      String string0 = ",";
      boolean boolean0 = CodeGenerator.isSimpleNumber(string0);
      assertFalse(boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      String string0 = "\u0001\u0000c\u0000\u0000\u0000$\u0000K\t\n\u000B]\r\u0000\u0000C\u2029\u0000\u0000\u0000A\u0000\u202Fa\u0000ZZ\u0000|\u0000z[p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u3000\u0000u\u0000\u0000\u0000k\u0000\u0000\u0000\u0085\u2000\u2002\u2003\u2004\u2005\u2006j\u2008\u2009\u200A\u0000\u0000\u0000\u0000\u0000\u205F\u1680\u0000\u0000\u180E\u0000\u0000\u0000";
      String string1 = CodeGenerator.identifierEscape(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("\\u0001\\u0000c\\u0000\\u0000\\u0000$\\u0000K\\u0009\\u000a\\u000b]\\u000d\\u0000\\u0000C\\u2029\\u0000\\u0000\\u0000A\\u0000\\u202fa\\u0000ZZ\\u0000|\\u0000z[p\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u3000\\u0000u\\u0000\\u0000\\u0000k\\u0000\\u0000\\u0000\\u0085\\u2000\\u2002\\u2003\\u2004\\u2005\\u2006j\\u2008\\u2009\\u200a\\u0000\\u0000\\u0000\\u0000\\u0000\\u205f\\u1680\\u0000\\u0000\\u180e\\u0000\\u0000\\u0000", string1);
      assertNotNull(string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }
}
