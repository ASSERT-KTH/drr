/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 20:54:35 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.SourceAst;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;



import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.junit.runner.RunWith;


public class TypedScopeCreatorEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertNotNull(typedScopeCreator0);
      
      int int0 = 43;
      String string0 = "ActiveXObjecz.t";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, int0, int0);
      assertNotSame(node1, node0);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNumber());
      assertEquals(43, node1.getType());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNew());
      assertEquals(43, node1.getLineno());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTrue());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(43, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFor());
      assertEquals(true, node1.isFalse());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isEmpty());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isScript());
      assertEquals(176171, node1.getSourcePosition());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isThrow());
      assertNotNull(node1);
      
      node0.addChildrenToFront(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNumber());
      assertEquals(43, node1.getType());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNew());
      assertEquals(43, node1.getLineno());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTrue());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(43, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFor());
      assertEquals(true, node1.isFalse());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isEmpty());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isScript());
      assertEquals(176171, node1.getSourcePosition());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.hasChildren());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.hasMoreThanOneChild());
      
      Scope scope0 = null;
      Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
      assertNotSame(node0, node1);
      assertFalse(node0.equals((Object)node1));
      assertEquals(32, scope1.getVarCount());
      assertEquals(true, scope1.isGlobal());
      assertEquals(false, scope1.isLocal());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.hasChildren());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNotNull(scope1);
  }

  @Test
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertNotNull(typedScopeCreator0);
      
      int int0 = 47;
      String string0 = "undefined";
      SyntheticAst syntheticAst0 = new SyntheticAst(string0);
      assertNotNull(syntheticAst0);
      
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) compiler0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, int0, int0);
      assertNotSame(node1, node0);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(192559, node1.getSourcePosition());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(0, node1.getLength());
      assertEquals(47, node1.getLineno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isDo());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isComma());
      assertEquals(true, node1.isRegExp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDebugger());
      assertEquals(47, node1.getCharno());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isEmpty());
      assertEquals(47, node1.getType());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isSetterDef());
      assertNotNull(node1);
      
      node0.addChildrenToFront(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(192559, node1.getSourcePosition());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(0, node1.getLength());
      assertEquals(47, node1.getLineno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isDo());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isComma());
      assertEquals(true, node1.isRegExp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDebugger());
      assertEquals(47, node1.getCharno());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isEmpty());
      assertEquals(47, node1.getType());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isInc());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      
      Scope scope0 = null;
      Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
      assertNotSame(node0, node1);
      assertFalse(node0.equals((Object)node1));
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(true, scope1.isGlobal());
      assertEquals(32, scope1.getVarCount());
      assertEquals(false, scope1.isLocal());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isInc());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isVoid());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      assertNotNull(scope1);
  }

  @Test
  public void test2()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(0, compiler0.getErrorCount());
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(0, compiler0.getErrorCount());
      assertNotNull(typedScopeCreator0);
      
      int int0 = 130;
      String string0 = "";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(130, node0.getType());
      assertNotNull(node0);
      
      Node node1 = Node.newNumber((double) int0);
      assertNotSame(node1, node0);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOptionalArg());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isBreak());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFor());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isObjectLit());
      assertEquals(39, node1.getType());
      assertEquals(-1, node1.getCharno());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isName());
      assertNotNull(node1);
      
      node0.addChildrenToBack(node1);
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(130, node0.getType());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOptionalArg());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isBreak());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFor());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isObjectLit());
      assertEquals(39, node1.getType());
      assertEquals(-1, node1.getCharno());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isName());
      
      Scope scope0 = null;
      Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
      assertNotSame(node0, node1);
      assertFalse(node0.equals((Object)node1));
      assertEquals(32, scope1.getVarCount());
      assertEquals(true, scope1.isGlobal());
      assertEquals(false, scope1.isLocal());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isExprResult());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTrue());
      assertEquals(130, node0.getType());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(0, compiler0.getErrorCount());
      assertNotNull(scope1);
  }

  @Test
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertNotNull(typedScopeCreator0);
      
      String string0 = "undefined";
      SyntheticAst syntheticAst0 = new SyntheticAst(string0);
      assertNotNull(syntheticAst0);
      
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) compiler0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertNotNull(node0);
      
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(true, scope0.isGlobal());
      assertEquals(32, scope0.getVarCount());
      assertEquals(false, scope0.isLocal());
      assertNotNull(scope0);
      
      String string1 = "+(59Y=y%q*H6";
      assertNotSame(string1, string0);
      
      JSType jSType0 = null;
      CompilerInput compilerInput0 = new CompilerInput((SourceAst) syntheticAst0);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertEquals(false, compilerInput0.isExtern());
      assertEquals("undefined", compilerInput0.toString());
      assertEquals("undefined", compilerInput0.getName());
      assertNotNull(compilerInput0);
      
      Scope.Var scope_Var0 = scope0.declare(string1, node0, jSType0, compilerInput0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, compilerInput0.isExtern());
      assertEquals("undefined", compilerInput0.toString());
      assertEquals("undefined", compilerInput0.getName());
      assertEquals(true, scope0.isGlobal());
      assertEquals(false, scope0.isLocal());
      assertEquals(33, scope0.getVarCount());
      assertNotNull(scope_Var0);
      
      typedScopeCreator0.patchGlobalScope(scope0, node0);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(true, scope0.isGlobal());
      assertEquals(32, scope0.getVarCount());
      assertEquals(false, scope0.isLocal());
  }

  @Test
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertNotNull(typedScopeCreator0);
      
      int int0 = 41;
      String string0 = "ActiveXObjecz.t";
      int int1 = 37;
      Node node0 = Node.newString(int1, string0);
      assertFalse(int1 == int0);
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertNotNull(node0);
      
      Node node1 = new Node(int0, int0, int0);
      assertNotSame(node1, node0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(int0 == int1);
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isHook());
      assertEquals(41, node1.getLineno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.hasChildren());
      assertEquals(41, node1.getType());
      assertEquals(false, node1.isStringKey());
      assertEquals(true, node1.isNull());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.hasOneChild());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAnd());
      assertEquals(167977, node1.getSourcePosition());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isString());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTrue());
      assertEquals(41, node1.getCharno());
      assertEquals(false, node1.isReturn());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isVarArgs());
      assertNotNull(node1);
      
      node0.addChildrenToFront(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertFalse(int1 == int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertFalse(int0 == int1);
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isHook());
      assertEquals(41, node1.getLineno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.hasChildren());
      assertEquals(41, node1.getType());
      assertEquals(false, node1.isStringKey());
      assertEquals(true, node1.isNull());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.hasOneChild());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAnd());
      assertEquals(167977, node1.getSourcePosition());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isString());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTrue());
      assertEquals(41, node1.getCharno());
      assertEquals(false, node1.isReturn());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.hasOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      
      Scope scope0 = null;
      Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
      assertNotSame(node0, node1);
      assertFalse(int1 == int0);
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, scope1.isLocal());
      assertEquals(true, scope1.isGlobal());
      assertEquals(32, scope1.getVarCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.hasOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(37, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertNotNull(scope1);
  }

  @Test
  public void test5()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(typedScopeCreator0);
      
      int int0 = 64;
      String string0 = "undefined";
      SyntheticAst syntheticAst0 = new SyntheticAst(string0);
      assertNotNull(syntheticAst0);
      
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) compiler0);
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isScript());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(node0);
      
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      assertEquals(false, scope0.isLocal());
      assertEquals(true, scope0.isGlobal());
      assertEquals(32, scope0.getVarCount());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isScript());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(scope0);
      
      Node node1 = Node.newString(string0, int0, int0);
      assertNotSame(node1, node0);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isComma());
      assertEquals(262208, node1.getSourcePosition());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(64, node1.getLineno());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isAnd());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNull());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNE());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isLabelName());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(64, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isLocalResultCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTrue());
      assertNotNull(node1);
      
      Node node2 = new Node(int0, int0, int0);
      assertNotSame(node2, node0);
      assertNotSame(node2, node1);
      assertFalse(node2.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isHook());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isVarArgs());
      assertEquals(64, node2.getLineno());
      assertNull(node2.getSourceFileName());
      assertEquals(64, node2.getType());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isComma());
      assertEquals(true, node2.isObjectLit());
      assertEquals(262208, node2.getSourcePosition());
      assertEquals(false, node2.isDo());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isGetElem());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isBreak());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isName());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isThrow());
      assertEquals(64, node2.getCharno());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isAssign());
      assertNotNull(node2);
      
      node1.addChildrenToFront(node2);
      assertNotSame(node1, node0);
      assertNotSame(node1, node2);
      assertNotSame(node2, node0);
      assertNotSame(node2, node1);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node1.equals((Object)node2));
      assertFalse(node2.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isComma());
      assertEquals(262208, node1.getSourcePosition());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(64, node1.getLineno());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCatch());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNull());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNE());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isLabelName());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(64, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isLocalResultCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabel());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isHook());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isVarArgs());
      assertEquals(64, node2.getLineno());
      assertNull(node2.getSourceFileName());
      assertEquals(64, node2.getType());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isComma());
      assertEquals(true, node2.isObjectLit());
      assertEquals(262208, node2.getSourcePosition());
      assertEquals(false, node2.isDo());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isGetElem());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isBreak());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isName());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isThrow());
      assertEquals(64, node2.getCharno());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isAssign());
      
      Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
      assertNotSame(scope1, scope0);
      assertNotSame(scope0, scope1);
      assertNotSame(node0, node1);
      assertNotSame(node0, node2);
      assertNotSame(node1, node0);
      assertNotSame(node1, node2);
      assertFalse(scope1.equals((Object)scope0));
      assertFalse(scope0.equals((Object)scope1));
      assertFalse(node0.equals((Object)node1));
      assertFalse(node0.equals((Object)node2));
      assertFalse(node1.equals((Object)node0));
      assertFalse(node1.equals((Object)node2));
      assertEquals(0, scope1.getVarCount());
      assertEquals(false, scope1.isGlobal());
      assertEquals(true, scope1.isLocal());
      assertEquals(false, scope0.isLocal());
      assertEquals(true, scope0.isGlobal());
      assertEquals(32, scope0.getVarCount());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals("undefined", node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isScript());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isComma());
      assertEquals(262208, node1.getSourcePosition());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(64, node1.getLineno());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCatch());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNull());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNE());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isLabelName());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(64, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isLocalResultCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabel());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTrue());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(scope1);
  }

  @Test
  public void test6()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      compiler0.initCompilerOptionsIfTesting();
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(typedScopeCreator0);
      
      int int0 = 118;
      String string0 = "ActiveXObject";
      Node node0 = Node.newString(int0, string0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSwitch());
      assertEquals(118, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertNotNull(node0);
      
      Node node1 = Node.newNumber((double) int0);
      assertNotSame(node1, node0);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isParamList());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isThrow());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLabelName());
      assertEquals(39, node1.getType());
      assertEquals(false, node1.isHook());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isInc());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNew());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isOr());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isVar());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isObjectLit());
      assertEquals(-1, node1.getCharno());
      assertNotNull(node1);
      
      node0.addChildrenToBack(node1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isParamList());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isThrow());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLabelName());
      assertEquals(39, node1.getType());
      assertEquals(false, node1.isHook());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isInc());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNew());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isOr());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isVar());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isObjectLit());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInc());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSwitch());
      assertEquals(118, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isVar());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNew());
      assertEquals(true, node0.hasChildren());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      
      Scope scope0 = null;
      // Undeclared exception!
      try {
        Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
      }
  }
}
