/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 22:26:19 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CheckEventfulObjectDisposal;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.CheckSideEffects;
import com.google.javascript.jscomp.CleanupPasses;
import com.google.javascript.jscomp.ClosureRewriteClass;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ControlStructureCheck;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.ErrorManager;
import com.google.javascript.jscomp.GlobalNamespace;
import com.google.javascript.jscomp.HotSwapCompilerPass;
import com.google.javascript.jscomp.LoggerErrorManager;
import com.google.javascript.jscomp.PassConfig;
import com.google.javascript.jscomp.PassFactory;
import com.google.javascript.jscomp.PreprocessorSymbolTable;
import com.google.javascript.jscomp.PropertyRenamingPolicy;
import com.google.javascript.jscomp.ScopedAliases;
import com.google.javascript.jscomp.VariableReferenceCheck;
import com.google.javascript.jscomp.VariableRenamingPolicy;
import com.google.javascript.jscomp.graph.GraphvizGraph;
import com.google.javascript.jscomp.graph.LinkedDirectedGraph;
import com.google.javascript.rhino.Node;
import java.io.PrintStream;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.mock.java.lang.MockNullPointerException;
import org.junit.runner.RunWith;


public class DefaultPassConfigEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(compilerOptions0);
      
      Map<String, Node> map0 = DefaultPassConfig.getAdditionalReplacements(compilerOptions0);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(0, map0.size());
      assertEquals(true, map0.isEmpty());
      assertNotNull(map0);
  }

  @Test
  public void test01()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(defaultPassConfig0);
      
      Node node0 = null;
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig.GlobalTypeResolver defaultPassConfig_GlobalTypeResolver0 = defaultPassConfig0.new GlobalTypeResolver(compiler0);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(defaultPassConfig_GlobalTypeResolver0);
      
      // Undeclared exception!
      try {
        defaultPassConfig_GlobalTypeResolver0.process(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test02()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkControlFlow;
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      // Undeclared exception!
      try {
        HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test03()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.suspiciousCode;
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      AbstractCompiler abstractCompiler0 = null;
      // Undeclared exception!
      try {
        HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.create(abstractCompiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test04()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(defaultPassConfig0);
      
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkSideEffects;
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      CheckSideEffects checkSideEffects0 = (CheckSideEffects)defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(checkSideEffects0);
  }

  @Test
  public void test05()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.removeUnusedClassProperties = boolean0;
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertTrue(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(true, compilerOptions0.isRemoveUnusedClassProperties());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertTrue(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(true, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(defaultPassConfig0);
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertTrue(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(true, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test06()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.removeDeadCode = boolean0;
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertTrue(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertTrue(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertTrue(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, list0.isEmpty());
      assertEquals(15, list0.size());
      assertNotNull(list0);
  }

  @Test
  public void test07()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.setInlineLocalVariables(boolean0);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(list0);
  }

  @Test
  public void test08()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.optimizeParameters = boolean0;
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      
      boolean boolean1 = true;
      compilerOptions0.removeUnusedLocalVars = boolean1;
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNotNull(list0);
  }

  @Test
  public void test09()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.removeUnusedLocalVars = boolean0;
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertEquals(false, list0.isEmpty());
      assertEquals(15, list0.size());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(list0);
  }

  @Test
  public void test10()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.setOptimizeCalls(boolean0);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertTrue(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertTrue(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(list0);
  }

  @Test
  public void test11()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.setInlineProperties(boolean0);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
  }

  @Test
  public void test12()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.inlineLocalFunctions = boolean0;
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
  }

  @Test
  public void test13()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.foldConstants = boolean0;
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertTrue(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertTrue(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(17, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
  }

  @Test
  public void test14()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.devirtualizePrototypeMethods = boolean0;
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.setGroupVariableDeclarations(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test15()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(compilerOptions0);
      
      VariableRenamingPolicy variableRenamingPolicy0 = VariableRenamingPolicy.LOCAL;
      compilerOptions0.setRenamingPolicy(variableRenamingPolicy0, compilerOptions0.propertyRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(list0);
  }

  @Test
  public void test16()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.coalesceVariableNames = boolean0;
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test17()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.setAliasExternals(boolean0);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineFunctions);
      assertTrue(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, list0.isEmpty());
      assertEquals(15, list0.size());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(list0);
  }

  @Test
  public void test18()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(defaultPassConfig0);
      
      CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(cleanupPasses0);
      
      CompilerOptions compilerOptions1 = cleanupPasses0.options;
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertSame(compilerOptions1, compilerOptions0);
      assertSame(compilerOptions0, compilerOptions1);
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(compilerOptions1);
      
      boolean boolean0 = true;
      compilerOptions1.rewriteFunctionExpressions = boolean0;
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertTrue(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertTrue(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      
      compilerOptions1.setAliasAllStrings(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertTrue(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertTrue(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertTrue(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertTrue(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertSame(compilerOptions1, compilerOptions0);
      assertSame(compilerOptions0, compilerOptions1);
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertTrue(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertTrue(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertSame(compilerOptions0, compilerOptions1);
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test19()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(compilerOptions0);
      
      PropertyRenamingPolicy propertyRenamingPolicy0 = PropertyRenamingPolicy.HEURISTIC;
      compilerOptions0.setRenamingPolicy(compilerOptions0.variableRenaming, propertyRenamingPolicy0);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, list0.isEmpty());
      assertEquals(15, list0.size());
      assertNotNull(list0);
  }

  @Test
  public void test20()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.ambiguateProperties = boolean0;
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertTrue(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertTrue(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertTrue(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(14, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
  }

  @Test
  public void test21()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(compilerOptions0);
      
      String string0 = "All hashcodes must have the same bit length.";
      compilerOptions0.renamePrefixNamespace = string0;
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(compilerOptions0.renamePrefixNamespace);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(defaultPassConfig0);
      
      // Undeclared exception!
      try {
        GraphvizGraph graphvizGraph0 = defaultPassConfig0.getPassGraph();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in renamePrefixNamespace name: All hashcodes must have the same bit length.
         //
      }
  }

  @Test
  public void test22()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      CompilerOptions.Reach compilerOptions_Reach0 = CompilerOptions.Reach.ALL;
      compilerOptions0.setRemoveUnusedVariable(compilerOptions_Reach0);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertTrue(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      compilerOptions0.flowSensitiveInlineVariables = boolean0;
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertTrue(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertTrue(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertTrue(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertTrue(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeCalls);
      assertTrue(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertTrue(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, list0.isEmpty());
      assertEquals(17, list0.size());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(list0);
  }

  @Test
  public void test23()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.flowSensitiveInlineVariables = boolean0;
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertTrue(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertTrue(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertTrue(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseProperties);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(list0);
  }

  @Test
  public void test24()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.optimizeParameters = boolean0;
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.toString());
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.name());
      assertEquals(1, abstractCompiler_LifeCycleStage0.ordinal());
      
      boolean boolean1 = abstractCompiler_LifeCycleStage0.isNormalized();
      assertTrue(boolean1);
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.toString());
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.name());
      assertEquals(1, abstractCompiler_LifeCycleStage0.ordinal());
      assertTrue(boolean1 == boolean0);
      
      compilerOptions0.crossModuleCodeMotion = compilerOptions0.optimizeParameters;
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertTrue(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertTrue(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.specializeInitialModule = boolean1;
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertTrue(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.toString());
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.name());
      assertEquals(1, abstractCompiler_LifeCycleStage0.ordinal());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertTrue(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertTrue(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertEquals(20, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(list0);
  }

  @Test
  public void test25()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(compilerOptions0);
      
      AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.name());
      assertEquals(1, abstractCompiler_LifeCycleStage0.ordinal());
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.toString());
      
      boolean boolean0 = abstractCompiler_LifeCycleStage0.isNormalized();
      assertTrue(boolean0);
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.name());
      assertEquals(1, abstractCompiler_LifeCycleStage0.ordinal());
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.toString());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.specializeInitialModule = boolean0;
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.name());
      assertEquals(1, abstractCompiler_LifeCycleStage0.ordinal());
      assertEquals("NORMALIZED", abstractCompiler_LifeCycleStage0.toString());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, list0.isEmpty());
      assertEquals(15, list0.size());
      assertNotNull(list0);
  }

  @Test
  public void test26()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(compilerOptions0);
      
      CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(cleanupPasses0);
      
      CompilerOptions compilerOptions1 = cleanupPasses0.options;
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertNotNull(compilerOptions1);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions1);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertNotNull(defaultPassConfig0);
      
      CompilerOptions.Reach compilerOptions_Reach0 = CompilerOptions.Reach.ALL;
      compilerOptions1.setInlineVariables(compilerOptions_Reach0);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertTrue(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      
      CompilerOptions compilerOptions2 = cleanupPasses0.options;
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions2.removeTryCatchFinally);
      assertFalse(compilerOptions2.computeFunctionSideEffects);
      assertFalse(compilerOptions2.jqueryPass);
      assertFalse(compilerOptions2.crossModuleCodeMotion);
      assertFalse(compilerOptions2.collapseAnonymousFunctions);
      assertTrue(compilerOptions2.inlineVariables);
      assertFalse(compilerOptions2.labelRenaming);
      assertFalse(compilerOptions2.preserveGoogRequires);
      assertFalse(compilerOptions2.foldConstants);
      assertFalse(compilerOptions2.removeUnusedClassProperties);
      assertFalse(compilerOptions2.removeDeadCode);
      assertFalse(compilerOptions2.flowSensitiveInlineVariables);
      assertFalse(compilerOptions2.checkControlStructures);
      assertFalse(compilerOptions2.optimizeCalls);
      assertFalse(compilerOptions2.markNoSideEffectCalls);
      assertFalse(compilerOptions2.collapseVariableDeclarations);
      assertFalse(compilerOptions2.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions2.ambiguateProperties);
      assertFalse(compilerOptions2.aliasExternals);
      assertFalse(compilerOptions2.checkSuspiciousCode);
      assertFalse(compilerOptions2.generateExports);
      assertFalse(compilerOptions2.aliasAllStrings);
      assertFalse(compilerOptions2.optimizeArgumentsArray);
      assertFalse(compilerOptions2.inlineFunctions);
      assertFalse(compilerOptions2.ideMode);
      assertFalse(compilerOptions2.checkTypes);
      assertFalse(compilerOptions2.recordFunctionInformation);
      assertFalse(compilerOptions2.reserveRawExports);
      assertFalse(compilerOptions2.lineBreak);
      assertFalse(compilerOptions2.gatherCssNames);
      assertFalse(compilerOptions2.prettyPrint);
      assertFalse(compilerOptions2.convertToDottedProperties);
      assertFalse(compilerOptions2.checkSymbols);
      assertFalse(compilerOptions2.devirtualizePrototypeMethods);
      assertFalse(compilerOptions2.printInputDelimiter);
      assertFalse(compilerOptions2.optimizeParameters);
      assertFalse(compilerOptions2.moveFunctionDeclarations);
      assertFalse(compilerOptions2.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions2.collapseProperties);
      assertFalse(compilerOptions2.smartNameRemoval);
      assertFalse(compilerOptions2.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions2.generatePseudoNames);
      assertFalse(compilerOptions2.exportTestFunctions);
      assertFalse(compilerOptions2.deadAssignmentElimination);
      assertFalse(compilerOptions2.inlineConstantVars);
      assertFalse(compilerOptions2.removeUnusedLocalVars);
      assertFalse(compilerOptions2.instrumentForCoverage);
      assertFalse(compilerOptions2.optimizeReturns);
      assertFalse(compilerOptions2.markAsCompiled);
      assertFalse(compilerOptions2.aliasKeywords);
      assertFalse(compilerOptions2.removeUnusedVars);
      assertFalse(compilerOptions2.closurePass);
      assertFalse(compilerOptions2.crossModuleMethodMotion);
      assertFalse(compilerOptions2.rewriteFunctionExpressions);
      assertFalse(compilerOptions2.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions2.coalesceVariableNames);
      assertFalse(compilerOptions2.inlineLocalFunctions);
      assertFalse(compilerOptions2.inlineGetters);
      assertFalse(compilerOptions2.disambiguateProperties);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions0, compilerOptions2);
      assertSame(compilerOptions2, compilerOptions1);
      assertSame(compilerOptions2, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions2.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions2.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions2.shouldColorizeErrorOutput());
      assertNull(compilerOptions2.getLanguageOut());
      assertEquals(false, compilerOptions2.assumeStrictThis());
      assertEquals(false, compilerOptions2.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions2.getTweakProcessing());
      assertEquals(false, compilerOptions2.getCheckDeterminism());
      assertEquals(false, compilerOptions2.getInferTypes());
      assertEquals(false, compilerOptions2.isExternExportsEnabled());
      assertEquals(false, compilerOptions2.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions2.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions2.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions2.getCheckEventfulObjectDisposalPolicy());
      assertNotNull(compilerOptions2);
      
      compilerOptions2.smartNameRemoval = compilerOptions2.inlineVariables;
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions2.removeTryCatchFinally);
      assertFalse(compilerOptions2.computeFunctionSideEffects);
      assertFalse(compilerOptions2.jqueryPass);
      assertFalse(compilerOptions2.crossModuleCodeMotion);
      assertFalse(compilerOptions2.collapseAnonymousFunctions);
      assertTrue(compilerOptions2.inlineVariables);
      assertFalse(compilerOptions2.labelRenaming);
      assertFalse(compilerOptions2.preserveGoogRequires);
      assertFalse(compilerOptions2.foldConstants);
      assertFalse(compilerOptions2.removeUnusedClassProperties);
      assertFalse(compilerOptions2.removeDeadCode);
      assertFalse(compilerOptions2.flowSensitiveInlineVariables);
      assertFalse(compilerOptions2.checkControlStructures);
      assertFalse(compilerOptions2.optimizeCalls);
      assertFalse(compilerOptions2.markNoSideEffectCalls);
      assertFalse(compilerOptions2.collapseVariableDeclarations);
      assertFalse(compilerOptions2.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions2.ambiguateProperties);
      assertFalse(compilerOptions2.aliasExternals);
      assertFalse(compilerOptions2.checkSuspiciousCode);
      assertFalse(compilerOptions2.generateExports);
      assertFalse(compilerOptions2.aliasAllStrings);
      assertFalse(compilerOptions2.optimizeArgumentsArray);
      assertFalse(compilerOptions2.inlineFunctions);
      assertFalse(compilerOptions2.ideMode);
      assertFalse(compilerOptions2.checkTypes);
      assertFalse(compilerOptions2.recordFunctionInformation);
      assertFalse(compilerOptions2.reserveRawExports);
      assertFalse(compilerOptions2.lineBreak);
      assertFalse(compilerOptions2.gatherCssNames);
      assertFalse(compilerOptions2.prettyPrint);
      assertTrue(compilerOptions2.smartNameRemoval);
      assertFalse(compilerOptions2.convertToDottedProperties);
      assertFalse(compilerOptions2.checkSymbols);
      assertFalse(compilerOptions2.devirtualizePrototypeMethods);
      assertFalse(compilerOptions2.printInputDelimiter);
      assertFalse(compilerOptions2.optimizeParameters);
      assertFalse(compilerOptions2.moveFunctionDeclarations);
      assertFalse(compilerOptions2.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions2.collapseProperties);
      assertFalse(compilerOptions2.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions2.generatePseudoNames);
      assertFalse(compilerOptions2.exportTestFunctions);
      assertFalse(compilerOptions2.deadAssignmentElimination);
      assertFalse(compilerOptions2.inlineConstantVars);
      assertFalse(compilerOptions2.removeUnusedLocalVars);
      assertFalse(compilerOptions2.instrumentForCoverage);
      assertFalse(compilerOptions2.optimizeReturns);
      assertFalse(compilerOptions2.markAsCompiled);
      assertFalse(compilerOptions2.aliasKeywords);
      assertFalse(compilerOptions2.removeUnusedVars);
      assertFalse(compilerOptions2.closurePass);
      assertFalse(compilerOptions2.crossModuleMethodMotion);
      assertFalse(compilerOptions2.rewriteFunctionExpressions);
      assertFalse(compilerOptions2.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions2.coalesceVariableNames);
      assertFalse(compilerOptions2.inlineLocalFunctions);
      assertFalse(compilerOptions2.inlineGetters);
      assertFalse(compilerOptions2.disambiguateProperties);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions2.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions2.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions2.shouldColorizeErrorOutput());
      assertNull(compilerOptions2.getLanguageOut());
      assertEquals(false, compilerOptions2.assumeStrictThis());
      assertEquals(false, compilerOptions2.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions2.getTweakProcessing());
      assertEquals(false, compilerOptions2.getCheckDeterminism());
      assertEquals(false, compilerOptions2.getInferTypes());
      assertEquals(false, compilerOptions2.isExternExportsEnabled());
      assertEquals(false, compilerOptions2.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions2.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions2.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions2.getCheckEventfulObjectDisposalPolicy());
      
      compilerOptions1.extraSmartNameRemoval = compilerOptions2.smartNameRemoval;
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertTrue(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertTrue(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions2.removeTryCatchFinally);
      assertFalse(compilerOptions2.computeFunctionSideEffects);
      assertFalse(compilerOptions2.jqueryPass);
      assertFalse(compilerOptions2.crossModuleCodeMotion);
      assertFalse(compilerOptions2.collapseAnonymousFunctions);
      assertTrue(compilerOptions2.inlineVariables);
      assertFalse(compilerOptions2.labelRenaming);
      assertFalse(compilerOptions2.preserveGoogRequires);
      assertFalse(compilerOptions2.foldConstants);
      assertFalse(compilerOptions2.removeUnusedClassProperties);
      assertFalse(compilerOptions2.removeDeadCode);
      assertFalse(compilerOptions2.flowSensitiveInlineVariables);
      assertFalse(compilerOptions2.checkControlStructures);
      assertFalse(compilerOptions2.optimizeCalls);
      assertFalse(compilerOptions2.markNoSideEffectCalls);
      assertFalse(compilerOptions2.collapseVariableDeclarations);
      assertFalse(compilerOptions2.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions2.ambiguateProperties);
      assertFalse(compilerOptions2.aliasExternals);
      assertFalse(compilerOptions2.checkSuspiciousCode);
      assertFalse(compilerOptions2.generateExports);
      assertFalse(compilerOptions2.aliasAllStrings);
      assertFalse(compilerOptions2.optimizeArgumentsArray);
      assertFalse(compilerOptions2.inlineFunctions);
      assertFalse(compilerOptions2.ideMode);
      assertFalse(compilerOptions2.checkTypes);
      assertFalse(compilerOptions2.recordFunctionInformation);
      assertFalse(compilerOptions2.reserveRawExports);
      assertFalse(compilerOptions2.lineBreak);
      assertFalse(compilerOptions2.gatherCssNames);
      assertFalse(compilerOptions2.prettyPrint);
      assertTrue(compilerOptions2.smartNameRemoval);
      assertFalse(compilerOptions2.convertToDottedProperties);
      assertFalse(compilerOptions2.checkSymbols);
      assertFalse(compilerOptions2.devirtualizePrototypeMethods);
      assertFalse(compilerOptions2.printInputDelimiter);
      assertFalse(compilerOptions2.optimizeParameters);
      assertFalse(compilerOptions2.moveFunctionDeclarations);
      assertFalse(compilerOptions2.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions2.collapseProperties);
      assertFalse(compilerOptions2.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions2.generatePseudoNames);
      assertFalse(compilerOptions2.exportTestFunctions);
      assertFalse(compilerOptions2.deadAssignmentElimination);
      assertFalse(compilerOptions2.inlineConstantVars);
      assertFalse(compilerOptions2.removeUnusedLocalVars);
      assertFalse(compilerOptions2.instrumentForCoverage);
      assertFalse(compilerOptions2.optimizeReturns);
      assertFalse(compilerOptions2.markAsCompiled);
      assertFalse(compilerOptions2.aliasKeywords);
      assertFalse(compilerOptions2.removeUnusedVars);
      assertFalse(compilerOptions2.closurePass);
      assertFalse(compilerOptions2.crossModuleMethodMotion);
      assertFalse(compilerOptions2.rewriteFunctionExpressions);
      assertFalse(compilerOptions2.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions2.coalesceVariableNames);
      assertFalse(compilerOptions2.inlineLocalFunctions);
      assertFalse(compilerOptions2.inlineGetters);
      assertFalse(compilerOptions2.disambiguateProperties);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions2.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions2.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions2.shouldColorizeErrorOutput());
      assertNull(compilerOptions2.getLanguageOut());
      assertEquals(false, compilerOptions2.assumeStrictThis());
      assertEquals(false, compilerOptions2.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions2.getTweakProcessing());
      assertEquals(false, compilerOptions2.getCheckDeterminism());
      assertEquals(false, compilerOptions2.getInferTypes());
      assertEquals(false, compilerOptions2.isExternExportsEnabled());
      assertEquals(false, compilerOptions2.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions2.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions2.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions2.getCheckEventfulObjectDisposalPolicy());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertTrue(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertTrue(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertTrue(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertTrue(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions0, compilerOptions2);
      assertSame(compilerOptions1, compilerOptions0);
      assertSame(compilerOptions1, compilerOptions2);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test27()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNotNull(compilerOptions0);
      
      CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNotNull(cleanupPasses0);
      
      boolean boolean0 = true;
      CompilerOptions compilerOptions1 = cleanupPasses0.options;
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertNotNull(compilerOptions1);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions1);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions1.extraSmartNameRemoval = boolean0;
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test28()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.checkTypes = boolean0;
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(defaultPassConfig0);
      
      CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(cleanupPasses0);
      
      CompilerOptions compilerOptions1 = cleanupPasses0.options;
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertTrue(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertSame(compilerOptions1, compilerOptions0);
      assertSame(compilerOptions0, compilerOptions1);
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(compilerOptions1);
      
      compilerOptions1.tightenTypes = compilerOptions0.checkTypes;
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertTrue(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.generateExports);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.ideMode);
      assertSame(compilerOptions0, compilerOptions1);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNotNull(list0);
  }

  @Test
  public void test29()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(defaultPassConfig0);
      
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
      
      compilerOptions0.setReplaceStringsConfiguration(compilerOptions0.syntheticBlockStartMarker, list0);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test30()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.enableRuntimeTypeCheck(compilerOptions0.renamePrefix);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      
      List<PassFactory> list0 = defaultPassConfig0.getOptimizations();
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertEquals(15, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNotNull(list0);
  }

  @Test
  public void test31()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(compilerOptions0);
      
      CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(cleanupPasses0);
      
      CompilerOptions compilerOptions1 = cleanupPasses0.options;
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.generateExports);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertNotNull(compilerOptions1);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions1);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.gatherCssNames);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.generateExports);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertNotNull(defaultPassConfig0);
      
      boolean boolean0 = true;
      compilerOptions1.recordFunctionInformation = boolean0;
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertTrue(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.gatherCssNames);
      assertTrue(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.generateExports);
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertTrue(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions1.moveFunctionDeclarations);
      assertFalse(compilerOptions1.prettyPrint);
      assertFalse(compilerOptions1.ideMode);
      assertFalse(compilerOptions1.crossModuleCodeMotion);
      assertFalse(compilerOptions1.checkSymbols);
      assertFalse(compilerOptions1.crossModuleMethodMotion);
      assertFalse(compilerOptions1.optimizeParameters);
      assertFalse(compilerOptions1.checkControlStructures);
      assertFalse(compilerOptions1.inlineGetters);
      assertFalse(compilerOptions1.printInputDelimiter);
      assertFalse(compilerOptions1.aliasAllStrings);
      assertFalse(compilerOptions1.optimizeArgumentsArray);
      assertFalse(compilerOptions1.instrumentForCoverage);
      assertFalse(compilerOptions1.collapseProperties);
      assertFalse(compilerOptions1.inlineLocalFunctions);
      assertFalse(compilerOptions1.aliasExternals);
      assertFalse(compilerOptions1.closurePass);
      assertFalse(compilerOptions1.rewriteFunctionExpressions);
      assertFalse(compilerOptions1.checkSuspiciousCode);
      assertFalse(compilerOptions1.labelRenaming);
      assertFalse(compilerOptions1.removeTryCatchFinally);
      assertFalse(compilerOptions1.inlineConstantVars);
      assertFalse(compilerOptions1.optimizeCalls);
      assertFalse(compilerOptions1.checkTypes);
      assertFalse(compilerOptions1.computeFunctionSideEffects);
      assertFalse(compilerOptions1.disambiguateProperties);
      assertFalse(compilerOptions1.convertToDottedProperties);
      assertFalse(compilerOptions1.markNoSideEffectCalls);
      assertFalse(compilerOptions1.collapseAnonymousFunctions);
      assertFalse(compilerOptions1.inlineVariables);
      assertFalse(compilerOptions1.aliasKeywords);
      assertFalse(compilerOptions1.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions1.generatePseudoNames);
      assertFalse(compilerOptions1.inlineFunctions);
      assertFalse(compilerOptions1.devirtualizePrototypeMethods);
      assertFalse(compilerOptions1.flowSensitiveInlineVariables);
      assertFalse(compilerOptions1.lineBreak);
      assertFalse(compilerOptions1.markAsCompiled);
      assertFalse(compilerOptions1.reserveRawExports);
      assertFalse(compilerOptions1.removeDeadCode);
      assertFalse(compilerOptions1.foldConstants);
      assertFalse(compilerOptions1.smartNameRemoval);
      assertFalse(compilerOptions1.gatherCssNames);
      assertTrue(compilerOptions1.recordFunctionInformation);
      assertFalse(compilerOptions1.optimizeReturns);
      assertFalse(compilerOptions1.deadAssignmentElimination);
      assertFalse(compilerOptions1.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions1.jqueryPass);
      assertFalse(compilerOptions1.exportTestFunctions);
      assertFalse(compilerOptions1.collapseVariableDeclarations);
      assertFalse(compilerOptions1.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions1.removeUnusedLocalVars);
      assertFalse(compilerOptions1.ambiguateProperties);
      assertFalse(compilerOptions1.preserveGoogRequires);
      assertFalse(compilerOptions1.removeUnusedClassProperties);
      assertFalse(compilerOptions1.coalesceVariableNames);
      assertFalse(compilerOptions1.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions1.removeUnusedVars);
      assertFalse(compilerOptions1.generateExports);
      assertSame(compilerOptions0, compilerOptions1);
      assertSame(compilerOptions1, compilerOptions0);
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions1.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions1.assumeStrictThis());
      assertEquals(false, compilerOptions1.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions1.getTweakProcessing());
      assertNull(compilerOptions1.getLanguageOut());
      assertEquals(false, compilerOptions1.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions1.getInferTypes());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions1.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions1.getTracerMode());
      assertEquals(false, compilerOptions1.shouldColorizeErrorOutput());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions1.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions1.getCheckDeterminism());
      assertEquals(false, compilerOptions1.isExternExportsEnabled());
      assertEquals(false, compilerOptions1.getInstrumentMemoryAllocations());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test32()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.lineBreak);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.lineBreak);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNotNull(defaultPassConfig0);
      
      compilerOptions0.setInferTypes(boolean0);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.lineBreak);
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(true, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.lineBreak);
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(true, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test33()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.checkTypes = boolean0;
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getChecks();
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertTrue(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(10, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(list0);
  }

  @Test
  public void test34()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(compilerOptions0);
      
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      compilerOptions0.aggressiveVarCheck = checkLevel0;
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals("WARNING", compilerOptions0.aggressiveVarCheck.name());
      assertEquals("WARNING", compilerOptions0.aggressiveVarCheck.toString());
      assertEquals(1, compilerOptions0.aggressiveVarCheck.ordinal());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getChecks();
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, list0.isEmpty());
      assertEquals(7, list0.size());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertNotNull(list0);
  }

  @Test
  public void test35()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(compilerOptions0);
      
      compilerOptions0.setSyntheticBlockStartMarker(compilerOptions0.inputDelimiter);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(defaultPassConfig0);
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test36()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.angularPass = boolean0;
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(defaultPassConfig0);
      
      List<PassFactory> list0 = defaultPassConfig0.getChecks();
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertEquals(false, list0.isEmpty());
      assertEquals(7, list0.size());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertNotNull(list0);
  }

  @Test
  public void test37()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertNotNull(compilerOptions0);
      
      boolean boolean0 = true;
      compilerOptions0.setClosurePass(boolean0);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertTrue(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertTrue(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertNotNull(defaultPassConfig0);
      
      LinkedDirectedGraph linkedDirectedGraph0 = (LinkedDirectedGraph)defaultPassConfig0.getPassGraph();
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertTrue(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(true, linkedDirectedGraph0.isDirected());
      assertEquals("LinkedGraph", linkedDirectedGraph0.getName());
      assertNotNull(linkedDirectedGraph0);
  }

  @Test
  public void test38()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.prettyPrint);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.prettyPrint);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(defaultPassConfig0);
      
      PassConfig.State passConfig_State0 = defaultPassConfig0.getIntermediateState();
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.prettyPrint);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNotNull(passConfig_State0);
      
      defaultPassConfig0.setIntermediateState(passConfig_State0);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.prettyPrint);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
  }

  @Test
  public void test39()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.ClearTypedScope defaultPassConfig_ClearTypedScope0 = defaultPassConfig0.new ClearTypedScope();
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertNotNull(defaultPassConfig_ClearTypedScope0);
      
      Node node0 = null;
      defaultPassConfig_ClearTypedScope0.process(node0, node0);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
  }

  @Test
  public void test40()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      LoggerErrorManager loggerErrorManager0 = (LoggerErrorManager)compiler0.getErrorManager();
      assertEquals(0, loggerErrorManager0.getWarningCount());
      assertEquals(0.0, loggerErrorManager0.getTypedPercent(), 0.01D);
      assertEquals(0, loggerErrorManager0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertNotNull(loggerErrorManager0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.closurePrimitives;
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertNotNull(hotSwapCompilerPass0);
  }

  @Test
  public void test41()  throws Throwable  {
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkRequires;
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      // Undeclared exception!
      try {
        HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test42()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkControlStructures;
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      ControlStructureCheck controlStructureCheck0 = (ControlStructureCheck)defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(controlStructureCheck0);
  }

  @Test
  public void test43()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkTypes;
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(hotSwapCompilerPass0);
  }

  @Test
  public void test44()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkAccessControls;
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      // Undeclared exception!
      try {
        HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test45()  throws Throwable  {
      CompilerOptions compilerOptions0 = null;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.inferJsDocInfo;
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(hotSwapCompilerPass0);
  }

  @Test
  public void test46()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      // Undeclared exception!
      try {
        compiler0.processDefines();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test47()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.inferTypes;
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(hotSwapCompilerPass0);
  }

  @Test
  public void test48()  throws Throwable  {
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.getOptions();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.resolveTypes;
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      DefaultPassConfig.GlobalTypeResolver defaultPassConfig_GlobalTypeResolver0 = (DefaultPassConfig.GlobalTypeResolver)defaultPassConfig_HotSwapPassFactory0.create(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_GlobalTypeResolver0);
  }

  @Test
  public void test49()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkVariableReferences;
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      VariableReferenceCheck variableReferenceCheck0 = (VariableReferenceCheck)defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertNotNull(variableReferenceCheck0);
  }

  @Test
  public void test50()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(compiler0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.checkVars;
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      // Undeclared exception!
      try {
        HotSwapCompilerPass hotSwapCompilerPass0 = defaultPassConfig_HotSwapPassFactory0.create(compiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test51()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNotNull(defaultPassConfig0);
      
      PreprocessorSymbolTable preprocessorSymbolTable0 = defaultPassConfig0.getPreprocessorSymbolTable();
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertNull(preprocessorSymbolTable0);
  }

  @Test
  public void test52()  throws Throwable  {
      CompilerOptions compilerOptions0 = null;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertNotNull(defaultPassConfig0);
      
      GlobalNamespace globalNamespace0 = defaultPassConfig0.getGlobalNamespace();
      assertNull(globalNamespace0);
  }

  @Test
  public void test53()  throws Throwable  {
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(compilerOptions0);
      
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.closureGoogScopeAliases;
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      AbstractCompiler abstractCompiler0 = null;
      ScopedAliases scopedAliases0 = (ScopedAliases)defaultPassConfig_HotSwapPassFactory0.create(abstractCompiler0);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.instrumentForCoverage);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.preserveGoogRequires);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertEquals(CheckEventfulObjectDisposal.DisposalCheckingPolicy.OFF, compilerOptions0.getCheckEventfulObjectDisposalPolicy());
      assertEquals(false, compilerOptions0.getInstrumentMemoryAllocations());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(false, compilerOptions0.getCheckDeterminism());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.isDisambiguatePrivateProperties());
      assertNotNull(scopedAliases0);
  }

  @Test
  public void test54()  throws Throwable  {
      String string0 = "VLnNn8u7,";
      Logger logger0 = Logger.getLogger(string0);
      assertEquals(true, logger0.getUseParentHandlers());
      assertEquals("VLnNn8u7,", logger0.getName());
      assertNull(logger0.getResourceBundleName());
      assertNotNull(logger0);
      
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
      assertEquals(true, logger0.getUseParentHandlers());
      assertEquals("VLnNn8u7,", logger0.getName());
      assertNull(logger0.getResourceBundleName());
      assertEquals(0, loggerErrorManager0.getErrorCount());
      assertEquals(0.0, loggerErrorManager0.getTypedPercent(), 0.01D);
      assertEquals(0, loggerErrorManager0.getWarningCount());
      assertNotNull(loggerErrorManager0);
      
      Compiler compiler0 = new Compiler((ErrorManager) loggerErrorManager0);
      assertEquals(true, logger0.getUseParentHandlers());
      assertEquals("VLnNn8u7,", logger0.getName());
      assertNull(logger0.getResourceBundleName());
      assertEquals(0, loggerErrorManager0.getErrorCount());
      assertEquals(0.0, loggerErrorManager0.getTypedPercent(), 0.01D);
      assertEquals(0, loggerErrorManager0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertNotNull(compiler0);
      
      DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
      assertEquals(true, logger0.getUseParentHandlers());
      assertEquals("VLnNn8u7,", logger0.getName());
      assertNull(logger0.getResourceBundleName());
      assertEquals(0, loggerErrorManager0.getErrorCount());
      assertEquals(0.0, loggerErrorManager0.getTypedPercent(), 0.01D);
      assertEquals(0, loggerErrorManager0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertNotNull(defaultPassConfig0);
      
      DefaultPassConfig.HotSwapPassFactory defaultPassConfig_HotSwapPassFactory0 = defaultPassConfig0.closureRewriteGoogClass;
      assertEquals(true, logger0.getUseParentHandlers());
      assertEquals("VLnNn8u7,", logger0.getName());
      assertNull(logger0.getResourceBundleName());
      assertEquals(0, loggerErrorManager0.getErrorCount());
      assertEquals(0.0, loggerErrorManager0.getTypedPercent(), 0.01D);
      assertEquals(0, loggerErrorManager0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertNotNull(defaultPassConfig_HotSwapPassFactory0);
      
      ClosureRewriteClass closureRewriteClass0 = (ClosureRewriteClass)defaultPassConfig_HotSwapPassFactory0.getHotSwapPass(compiler0);
      assertEquals(true, logger0.getUseParentHandlers());
      assertEquals("VLnNn8u7,", logger0.getName());
      assertNull(logger0.getResourceBundleName());
      assertEquals(0, loggerErrorManager0.getErrorCount());
      assertEquals(0.0, loggerErrorManager0.getTypedPercent(), 0.01D);
      assertEquals(0, loggerErrorManager0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertNotNull(closureRewriteClass0);
  }
}
