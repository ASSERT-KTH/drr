/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 15:37:18 GMT 2014
 */

package org.jfree.data.time;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.awt.event.ComponentEvent;
import java.awt.event.InputEvent;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;
import javax.swing.JLayeredPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;



import org.evosuite.runtime.testdata.FileSystemHandling;;

import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.general.SeriesException;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.SerialDate;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class TimeSeriesEvoSuite_branch_Test  {

  @Test
  public void test00() {}
//   @Test
//   public void test00()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertNotNull(hour0);
//       
//       String string0 = "";
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, string0, string0, (Class) class0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       double double0 = 713.2106474193678;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) hour0, double0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = 0;
//       TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) hour0, (RegularTimePeriod) hour0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertNotNull(timeSeries1);
//       
//       timeSeries0.update(int0, (Number) int0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries1.addOrUpdate((RegularTimePeriod) hour0, (Number) int0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertNull(timeSeriesDataItem1);
//       
//       boolean boolean0 = timeSeries1.equals((Object) timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(boolean0);
//   }

  @Test
  public void test01() {}
//   @Test
//   public void test01()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertNotNull(hour0);
//       
//       String string0 = "";
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, string0, string0, (Class) class0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertNotNull(timeSeries0);
//       
//       double double0 = 713.2106474193678;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) hour0, double0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = 0;
//       TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) hour0, (RegularTimePeriod) hour0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertNotNull(timeSeries1);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries1.addOrUpdate((RegularTimePeriod) hour0, (Number) int0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertNull(timeSeriesDataItem1);
//       
//       boolean boolean0 = timeSeries1.equals((Object) timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(boolean0);
//   }

  @Test
  public void test02()  throws Throwable  {
      int int0 = (-1);
      String string0 = Integer.toOctalString(int0);
      assertNotNull(string0);
      assertEquals("37777777777", string0);
      
      Class<Object> class0 = Object.class;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) string0, string0, string0, (Class) class0);
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("37777777777", timeSeries0.getDomainDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("37777777777", timeSeries0.getRangeDescription());
      assertNull(timeSeries0.getDescription());
      assertNotNull(timeSeries0);
      
      TimeSeries timeSeries1 = new TimeSeries((Comparable) string0);
      assertNotSame(timeSeries1, timeSeries0);
      assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
      assertEquals("Time", timeSeries1.getDomainDescription());
      assertEquals("Value", timeSeries1.getRangeDescription());
      assertEquals(0, timeSeries1.getItemCount());
      assertEquals(2147483647, timeSeries1.getMaximumItemCount());
      assertEquals(true, timeSeries1.getNotify());
      assertEquals(true, timeSeries1.isEmpty());
      assertNull(timeSeries1.getDescription());
      assertFalse(timeSeries1.equals((Object)timeSeries0));
      assertNotNull(timeSeries1);
      
      boolean boolean0 = timeSeries0.equals((Object) timeSeries1);
      assertNotSame(timeSeries1, timeSeries0);
      assertNotSame(timeSeries0, timeSeries1);
      assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
      assertEquals("Time", timeSeries1.getDomainDescription());
      assertEquals("Value", timeSeries1.getRangeDescription());
      assertEquals(0, timeSeries1.getItemCount());
      assertEquals(2147483647, timeSeries1.getMaximumItemCount());
      assertEquals(true, timeSeries1.getNotify());
      assertEquals(true, timeSeries1.isEmpty());
      assertNull(timeSeries1.getDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("37777777777", timeSeries0.getDomainDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("37777777777", timeSeries0.getRangeDescription());
      assertNull(timeSeries0.getDescription());
      assertFalse(timeSeries1.equals((Object)timeSeries0));
      assertFalse(timeSeries0.equals((Object)timeSeries1));
      assertFalse(boolean0);
  }

  @Test
  public void test03() {}
//   @Test
//   public void test03()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertNotNull(hour0);
//       
//       String string0 = "";
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, string0, string0, (Class) class0);
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNotNull(timeSeries0);
//       
//       boolean boolean0 = timeSeries0.equals((Object) class0);
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertFalse(boolean0);
//   }

  @Test
  public void test04()  throws Throwable  {
      int int0 = 0;
      Week week0 = new Week(int0, int0);
      assertEquals(0L, week0.getSerialIndex());
      assertEquals(0, week0.getWeek());
      assertEquals(0, week0.getYearValue());
      assertEquals((-62168256000000L), week0.getFirstMillisecond());
      assertEquals((-62167651200001L), week0.getLastMillisecond());
      assertEquals((-62167953600001L), week0.getMiddleMillisecond());
      assertNotNull(week0);
      
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) week0, (Class) class0);
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertNull(timeSeries0.getDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(0L, week0.getSerialIndex());
      assertEquals(0, week0.getWeek());
      assertEquals(0, week0.getYearValue());
      assertEquals((-62168256000000L), week0.getFirstMillisecond());
      assertEquals((-62167651200001L), week0.getLastMillisecond());
      assertEquals((-62167953600001L), week0.getMiddleMillisecond());
      assertNotNull(timeSeries0);
      
      Year year0 = new Year();
      assertEquals("2014", year0.toString());
      assertEquals(2014, year0.getYear());
      assertEquals(1388534400000L, year0.getFirstMillisecond());
      assertEquals(2014L, year0.getSerialIndex());
      assertEquals(1404302399999L, year0.getMiddleMillisecond());
      assertEquals(1420070399999L, year0.getLastMillisecond());
      assertNotNull(year0);
      
      Year year1 = (Year)year0.previous();
      assertNotSame(year1, year0);
      assertNotSame(year0, year1);
      assertEquals(1372766399999L, year1.getMiddleMillisecond());
      assertEquals("2013", year1.toString());
      assertEquals(1388534399999L, year1.getLastMillisecond());
      assertEquals(2013L, year1.getSerialIndex());
      assertEquals(1356998400000L, year1.getFirstMillisecond());
      assertEquals(2013, year1.getYear());
      assertEquals("2014", year0.toString());
      assertEquals(2014, year0.getYear());
      assertEquals(1388534400000L, year0.getFirstMillisecond());
      assertEquals(2014L, year0.getSerialIndex());
      assertEquals(1404302399999L, year0.getMiddleMillisecond());
      assertEquals(1420070399999L, year0.getLastMillisecond());
      assertFalse(year1.equals((Object)year0));
      assertFalse(year0.equals((Object)year1));
      assertNotNull(year1);
      
      // Undeclared exception!
      try {
        TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) year0, (RegularTimePeriod) year1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires start on or before end.
         //
      }
  }

  @Test
  public void test05() {}
//   @Test
//   public void test05()  throws Throwable  {
//       int int0 = 829;
//       Class<Object> class0 = Object.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, (Class) class0);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertNotNull(timeSeries0);
//       
//       FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
//       assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       assertNotNull(fixedMillisecond0);
//       
//       RegularTimePeriod regularTimePeriod0 = null;
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) fixedMillisecond0, regularTimePeriod0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'end' argument.
//          //
//       }
//   }

  @Test
  public void test06() {}
//   @Test
//   public void test06()  throws Throwable  {
//       int int0 = InputEvent.SHIFT_DOWN_MASK;
//       //  // Unstable assertion: assertEquals(64, int0);
//       
//       Class<Second> class0 = Second.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, (Class) class0);
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertNotNull(timeSeries0);
//       
//       Class<TimeSeries> class1 = TimeSeries.class;
//       FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertNotNull(fixedMillisecond0);
//       
//       MockDate mockDate0 = (MockDate)fixedMillisecond0.getTime();
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertNotNull(mockDate0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
//       //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
//       //  // Unstable assertion: assertNotNull(zoneInfo0);
//       
//       RegularTimePeriod regularTimePeriod0 = RegularTimePeriod.createInstance((Class) class1, (Date) mockDate0, (TimeZone) zoneInfo0);
//       //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertNull(regularTimePeriod0);
//       
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.createCopy(regularTimePeriod0, (RegularTimePeriod) fixedMillisecond0);
//        //  fail("Expecting exception: IllegalArgumentException");
//        // Unstable assertion
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'start' argument.
//          //
//       }
//   }

  @Test
  public void test07() {}
//   @Test
//   public void test07()  throws Throwable  {
//       Month month0 = new Month();
//       //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(2, month0.getMonth());
//       //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
//       //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
//       //  // Unstable assertion: assertNotNull(month0);
//       
//       MockDate mockDate0 = (MockDate)month0.getStart();
//       //  // Unstable assertion: assertEquals("Sat Feb 01 00:00:00 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(2, month0.getMonth());
//       //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
//       //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
//       //  // Unstable assertion: assertNotNull(mockDate0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
//       //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
//       //  // Unstable assertion: assertNotNull(zoneInfo0);
//       
//       Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0);
//       //  // Unstable assertion: assertEquals("Sat Feb 01 00:00:00 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(2, month0.getMonth());
//       //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
//       //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(1391385599999L, week0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(5, week0.getWeek());
//       //  // Unstable assertion: assertEquals(1391083199999L, week0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(106747L, week0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
//       //  // Unstable assertion: assertEquals(1390780800000L, week0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
//       //  // Unstable assertion: assertNotNull(week0);
//       
//       String string0 = null;
//       Class<Year> class0 = Year.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) week0, string0, string0, (Class) class0);
//       //  // Unstable assertion: assertEquals("Sat Feb 01 00:00:00 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(2, month0.getMonth());
//       //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
//       //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertNull(timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertNull(timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals(1391385599999L, week0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(5, week0.getWeek());
//       //  // Unstable assertion: assertEquals(1391083199999L, week0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(106747L, week0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
//       //  // Unstable assertion: assertEquals(1390780800000L, week0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
//       //  // Unstable assertion: assertNotNull(timeSeries0);
//       
//       int int0 = 3551;
//       int int1 = (-3);
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.createCopy(int0, int1);
//        //  fail("Expecting exception: IllegalArgumentException");
//        // Unstable assertion
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires start <= end.
//          //
//       }
//   }

  @Test
  public void test08() {}
//   @Test
//   public void test08()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(millisecond0);
//       
//       String string0 = "ScO[{]COolq*QqC";
//       Class<Quarter> class0 = Quarter.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) millisecond0, string0, string0, (Class) class0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries0);
//       
//       double double0 = 1.0;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, double0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = timeSeries0.hashCode();
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals((-1828937455), int0);
//       
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.createCopy(int0, int0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires start >= 0.
//          //
//       }
//   }

  @Test
  public void test09()  throws Throwable  {
      int int0 = (-6);
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, (Class) class0);
      assertEquals(true, timeSeries0.isEmpty());
      assertNull(timeSeries0.getDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertNotNull(timeSeries0);
      
      int int1 = 2153;
      // Undeclared exception!
      try {
        timeSeries0.delete(int1, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires start <= end.
         //
      }
  }

  @Test
  public void test10() {}
//   @Test
//   public void test10()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(millisecond0);
//       
//       String string0 = "`}Lzn!{T9lAsL\"bi/q";
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Object> class0 = Object.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, string0, string0, (Class) class0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("`}Lzn!{T9lAsL\"bi/q", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("`}Lzn!{T9lAsL\"bi/q", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(timeSeries0);
//       
//       Integer integer0 = JLayeredPane.PALETTE_LAYER;
//       assertEquals(100, (int)integer0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) integer0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("`}Lzn!{T9lAsL\"bi/q", timeSeries0.getDomainDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("`}Lzn!{T9lAsL\"bi/q", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.delete((RegularTimePeriod) millisecond0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("`}Lzn!{T9lAsL\"bi/q", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("`}Lzn!{T9lAsL\"bi/q", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//   }

  @Test
  public void test11() {}
//   @Test
//   public void test11()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.delete((RegularTimePeriod) millisecond0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//   }

  @Test
  public void test12() {}
//   @Test
//   public void test12()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       int int0 = 2;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) int0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.clear();
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//   }

  @Test
  public void test13() {}
//   @Test
//   public void test13()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertNotNull(day0);
//       
//       MockDate mockDate0 = (MockDate)day0.getStart();
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(zoneInfo0);
//       
//       Hour hour0 = new Hour((Date) mockDate0, (TimeZone) zoneInfo0);
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(0, hour0.getHour());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(hour0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0);
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(0, hour0.getHour());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.clear();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(0, hour0.getHour());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//   }

  @Test
  public void test14() {}
//   @Test
//   public void test14()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNotNull(timeSeries0);
//       
//       int int0 = 2;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) int0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals(false, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertEquals(1, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNull(timeSeriesDataItem0);
//       
//       boolean boolean0 = true;
//       timeSeries0.removeAgedItems((long) int0, boolean0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//   }

  @Test
  public void test15() {}
//   @Test
//   public void test15()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNotNull(timeSeries0);
//       
//       int int0 = 2;
//       boolean boolean0 = millisecond0.equals((Object) timeSeries0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) int0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(1, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals(false, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       //  // Unstable assertion: assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.removeAgedItems((long) int0, boolean0);
//       //  // Unstable assertion: assertEquals(2014, spreadsheetDate0.getYYYY());
//       //  // Unstable assertion: assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
//       //  // Unstable assertion: assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       //  // Unstable assertion: assertEquals(2, spreadsheetDate0.getMonth());
//       //  // Unstable assertion: assertEquals(41684, spreadsheetDate0.toSerial());
//       //  // Unstable assertion: assertEquals(320L, millisecond0.getMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       //  // Unstable assertion: assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       //  // Unstable assertion: assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
//       //  // Unstable assertion: assertNull(timeSeries0.getDescription());
//       //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
//       //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
//       //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
//       //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
//       //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//   }

  @Test
  public void test16() {}
//   @Test
//   public void test16()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertNotNull(hour0);
//       
//       String string0 = "org.jfree.chart.util.TableOrder";
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, string0, string0, (Class) class0);
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNotNull(timeSeries0);
//       
//       double double0 = 713.2106474193678;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) hour0, double0);
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getRangeDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = 0;
//       boolean boolean0 = timeSeries0.isEmpty();
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getRangeDescription());
//       assertFalse(boolean0);
//       
//       timeSeries0.removeAgedItems((long) int0, boolean0);
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("org.jfree.chart.util.TableOrder", timeSeries0.getRangeDescription());
//   }

  @Test
  public void test17() {}
//   @Test
//   public void test17()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(timeSeries0);
//       
//       int int0 = 2;
//       boolean boolean0 = millisecond0.equals((Object) timeSeries0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertFalse(boolean0);
//       
//       timeSeries0.removeAgedItems((long) int0, boolean0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       
//       timeSeries0.removeAgedItems((long) int0, boolean0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//   }

  @Test
  public void test18() {}
//   @Test
//   public void test18()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       Millisecond millisecond1 = (Millisecond)millisecond0.previous();
//       assertNotSame(millisecond1, millisecond0);
//       assertNotSame(millisecond0, millisecond1);
//       assertEquals(1392409281319L, millisecond1.getMiddleMillisecond());
//       assertEquals(1392409281319L, millisecond1.getLastMillisecond());
//       assertEquals(1392409281319L, millisecond1.getFirstMillisecond());
//       assertEquals(3601570881319L, millisecond1.getSerialIndex());
//       assertEquals(319L, millisecond1.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertFalse(millisecond1.equals((Object)millisecond0));
//       assertFalse(millisecond0.equals((Object)millisecond1));
//       assertNotNull(millisecond1);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertNotSame(millisecond0, millisecond1);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertFalse(millisecond0.equals((Object)millisecond1));
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       Integer integer0 = JLayeredPane.PALETTE_LAYER;
//       assertEquals(100, (int)integer0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertNotSame(millisecond0, millisecond1);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertFalse(millisecond0.equals((Object)millisecond1));
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) integer0);
//       assertNotSame(millisecond0, millisecond1);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertFalse(millisecond0.equals((Object)millisecond1));
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond1, (double) integer0);
//       assertNotSame(millisecond1, millisecond0);
//       assertNotSame(millisecond0, millisecond1);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(1392409281319L, millisecond1.getMiddleMillisecond());
//       assertEquals(1392409281319L, millisecond1.getLastMillisecond());
//       assertEquals(1392409281319L, millisecond1.getFirstMillisecond());
//       assertEquals(3601570881319L, millisecond1.getSerialIndex());
//       assertEquals(319L, millisecond1.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertFalse(millisecond1.equals((Object)millisecond0));
//       assertFalse(millisecond0.equals((Object)millisecond1));
//       assertNull(timeSeriesDataItem1);
//   }

  @Test
  public void test19() {}
//   @Test
//   public void test19()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(millisecond0);
//       
//       int int0 = SwingConstants.EAST;
//       assertEquals(3, int0);
//       
//       int int1 = 0;
//       assertFalse(int1 == int0);
//       
//       String string0 = "ScO[{]COolq*QqC";
//       Class<Quarter> class0 = Quarter.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) millisecond0, string0, string0, (Class) class0);
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getRangeDescription());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.setMaximumItemCount(int1);
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getRangeDescription());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertFalse(int1 == int0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) int0);
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getRangeDescription());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertFalse(int0 == int1);
//       assertNull(timeSeriesDataItem0);
//   }

  @Test
  public void test20()  throws Throwable  {
      int int0 = ComponentEvent.COMPONENT_SHOWN;
      assertEquals(102, int0);
      
      String string0 = "TZoze";
      Class<Hour> class0 = Hour.class;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, string0, string0, (Class) class0);
      assertNull(timeSeries0.getDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals("TZoze", timeSeries0.getDomainDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("TZoze", timeSeries0.getRangeDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertNotNull(timeSeries0);
      
      Year year0 = null;
      // Undeclared exception!
      try {
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) year0, (double) int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'period' argument.
         //
      }
  }

  @Test
  public void test21() {}
//   @Test
//   public void test21()  throws Throwable  {
//       Minute minute0 = new Minute();
//       assertEquals(1392409289999L, minute0.getMiddleMillisecond());
//       assertEquals(60026181L, minute0.getSerialIndex());
//       assertEquals(21, minute0.getMinute());
//       assertEquals(1392409260000L, minute0.getFirstMillisecond());
//       assertEquals(1392409319999L, minute0.getLastMillisecond());
//       assertEquals(20, minute0.getHourValue());
//       assertNotNull(minute0);
//       
//       int int0 = 1;
//       int int1 = minute0.getHourValue();
//       assertEquals(1392409289999L, minute0.getMiddleMillisecond());
//       assertEquals(60026181L, minute0.getSerialIndex());
//       assertEquals(21, minute0.getMinute());
//       assertEquals(1392409260000L, minute0.getFirstMillisecond());
//       assertEquals(1392409319999L, minute0.getLastMillisecond());
//       assertEquals(20, minute0.getHourValue());
//       assertFalse(int1 == int0);
//       assertEquals(20, int1);
//       
//       String string0 = "Null 'period' argument.";
//       Class<Object> class0 = Object.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, string0, string0, (Class) class0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Null 'period' argument.", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Null 'period' argument.", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertFalse(int0 == int1);
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) minute0, (Number) int1);
//       assertEquals(1392409289999L, minute0.getMiddleMillisecond());
//       assertEquals(60026181L, minute0.getSerialIndex());
//       assertEquals(21, minute0.getMinute());
//       assertEquals(1392409260000L, minute0.getFirstMillisecond());
//       assertEquals(1392409319999L, minute0.getLastMillisecond());
//       assertEquals(20, minute0.getHourValue());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("Null 'period' argument.", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Null 'period' argument.", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertFalse(int1 == int0);
//       assertFalse(int0 == int1);
//       assertNull(timeSeriesDataItem0);
//       
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
//         fail("Expecting exception: RuntimeException");
//       
//       } catch(RuntimeException e) {
//          //
//          // You are trying to add data where the time period class is org.jfree.data.time.Minute, but the TimeSeries is expecting an instance of java.lang.Object.
//          //
//       }
//   }

  @Test
  public void test22() {}
//   @Test
//   public void test22()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertNotNull(hour0);
//       
//       Day day0 = hour0.getDay();
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(day0);
//       
//       Class<TimeSeriesDataItem> class0 = TimeSeriesDataItem.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, (Class) class0);
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNotNull(timeSeries0);
//       
//       int int0 = (-1);
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) int0);
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.update((RegularTimePeriod) day0, (Number) int0);
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//   }

  @Test
  public void test23() {}
//   @Test
//   public void test23()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNotNull(millisecond0);
//       
//       String string0 = ">JkTm(";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) string0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries0);
//       
//       int int0 = SwingConstants.EAST;
//       assertEquals(3, int0);
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.update((RegularTimePeriod) millisecond0, (Number) int0);
//         fail("Expecting exception: RuntimeException");
//       
//       } catch(RuntimeException e) {
//          //
//          // TimeSeries.update(TimePeriod, Number):  period does not exist.
//          //
//       }
//   }

  @Test
  public void test24() {}
//   @Test
//   public void test24()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertNotNull(day0);
//       
//       MockDate mockDate0 = (MockDate)day0.getStart();
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertNotNull(mockDate0);
//       
//       int int0 = day0.getMonth();
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2, int0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(zoneInfo0);
//       
//       Hour hour0 = new Hour((Date) mockDate0, (TimeZone) zoneInfo0);
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(0, hour0.getHour());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(hour0);
//       
//       EvoSuiteFile evoSuiteFile0 = null;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0);
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(0, hour0.getHour());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(timeSeries0);
//       
//       String string0 = "JDBCPieDataset: swallowing exception.";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       assertFalse(boolean0);
//       
//       timeSeries0.add((RegularTimePeriod) day0, (double) int0, boolean0);
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(0, hour0.getHour());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals("GMT", zoneInfo0.getID());
//   }

  @Test
  public void test25() {}
//   @Test
//   public void test25()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries0);
//       
//       Number number0 = timeSeries0.getValue((RegularTimePeriod) millisecond0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(number0);
//   }

  @Test
  public void test26() {}
//   @Test
//   public void test26()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertNotNull(hour0);
//       
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, (Class) class0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(20, hour0.getHour());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       Day day0 = null;
//       // Undeclared exception!
//       try {
//         TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) day0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'period' argument.
//          //
//       }
//   }

  @Test
  public void test27() {}
//   @Test
//   public void test27()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       Integer integer0 = JLayeredPane.PALETTE_LAYER;
//       assertEquals(100, (int)integer0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(timeSeries0);
//       
//       TimeSeries timeSeries1 = new TimeSeries((Comparable) spreadsheetDate0);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertNotNull(timeSeries1);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) integer0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertNull(timeSeriesDataItem0);
//       
//       Collection collection0 = timeSeries1.getTimePeriodsUniqueToOtherSeries(timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertNotNull(collection0);
//   }

  @Test
  public void test28() {}
//   @Test
//   public void test28()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       Integer integer0 = JLayeredPane.PALETTE_LAYER;
//       assertEquals(100, (int)integer0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) integer0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNull(timeSeriesDataItem0);
//       
//       Collection collection0 = timeSeries0.getTimePeriodsUniqueToOtherSeries(timeSeries0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(collection0);
//   }

  @Test
  public void test29() {}
//   @Test
//   public void test29()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertNotNull(hour0);
//       
//       Day day0 = hour0.getDay();
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertNotNull(day0);
//       
//       Class<TimeSeriesDataItem> class0 = TimeSeriesDataItem.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, (Class) class0);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       int int0 = (-1);
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) int0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertNull(timeSeriesDataItem0);
//       
//       Collection collection0 = timeSeries0.getTimePeriods();
//       assertEquals(false, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertNotNull(collection0);
//   }

  @Test
  public void test30() {}
//   @Test
//   public void test30()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertNotNull(hour0);
//       
//       Day day0 = hour0.getDay();
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertNotNull(day0);
//       
//       Class<TimeSeriesDataItem> class0 = TimeSeriesDataItem.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, (Class) class0);
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertNotNull(timeSeries0);
//       
//       int int0 = (-1);
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) int0);
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.getDataItem((RegularTimePeriod) day0);
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertNotNull(timeSeriesDataItem1);
//   }

  @Test
  public void test31()  throws Throwable  {
      String string0 = "1*{(%GW9`Q|y";
      Class<Week> class0 = Week.class;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) string0, string0, string0, (Class) class0);
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertNull(timeSeries0.getDescription());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals("1*{(%GW9`Q|y", timeSeries0.getDomainDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("1*{(%GW9`Q|y", timeSeries0.getRangeDescription());
      assertNotNull(timeSeries0);
      
      long long0 = (-7252L);
      // Undeclared exception!
      try {
        timeSeries0.setMaximumItemAge(long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'periods' argument.
         //
      }
  }

  @Test
  public void test32() {}
//   @Test
//   public void test32()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       Integer integer0 = JLayeredPane.PALETTE_LAYER;
//       assertEquals(100, (int)integer0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.setMaximumItemAge((long) integer0);
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(100L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//   }

  @Test
  public void test33() {}
//   @Test
//   public void test33()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertNotNull(hour0);
//       
//       String string0 = "";
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, string0, string0, (Class) class0);
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNotNull(timeSeries0);
//       
//       double double0 = 0.0;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) hour0, double0);
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = 0;
//       timeSeries0.setMaximumItemCount(int0);
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//   }

  @Test
  public void test34() {}
//   @Test
//   public void test34()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(millisecond0);
//       
//       String string0 = "ScO[{]COolq*QqC";
//       String string1 = null;
//       Class<Quarter> class0 = null;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) millisecond0, string0, string1, (Class) class0);
//       assertNull(timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("ScO[{]COolq*QqC", timeSeries0.getDomainDescription());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.setDomainDescription(string1);
//       assertNull(timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       
//       int int0 = timeSeries0.hashCode();
//       assertNull(timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals((-1552660357), int0);
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.setMaximumItemCount(int0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Negative 'maximum' argument.
//          //
//       }
//   }

  @Test
  public void test35() {}
//   @Test
//   public void test35()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(millisecond0);
//       
//       MockDate mockDate0 = (MockDate)millisecond0.getEnd();
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(mockDate0);
//       
//       SpreadsheetDate spreadsheetDate0 = (SpreadsheetDate)SerialDate.createInstance((Date) mockDate0);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(spreadsheetDate0);
//       
//       Class<Day> class0 = Day.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(timeSeries0);
//       
//       int int0 = 2;
//       int int1 = timeSeries0.getIndex((RegularTimePeriod) millisecond0);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertFalse(int1 == int0);
//       assertEquals((-1), int1);
//       
//       TimeSeries timeSeries1 = timeSeries0.createCopy(int0, int0);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertFalse(int0 == int1);
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertNotNull(timeSeries1);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (double) int1);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertFalse(int1 == int0);
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeries timeSeries2 = timeSeries1.addAndOrUpdate(timeSeries0);
//       assertNotSame(timeSeries1, timeSeries2);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries0, timeSeries2);
//       assertNotSame(timeSeries2, timeSeries0);
//       assertNotSame(timeSeries2, timeSeries1);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(true, timeSeries2.getNotify());
//       assertEquals("Time", timeSeries2.getDomainDescription());
//       assertNull(timeSeries2.getDescription());
//       assertEquals(0, timeSeries2.getItemCount());
//       assertEquals(2147483647, timeSeries2.getMaximumItemCount());
//       assertEquals("Value", timeSeries2.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries2.getMaximumItemAge());
//       assertEquals(true, timeSeries2.isEmpty());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertFalse(int0 == int1);
//       assertFalse(timeSeries1.equals((Object)timeSeries2));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries0.equals((Object)timeSeries2));
//       assertFalse(timeSeries2.equals((Object)timeSeries0));
//       assertFalse(timeSeries2.equals((Object)timeSeries1));
//       assertNotNull(timeSeries2);
//       
//       Double double0 = (Double)timeSeries1.getValue((RegularTimePeriod) millisecond0);
//       assertNotSame(timeSeries1, timeSeries2);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries0, timeSeries2);
//       assertEquals(14, spreadsheetDate0.getDayOfMonth());
//       assertEquals(2014, spreadsheetDate0.getYYYY());
//       assertEquals(41684, spreadsheetDate0.toSerial());
//       assertEquals(2, spreadsheetDate0.getMonth());
//       assertNull(spreadsheetDate0.getDescription());
//       assertEquals(6, spreadsheetDate0.getDayOfWeek());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertFalse(int0 == int1);
//       assertFalse(timeSeries1.equals((Object)timeSeries2));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries0.equals((Object)timeSeries2));
//       assertEquals((-1.0), (double)double0, 0.01D);
//   }

  @Test
  public void test36()  throws Throwable  {
      int int0 = 1849;
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(int0);
      assertNull(spreadsheetDate0.getDescription());
      assertEquals(1, spreadsheetDate0.getMonth());
      assertEquals(1, spreadsheetDate0.getDayOfWeek());
      assertEquals(1849, spreadsheetDate0.toSerial());
      assertEquals(1905, spreadsheetDate0.getYYYY());
      assertEquals(22, spreadsheetDate0.getDayOfMonth());
      assertNotNull(spreadsheetDate0);
      
      Class<Object> class0 = Object.class;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) spreadsheetDate0, (Class) class0);
      assertNull(spreadsheetDate0.getDescription());
      assertEquals(1, spreadsheetDate0.getMonth());
      assertEquals(1, spreadsheetDate0.getDayOfWeek());
      assertEquals(1849, spreadsheetDate0.toSerial());
      assertEquals(1905, spreadsheetDate0.getYYYY());
      assertEquals(22, spreadsheetDate0.getDayOfMonth());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(true, timeSeries0.getNotify());
      assertNull(timeSeries0.getDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertNotNull(timeSeries0);
      
      // Undeclared exception!
      try {
        RegularTimePeriod regularTimePeriod0 = timeSeries0.getNextTimePeriod();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test37() {}
//   @Test
//   public void test37()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertNotNull(millisecond0);
//       
//       String string0 = "TO]^_WVf";
//       Class<Quarter> class0 = Quarter.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) millisecond0, string0, string0, (Class) class0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("TO]^_WVf", timeSeries0.getDomainDescription());
//       assertEquals("TO]^_WVf", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNotNull(timeSeries0);
//       
//       TimeSeries timeSeries1 = (TimeSeries)timeSeries0.clone();
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals("TO]^_WVf", timeSeries1.getRangeDescription());
//       assertEquals("TO]^_WVf", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("TO]^_WVf", timeSeries0.getDomainDescription());
//       assertEquals("TO]^_WVf", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertNotNull(timeSeries1);
//   }

  @Test
  public void test38() {}
//   @Test
//   public void test38()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertNotNull(day0);
//       
//       MockDate mockDate0 = (MockDate)day0.getStart();
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(zoneInfo0);
//       
//       Hour hour0 = new Hour((Date) mockDate0, (TimeZone) zoneInfo0);
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(0, hour0.getHour());
//       assertNotNull(hour0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0);
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(0, hour0.getHour());
//       assertNotNull(timeSeries0);
//       
//       List list0 = timeSeries0.getItems();
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(true, list0.isEmpty());
//       assertEquals(0, list0.size());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(0, hour0.getHour());
//       assertNotNull(list0);
//   }

  @Test
  public void test39() {}
//   @Test
//   public void test39()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertNotNull(day0);
//       
//       MockDate mockDate0 = (MockDate)day0.getStart();
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(mockDate0);
//       
//       int int0 = day0.getMonth();
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2, int0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(zoneInfo0);
//       
//       Hour hour0 = new Hour((Date) mockDate0, (TimeZone) zoneInfo0);
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(0, hour0.getHour());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(hour0);
//       
//       EvoSuiteFile evoSuiteFile0 = null;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(0, hour0.getHour());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertNotNull(timeSeries0);
//       
//       String string0 = ", but the TimeSeries is expecting an instance of ";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       assertFalse(boolean0);
//       
//       timeSeries0.add((RegularTimePeriod) day0, (double) int0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(0, hour0.getHour());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.add((RegularTimePeriod) day0, (double) int0, boolean0);
//         fail("Expecting exception: RuntimeException");
//       
//       } catch(RuntimeException e) {
//          //
//          // You are attempting to add an observation for the time period 14-February-2014 but the series already contains an observation for that time period. Duplicates are not permitted.  Try using the addOrUpdate() method.
//          //
//       }
//   }

  @Test
  public void test40() {}
//   @Test
//   public void test40()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(day0);
//       
//       MockDate mockDate0 = (MockDate)day0.getStart();
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(mockDate0);
//       
//       int int0 = day0.getMonth();
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(2, int0);
//       
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(zoneInfo0);
//       
//       Hour hour0 = new Hour((Date) mockDate0, (TimeZone) zoneInfo0);
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(0, hour0.getHour());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(hour0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0);
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(0, hour0.getHour());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.add((RegularTimePeriod) day0, (Number) int0);
//       assertEquals("Fri Feb 14 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(1000416L, hour0.getSerialIndex());
//       assertEquals(1392337799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1392339599999L, hour0.getLastMillisecond());
//       assertEquals(1392336000000L, hour0.getFirstMillisecond());
//       assertEquals(0, hour0.getHour());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(2014, day0.getYear());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//   }

  @Test
  public void test41() {}
//   @Test
//   public void test41()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertNotNull(millisecond0);
//       
//       String string0 = "TO]^_WVf";
//       Class<Quarter> class0 = Quarter.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) millisecond0, string0, string0, (Class) class0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("TO]^_WVf", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("TO]^_WVf", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) millisecond0);
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("TO]^_WVf", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("TO]^_WVf", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeriesDataItem0);
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.add(timeSeriesDataItem0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'item' argument.
//          //
//       }
//   }

  @Test
  public void test42() {}
//   @Test
//   public void test42()  throws Throwable  {
//       Hour hour0 = new Hour();
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertNotNull(hour0);
//       
//       String string0 = "";
//       Class<Minute> class0 = Minute.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) hour0, string0, string0, (Class) class0);
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNotNull(timeSeries0);
//       
//       TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) hour0, (RegularTimePeriod) hour0);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertNotNull(timeSeries1);
//       
//       boolean boolean0 = timeSeries1.equals((Object) timeSeries0);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertEquals(1392408000000L, hour0.getFirstMillisecond());
//       assertEquals(20, hour0.getHour());
//       assertEquals(1392409799999L, hour0.getMiddleMillisecond());
//       assertEquals(2014, hour0.getYear());
//       assertEquals(2, hour0.getMonth());
//       assertEquals(1000436L, hour0.getSerialIndex());
//       assertEquals(1392411599999L, hour0.getLastMillisecond());
//       assertEquals(14, hour0.getDayOfMonth());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("", timeSeries1.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals("", timeSeries1.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertTrue(boolean0);
//   }

  @Test
  public void test43() {}
//   @Test
//   public void test43()  throws Throwable  {
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(millisecond0);
//       
//       String string0 = "TO]^_WVf";
//       Class<Quarter> class0 = Quarter.class;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) millisecond0, string0, string0, (Class) class0);
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("TO]^_WVf", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("TO]^_WVf", timeSeries0.getRangeDescription());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.setRangeDescription(string0);
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals("TO]^_WVf", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("TO]^_WVf", timeSeries0.getRangeDescription());
//   }
}
