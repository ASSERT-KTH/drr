/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:00:24 GMT 2014
 */

package org.jfree.data.time;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;



import org.evosuite.runtime.System;

import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.TimePeriodFormatException;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class WeekEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      
      String string0 = week0.toString();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("Week 7, 2014", string0);
      
      // Undeclared exception!
      try {
        Week week1 = Week.parseWeek(string0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the week.
         //
      }
  }

  @Test
  public void test01()  throws Throwable  {
      String string0 = "Zet=Y}YCEU8x8";
      // Undeclared exception!
      try {
        Week week0 = Week.parseWeek(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not find separator.
         //
      }
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = null;
      Week week0 = Week.parseWeek(string0);
      assertNull(week0);
  }

  @Test
  public void test03()  throws Throwable  {
      long long0 = (-1276L);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(long0);
      //  // Unstable assertion: assertNotNull(fixedMillisecond0);
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getFirstMillisecond());
      
      MockDate mockDate0 = (MockDate)fixedMillisecond0.getEnd();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:59:58 GMT 1969", mockDate0.toString());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getFirstMillisecond());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      
      Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:59:58 GMT 1969", mockDate0.toString());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      
      int int0 = week0.compareTo((Object) fixedMillisecond0);
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:59:58 GMT 1969", mockDate0.toString());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1276L), fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test04()  throws Throwable  {
      int int0 = 1901;
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(int0);
      //  // Unstable assertion: assertNotNull(spreadsheetDate0);
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      
      Date date0 = spreadsheetDate0.toDate();
      //  // Unstable assertion: assertNotNull(date0);
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      
      Week week0 = new Week(date0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals(100976L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-2045087999105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-2044483199106L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-2044785599106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(11, week0.getWeek());
      //  // Unstable assertion: assertEquals(1905, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      
      MockDate mockDate0 = new MockDate();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      Week week1 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1391990400895L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(1392292800894L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392595200894L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      
      int int1 = week0.compareTo((Object) week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals(100976L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-2045087999105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-2044483199106L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-2044785599106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(11, week0.getWeek());
      //  // Unstable assertion: assertEquals(1905, week0.getYearValue());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1391990400895L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(1392292800894L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392595200894L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertEquals((-109), int1);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(int0 == int1);
  }

  @Test
  public void test05()  throws Throwable  {
      int int0 = 1901;
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(int0);
      //  // Unstable assertion: assertNotNull(spreadsheetDate0);
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      
      Date date0 = spreadsheetDate0.toDate();
      //  // Unstable assertion: assertNotNull(date0);
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      
      Week week0 = new Week(date0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-2045087999105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(11, week0.getWeek());
      //  // Unstable assertion: assertEquals((-2044785599106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1905, week0.getYearValue());
      //  // Unstable assertion: assertEquals(100976L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-2044483199106L), week0.getLastMillisecond());
      
      MockDate mockDate0 = new MockDate();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      int int1 = week0.compareTo((Object) mockDate0);
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-2045087999105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(11, week0.getWeek());
      //  // Unstable assertion: assertEquals((-2044785599106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1905, week0.getYearValue());
      //  // Unstable assertion: assertEquals(100976L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-2044483199106L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1, int1);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
  }

  @Test
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.UK;
      //  // Unstable assertion: assertNotNull(locale0);
      //  // Unstable assertion: assertEquals("en_GB", locale0.toString());
      //  // Unstable assertion: assertEquals("en", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("eng", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("GBR", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("GB", locale0.getCountry());
      
      Hour hour0 = new Hour();
      //  // Unstable assertion: assertNotNull(hour0);
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      
      MockDate mockDate0 = (MockDate)hour0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      
      Week week0 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      
      Week week1 = new Week((Date) mockDate0, (TimeZone) zoneInfo0, locale0);
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(1392292800894L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391990400895L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals("en_GB", locale0.toString());
      //  // Unstable assertion: assertEquals("en", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("eng", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("GBR", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("GB", locale0.getCountry());
      //  // Unstable assertion: assertTrue(week1.equals((Object)week0));
      
      boolean boolean0 = week0.equals((Object) week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(1392292800894L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391990400895L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals("en_GB", locale0.toString());
      //  // Unstable assertion: assertEquals("en", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("eng", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("GBR", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("GB", locale0.getCountry());
      //  // Unstable assertion: assertTrue(boolean0);
      //  // Unstable assertion: assertTrue(week0.equals((Object)week1));
      //  // Unstable assertion: assertTrue(week1.equals((Object)week0));
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = 2131;
      Week week0 = new Week(int0, int0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals(113026L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(5130561599999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(5130863999999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(5130259200000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(83, week0.getWeek());
      //  // Unstable assertion: assertEquals(2131, week0.getYearValue());
      
      Second second0 = new Second();
      //  // Unstable assertion: assertNotNull(second0);
      //  // Unstable assertion: assertEquals(1392409280895L, second0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, second0.getSecond());
      //  // Unstable assertion: assertEquals(1392409281394L, second0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281894L, second0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(3601570880L, second0.getSerialIndex());
      
      MockDate mockDate0 = (MockDate)second0.getEnd();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals(1392409280895L, second0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, second0.getSecond());
      //  // Unstable assertion: assertEquals(1392409281394L, second0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281894L, second0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(3601570880L, second0.getSerialIndex());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      Week week1 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals(1392409280895L, second0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, second0.getSecond());
      //  // Unstable assertion: assertEquals(1392409281394L, second0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281894L, second0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(3601570880L, second0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391990400895L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392292800894L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      
      boolean boolean0 = week0.equals((Object) week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals(1392409280895L, second0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, second0.getSecond());
      //  // Unstable assertion: assertEquals(1392409281394L, second0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281894L, second0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(3601570880L, second0.getSerialIndex());
      //  // Unstable assertion: assertEquals(113026L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(5130561599999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(5130863999999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(5130259200000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(83, week0.getWeek());
      //  // Unstable assertion: assertEquals(2131, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391990400895L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392292800894L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
  }

  @Test
  public void test08()  throws Throwable  {
      int int0 = 1901;
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(int0);
      //  // Unstable assertion: assertNotNull(spreadsheetDate0);
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      
      Date date0 = spreadsheetDate0.toDate();
      //  // Unstable assertion: assertNotNull(date0);
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      
      Week week0 = new Week(date0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals(11, week0.getWeek());
      //  // Unstable assertion: assertEquals((-2044483199106L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-2044785599106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-2045087999105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(100976L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1905, week0.getYearValue());
      
      MockDate mockDate0 = new MockDate();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      boolean boolean0 = week0.equals((Object) mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals("Wed Mar 15 00:00:00 GMT 1905", date0.toString());
      //  // Unstable assertion: assertEquals(4, spreadsheetDate0.getDayOfWeek());
      //  // Unstable assertion: assertEquals(1901, spreadsheetDate0.toSerial());
      //  // Unstable assertion: assertEquals(3, spreadsheetDate0.getMonth());
      //  // Unstable assertion: assertEquals(15, spreadsheetDate0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1905, spreadsheetDate0.getYYYY());
      //  // Unstable assertion: assertNull(spreadsheetDate0.getDescription());
      //  // Unstable assertion: assertEquals(11, week0.getWeek());
      //  // Unstable assertion: assertEquals((-2044483199106L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-2044785599106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-2045087999105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(100976L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1905, week0.getYearValue());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test09()  throws Throwable  {
      int int0 = 0;
      Week week0 = new Week(int0, int0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals((-62167651200001L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-62168256000000L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-62167953600001L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(0L, week0.getSerialIndex());
      
      Quarter quarter0 = new Quarter();
      //  // Unstable assertion: assertNotNull(quarter0);
      //  // Unstable assertion: assertEquals(1392422400894L, quarter0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1388534400895L, quarter0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1, quarter0.getQuarter());
      //  // Unstable assertion: assertEquals(2014, quarter0.getYearValue());
      //  // Unstable assertion: assertEquals(1396310400894L, quarter0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8057L, quarter0.getSerialIndex());
      
      Year year0 = quarter0.getYear();
      //  // Unstable assertion: assertNotNull(year0);
      //  // Unstable assertion: assertEquals(1392422400894L, quarter0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1388534400895L, quarter0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1, quarter0.getQuarter());
      //  // Unstable assertion: assertEquals(2014, quarter0.getYearValue());
      //  // Unstable assertion: assertEquals(1396310400894L, quarter0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8057L, quarter0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1404302399999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1420070399999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1388534400000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      
      Week week1 = new Week(int0, year0);
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals(1392422400894L, quarter0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1388534400895L, quarter0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1, quarter0.getQuarter());
      //  // Unstable assertion: assertEquals(2014, quarter0.getYearValue());
      //  // Unstable assertion: assertEquals(1396310400894L, quarter0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8057L, quarter0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1387756800000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106742L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1388059199999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1388361599999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(0, week1.getWeek());
      //  // Unstable assertion: assertEquals(1404302399999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1420070399999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1388534400000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      
      boolean boolean0 = week0.equals((Object) week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals((-62167651200001L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-62168256000000L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-62167953600001L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(0L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392422400894L, quarter0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1388534400895L, quarter0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1, quarter0.getQuarter());
      //  // Unstable assertion: assertEquals(2014, quarter0.getYearValue());
      //  // Unstable assertion: assertEquals(1396310400894L, quarter0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8057L, quarter0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1387756800000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106742L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1388059199999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1388361599999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(0, week1.getWeek());
      //  // Unstable assertion: assertEquals(1404302399999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1420070399999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1388534400000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
  }

  @Test
  public void test10()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      
      Week week1 = (Week)week0.next();
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1393199999999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392595200000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(8, week1.getWeek());
      //  // Unstable assertion: assertEquals(106750L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392897599999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 31;
      System.setCurrentTimeMillis((long) int0);
      Hour hour0 = new Hour();
      //  // Unstable assertion: assertNotNull(hour0);
      //  // Unstable assertion: assertEquals(12, hour0.getMonth());
      //  // Unstable assertion: assertEquals(31, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-3599105L), hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(613655L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, hour0.getYear());
      //  // Unstable assertion: assertEquals(23, hour0.getHour());
      //  // Unstable assertion: assertEquals(894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1799106L), hour0.getMiddleMillisecond());
      
      MockDate mockDate0 = (MockDate)hour0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals(12, hour0.getMonth());
      //  // Unstable assertion: assertEquals(31, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-3599105L), hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(613655L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, hour0.getYear());
      //  // Unstable assertion: assertEquals(23, hour0.getHour());
      //  // Unstable assertion: assertEquals(894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1799106L), hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:00:00 GMT 1969", mockDate0.toString());
      
      Week week0 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals(12, hour0.getMonth());
      //  // Unstable assertion: assertEquals(31, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-3599105L), hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(613655L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, hour0.getYear());
      //  // Unstable assertion: assertEquals(23, hour0.getHour());
      //  // Unstable assertion: assertEquals(894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1799106L), hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:00:00 GMT 1969", mockDate0.toString());
      
      Week week1 = (Week)week0.previous();
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertEquals((-259200001L), week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-864000000L), week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-561600001L), week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(52, week1.getWeek());
      //  // Unstable assertion: assertEquals(104409L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, week1.getYearValue());
      //  // Unstable assertion: assertEquals(12, hour0.getMonth());
      //  // Unstable assertion: assertEquals(31, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-3599105L), hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(613655L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, hour0.getYear());
      //  // Unstable assertion: assertEquals(23, hour0.getHour());
      //  // Unstable assertion: assertEquals(894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1799106L), hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:00:00 GMT 1969", mockDate0.toString());
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      
      Week week2 = (Week)week1.next();
      //  // Unstable assertion: assertNotNull(week2);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertNotSame(week1, week2);
      //  // Unstable assertion: assertNotSame(week2, week1);
      //  // Unstable assertion: assertNotSame(week2, week0);
      //  // Unstable assertion: assertNotSame(week0, week2);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertEquals((-259200001L), week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-864000000L), week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-561600001L), week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(52, week1.getWeek());
      //  // Unstable assertion: assertEquals(104409L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, week1.getYearValue());
      //  // Unstable assertion: assertEquals(12, hour0.getMonth());
      //  // Unstable assertion: assertEquals(31, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals((-3599105L), hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(613655L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1969, hour0.getYear());
      //  // Unstable assertion: assertEquals(23, hour0.getHour());
      //  // Unstable assertion: assertEquals(894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-1799106L), hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(43199999L, week2.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week2.getWeek());
      //  // Unstable assertion: assertEquals((-259200000L), week2.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week2.getSerialIndex());
      //  // Unstable assertion: assertEquals(1970, week2.getYearValue());
      //  // Unstable assertion: assertEquals(345599999L, week2.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("Wed Dec 31 23:00:00 GMT 1969", mockDate0.toString());
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week2));
      //  // Unstable assertion: assertFalse(week2.equals((Object)week1));
      //  // Unstable assertion: assertTrue(week2.equals((Object)week0));
      //  // Unstable assertion: assertTrue(week0.equals((Object)week2));
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      Week week0 = new Week(int0, int0);
      assertNotNull(week0);
      assertEquals(0L, week0.getSerialIndex());
      assertEquals((-62168256000000L), week0.getFirstMillisecond());
      assertEquals(0, week0.getWeek());
      assertEquals((-62167953600001L), week0.getMiddleMillisecond());
      assertEquals((-62167651200001L), week0.getLastMillisecond());
      assertEquals(0, week0.getYearValue());
      
      Week week1 = (Week)week0.previous();
      assertNotNull(week1);
      assertNotSame(week0, week1);
      assertNotSame(week1, week0);
      assertEquals(0L, week0.getSerialIndex());
      assertEquals((-62168256000000L), week0.getFirstMillisecond());
      assertEquals(0, week0.getWeek());
      assertEquals((-62167953600001L), week0.getMiddleMillisecond());
      assertEquals((-62167651200001L), week0.getLastMillisecond());
      assertEquals(0, week0.getYearValue());
      assertEquals((-1L), week1.getSerialIndex());
      assertEquals(0, week1.getYearValue());
      assertEquals((-62168860800000L), week1.getFirstMillisecond());
      assertEquals(-1, week1.getWeek());
      assertEquals((-62168256000001L), week1.getLastMillisecond());
      assertEquals((-62168558400001L), week1.getMiddleMillisecond());
      assertFalse(week0.equals((Object)week1));
      assertFalse(week1.equals((Object)week0));
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 8;
      Month month0 = new Month(int0, int0);
      //  // Unstable assertion: assertNotNull(month0);
      //  // Unstable assertion: assertEquals((-61896528000000L), month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getMonth());
      //  // Unstable assertion: assertEquals(104L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61895188800001L), month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-61893849600001L), month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getYearValue());
      
      MockDate mockDate0 = (MockDate)month0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals((-61896528000000L), month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getMonth());
      //  // Unstable assertion: assertEquals(104L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61895188800001L), month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-61893849600001L), month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getYearValue());
      //  // Unstable assertion: assertEquals("Wed Aug 01 00:00:00 GMT 8", mockDate0.toString());
      
      Year year0 = new Year((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(year0);
      //  // Unstable assertion: assertEquals((-61896528000000L), month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getMonth());
      //  // Unstable assertion: assertEquals(104L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61895188800001L), month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-61893849600001L), month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getYearValue());
      //  // Unstable assertion: assertEquals((-61883308799106L), year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("8", year0.toString());
      //  // Unstable assertion: assertEquals((-61899119999106L), year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(8, year0.getYear());
      //  // Unstable assertion: assertEquals(8L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61914931199105L), year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Wed Aug 01 00:00:00 GMT 8", mockDate0.toString());
      
      MockDate mockDate1 = (MockDate)year0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate1);
      //  // Unstable assertion: assertNotSame(mockDate1, mockDate0);
      //  // Unstable assertion: assertNotSame(mockDate0, mockDate1);
      //  // Unstable assertion: assertEquals((-61896528000000L), month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getMonth());
      //  // Unstable assertion: assertEquals(104L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61895188800001L), month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-61893849600001L), month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getYearValue());
      //  // Unstable assertion: assertEquals("Sun Jan 01 00:00:00 GMT 8", mockDate1.toString());
      //  // Unstable assertion: assertEquals((-61883308799106L), year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("8", year0.toString());
      //  // Unstable assertion: assertEquals((-61899119999106L), year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(8, year0.getYear());
      //  // Unstable assertion: assertEquals(8L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61914931199105L), year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Wed Aug 01 00:00:00 GMT 8", mockDate0.toString());
      //  // Unstable assertion: assertFalse(mockDate1.equals((Object)mockDate0));
      //  // Unstable assertion: assertFalse(mockDate0.equals((Object)mockDate1));
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      
      Locale locale0 = Locale.ITALIAN;
      //  // Unstable assertion: assertNotNull(locale0);
      //  // Unstable assertion: assertEquals("ita", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("", locale0.getCountry());
      //  // Unstable assertion: assertEquals("it", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("it", locale0.toString());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      
      Week week0 = new Week((Date) mockDate1, (TimeZone) zoneInfo0, locale0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertNotSame(mockDate1, mockDate0);
      //  // Unstable assertion: assertNotSame(mockDate0, mockDate1);
      //  // Unstable assertion: assertEquals((-61896528000000L), month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getMonth());
      //  // Unstable assertion: assertEquals(104L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61895188800001L), month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals((-61893849600001L), month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, month0.getYearValue());
      //  // Unstable assertion: assertEquals("ita", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("", locale0.getCountry());
      //  // Unstable assertion: assertEquals("it", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("it", locale0.toString());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("Sun Jan 01 00:00:00 GMT 8", mockDate1.toString());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals((-61883308799106L), year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("8", year0.toString());
      //  // Unstable assertion: assertEquals((-61899119999106L), year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(8, year0.getYear());
      //  // Unstable assertion: assertEquals(8L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-61914931199105L), year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-61914844799106L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(52, week0.getWeek());
      //  // Unstable assertion: assertEquals((-61915147199106L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-61915449599105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(423L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals("Wed Aug 01 00:00:00 GMT 8", mockDate0.toString());
      //  // Unstable assertion: assertFalse(mockDate1.equals((Object)mockDate0));
      //  // Unstable assertion: assertFalse(mockDate0.equals((Object)mockDate1));
  }

  @Test
  public void test14()  throws Throwable  {
      Month month0 = new Month();
      //  // Unstable assertion: assertNotNull(month0);
      //  // Unstable assertion: assertEquals(1391212800895L, month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392422400894L, month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2, month0.getMonth());
      //  // Unstable assertion: assertEquals(1393632000894L, month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
      
      MockDate mockDate0 = (MockDate)month0.getEnd();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Sat Mar 01 00:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1391212800895L, month0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392422400894L, month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2, month0.getMonth());
      //  // Unstable assertion: assertEquals(1393632000894L, month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      
      Locale locale0 = null;
      Week week0 = null;
      try {
        week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0, locale0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Null 'locale' argument.
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 488;
      MockDate mockDate0 = new MockDate((long) int0);
      assertNotNull(mockDate0);
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", mockDate0.toString());
      
      TimeZone timeZone0 = null;
      Locale locale0 = Locale.UK;
      assertNotNull(locale0);
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("GB", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("en", locale0.getLanguage());
      assertEquals("en_GB", locale0.toString());
      assertEquals("GBR", locale0.getISO3Country());
      
      Week week0 = null;
      try {
        week0 = new Week((Date) mockDate0, timeZone0, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      
      Date date0 = null;
      Locale locale0 = Locale.ITALY;
      //  // Unstable assertion: assertNotNull(locale0);
      //  // Unstable assertion: assertEquals("it_IT", locale0.toString());
      //  // Unstable assertion: assertEquals("IT", locale0.getCountry());
      //  // Unstable assertion: assertEquals("ita", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("ITA", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("it", locale0.getLanguage());
      
      Week week0 = null;
      try {
        week0 = new Week(date0, (TimeZone) zoneInfo0, locale0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Null 'time' argument.
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 31;
      Hour hour0 = new Hour();
      //  // Unstable assertion: assertNotNull(hour0);
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      
      MockDate mockDate0 = (MockDate)hour0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      
      Week week0 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      
      Year year0 = week0.getYear();
      //  // Unstable assertion: assertNotNull(year0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      //  // Unstable assertion: assertEquals(1388534400000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1404302399999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(1420070399999L, year0.getLastMillisecond());
      
      Week week1 = new Week(int0, year0);
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(31, week1.getWeek());
      //  // Unstable assertion: assertEquals(1407110399999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106773L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1406807999999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(1406505600000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      //  // Unstable assertion: assertEquals(1388534400000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1404302399999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(1420070399999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
  }

  @Test
  public void test18()  throws Throwable  {
      String string0 = "?wo'!>QD6tPcB4S-cu";
      // Undeclared exception!
      try {
        Week week0 = Week.parseWeek(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the year.
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = 2131;
      Week week0 = new Week(int0, int0);
      assertNotNull(week0);
      assertEquals(2131, week0.getYearValue());
      assertEquals(5130863999999L, week0.getLastMillisecond());
      assertEquals(5130259200000L, week0.getFirstMillisecond());
      assertEquals(83, week0.getWeek());
      assertEquals(113026L, week0.getSerialIndex());
      assertEquals(5130561599999L, week0.getMiddleMillisecond());
      
      int int1 = week0.getYearValue();
      assertEquals(2131, week0.getYearValue());
      assertEquals(5130863999999L, week0.getLastMillisecond());
      assertEquals(5130259200000L, week0.getFirstMillisecond());
      assertEquals(83, week0.getWeek());
      assertEquals(113026L, week0.getSerialIndex());
      assertEquals(5130561599999L, week0.getMiddleMillisecond());
      assertEquals(2131, int1);
      assertTrue(int0 == int1);
      assertTrue(int1 == int0);
  }

  @Test
  public void test20()  throws Throwable  {
      Hour hour0 = new Hour();
      //  // Unstable assertion: assertNotNull(hour0);
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      
      MockDate mockDate0 = (MockDate)hour0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      
      Week week0 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      
      long long0 = week0.getMiddleMillisecond();
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392292800894L, long0);
  }

  @Test
  public void test21()  throws Throwable  {
      int int0 = 2131;
      Week week0 = new Week(int0, int0);
      assertNotNull(week0);
      assertEquals(2131, week0.getYearValue());
      assertEquals(113026L, week0.getSerialIndex());
      assertEquals(5130259200000L, week0.getFirstMillisecond());
      assertEquals(5130863999999L, week0.getLastMillisecond());
      assertEquals(5130561599999L, week0.getMiddleMillisecond());
      assertEquals(83, week0.getWeek());
      
      int int1 = week0.compareTo((Object) week0);
      assertEquals(2131, week0.getYearValue());
      assertEquals(113026L, week0.getSerialIndex());
      assertEquals(5130259200000L, week0.getFirstMillisecond());
      assertEquals(5130863999999L, week0.getLastMillisecond());
      assertEquals(5130561599999L, week0.getMiddleMillisecond());
      assertEquals(83, week0.getWeek());
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test22()  throws Throwable  {
      Hour hour0 = new Hour();
      //  // Unstable assertion: assertNotNull(hour0);
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      
      MockDate mockDate0 = (MockDate)hour0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      
      Week week0 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      
      long long0 = week0.getSerialIndex();
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:00 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409800894L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392411600894L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392408000895L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391990400895L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392595200894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392292800894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, long0);
  }

  @Test
  public void test23()  throws Throwable  {
      int int0 = 488;
      MockDate mockDate0 = new MockDate((long) int0);
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:00 GMT 1970", mockDate0.toString());
      
      Week week0 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:00 GMT 1970", mockDate0.toString());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      
      int int1 = week0.hashCode();
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:00 GMT 1970", mockDate0.toString());
      //  // Unstable assertion: assertEquals((-259199105L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(43200894L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(345600894L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(25280, int1);
      //  // Unstable assertion: assertFalse(int0 == int1);
      //  // Unstable assertion: assertFalse(int1 == int0);
  }
}
