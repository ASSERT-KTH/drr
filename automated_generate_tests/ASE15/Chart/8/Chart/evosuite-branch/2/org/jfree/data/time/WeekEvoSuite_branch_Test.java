/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 15:57:52 GMT 2014
 */

package org.jfree.data.time;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimePeriodFormatException;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class WeekEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      String string0 = "-";
      // Undeclared exception!
      try {
        Week week0 = Week.parseWeek(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the year.
         //
      }
  }

  @Test
  public void test01()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try {
        Week week0 = Week.parseWeek(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not find separator.
         //
      }
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = null;
      Week week0 = Week.parseWeek(string0);
      assertNull(week0);
  }

  @Test
  public void test03() {}
//   @Test
//   public void test03()  throws Throwable  {
//       int int0 = 0;
//       Week week0 = new Week(int0, int0);
//       assertEquals(0, week0.getYearValue());
//       assertEquals((-62168040000001L), week0.getMiddleMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(0L, week0.getSerialIndex());
//       assertEquals((-62168342400000L), week0.getFirstMillisecond());
//       assertEquals((-62167737600001L), week0.getLastMillisecond());
//       assertNotNull(week0);
//       
//       FixedMillisecond fixedMillisecond0 = new FixedMillisecond((long) int0);
//       assertEquals(0L, fixedMillisecond0.getFirstMillisecond());
//       assertEquals(0L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(0L, fixedMillisecond0.getSerialIndex());
//       assertEquals(0L, fixedMillisecond0.getMiddleMillisecond());
//       assertNotNull(fixedMillisecond0);
//       
//       int int1 = week0.compareTo((Object) fixedMillisecond0);
//       assertEquals(0L, fixedMillisecond0.getFirstMillisecond());
//       assertEquals(0L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(0L, fixedMillisecond0.getSerialIndex());
//       assertEquals(0L, fixedMillisecond0.getMiddleMillisecond());
//       assertEquals(0, week0.getYearValue());
//       assertEquals((-62168040000001L), week0.getMiddleMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(0L, week0.getSerialIndex());
//       assertEquals((-62168342400000L), week0.getFirstMillisecond());
//       assertEquals((-62167737600001L), week0.getLastMillisecond());
//       assertEquals(0, int1);
//       assertTrue(int1 == int0);
//       assertTrue(int0 == int1);
//   }

  @Test
  public void test04()  throws Throwable  {
      int int0 = 1440;
      Week week0 = new Week(int0, int0);
      //  // Unstable assertion: assertEquals((-16783243200001L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(-96, week0.getWeek());
      //  // Unstable assertion: assertEquals(1440, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-16782940800001L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(76224L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-16783545600000L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertNotNull(week0);
      
      Hour hour0 = new Hour();
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408001740L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409801739L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411601739L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertNotNull(hour0);
      
      MockDate mockDate0 = (MockDate)hour0.getStart();
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:01 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408001740L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409801739L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411601739L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertNotNull(mockDate0);
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      
      Locale locale0 = Locale.FRANCE;
      //  // Unstable assertion: assertEquals("FRA", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("FR", locale0.getCountry());
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("fr_FR", locale0.toString());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertNotNull(locale0);
      
      Week week1 = new Week((Date) mockDate0, (TimeZone) zoneInfo0, locale0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:01 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408001740L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409801739L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411601739L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1392292801739L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391990401740L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595201739L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals("FRA", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("FR", locale0.getCountry());
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("fr_FR", locale0.toString());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      
      int int1 = week0.compareTo((Object) week1);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:00:01 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals((-16783243200001L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(-96, week0.getWeek());
      //  // Unstable assertion: assertEquals(1440, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-16782940800001L), week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(76224L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-16783545600000L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(14, hour0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392408001740L, hour0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(20, hour0.getHour());
      //  // Unstable assertion: assertEquals(1392409801739L, hour0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392411601739L, hour0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2, hour0.getMonth());
      //  // Unstable assertion: assertEquals(1000436L, hour0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, hour0.getYear());
      //  // Unstable assertion: assertEquals(1392292801739L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391990401740L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392595201739L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals("FRA", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("FR", locale0.getCountry());
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("fr_FR", locale0.toString());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals((-574), int1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(int0 == int1);
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(int1 == int0);
  }

  @Test
  public void test05()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week0);
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      
      int int0 = week0.compareTo((Object) zoneInfo0);
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals(1, int0);
  }

  @Test
  public void test06() {}
//   @Test
//   public void test06()  throws Throwable  {
//       int int0 = (-3878);
//       Week week0 = new Week(int0, int0);
//       assertEquals((-184571092800001L), week0.getMiddleMillisecond());
//       assertEquals(-38, week0.getWeek());
//       assertEquals((-184571395200000L), week0.getFirstMillisecond());
//       assertEquals((-205572L), week0.getSerialIndex());
//       assertEquals(-3878, week0.getYearValue());
//       assertEquals((-184570790400001L), week0.getLastMillisecond());
//       assertNotNull(week0);
//       
//       int int1 = 0;
//       Week week1 = new Week(int0, int1);
//       assertEquals((-62190720000001L), week1.getLastMillisecond());
//       assertEquals(0, week1.getYearValue());
//       assertEquals((-62191324800000L), week1.getFirstMillisecond());
//       assertEquals(-38, week1.getWeek());
//       assertEquals((-38L), week1.getSerialIndex());
//       assertEquals((-62191022400001L), week1.getMiddleMillisecond());
//       assertNotNull(week1);
//       assertNotSame(week1, week0);
//       assertFalse(int0 == int1);
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(int1 == int0);
//       
//       boolean boolean0 = week0.equals((Object) week1);
//       assertEquals((-184571092800001L), week0.getMiddleMillisecond());
//       assertEquals(-38, week0.getWeek());
//       assertEquals((-184571395200000L), week0.getFirstMillisecond());
//       assertEquals((-205572L), week0.getSerialIndex());
//       assertEquals(-3878, week0.getYearValue());
//       assertEquals((-184570790400001L), week0.getLastMillisecond());
//       assertEquals((-62190720000001L), week1.getLastMillisecond());
//       assertEquals(0, week1.getYearValue());
//       assertEquals((-62191324800000L), week1.getFirstMillisecond());
//       assertEquals(-38, week1.getWeek());
//       assertEquals((-38L), week1.getSerialIndex());
//       assertEquals((-62191022400001L), week1.getMiddleMillisecond());
//       assertFalse(boolean0);
//       assertNotSame(week0, week1);
//       assertNotSame(week1, week0);
//       assertFalse(int0 == int1);
//       assertFalse(week0.equals((Object)week1));
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(int1 == int0);
//   }

  @Test
  public void test07()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertNotNull(week0);
      
      Week week1 = new Week();
      //  // Unstable assertion: assertEquals(1392206401739L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(1392508801739L, week1.getLastMillisecond());
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertTrue(week1.equals((Object)week0));
      
      boolean boolean0 = week1.equals((Object) week0);
      //  // Unstable assertion: assertEquals(1392206401739L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week1.getWeek());
      //  // Unstable assertion: assertEquals(1392508801739L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertTrue(boolean0);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertTrue(week1.equals((Object)week0));
      //  // Unstable assertion: assertTrue(week0.equals((Object)week1));
  }

  @Test
  public void test08() {}
//   @Test
//   public void test08()  throws Throwable  {
//       int int0 = 0;
//       int int1 = 9999;
//       Week week0 = new Week(int0, int1);
//       assertEquals(529947L, week0.getSerialIndex());
//       assertEquals(253369728000000L, week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(253370332799999L, week0.getLastMillisecond());
//       assertEquals(253370030399999L, week0.getMiddleMillisecond());
//       assertEquals(9999, week0.getYearValue());
//       assertNotNull(week0);
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//       
//       Year year0 = week0.getYear();
//       assertEquals(253402300799999L, year0.getLastMillisecond());
//       assertEquals("9999", year0.toString());
//       assertEquals(9999L, year0.getSerialIndex());
//       assertEquals(9999, year0.getYear());
//       assertEquals(253386532799999L, year0.getMiddleMillisecond());
//       assertEquals(253370764800000L, year0.getFirstMillisecond());
//       assertEquals(529947L, week0.getSerialIndex());
//       assertEquals(253369728000000L, week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(253370332799999L, week0.getLastMillisecond());
//       assertEquals(253370030399999L, week0.getMiddleMillisecond());
//       assertEquals(9999, week0.getYearValue());
//       assertNotNull(year0);
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//       
//       boolean boolean0 = week0.equals((Object) year0);
//       assertEquals(253402300799999L, year0.getLastMillisecond());
//       assertEquals("9999", year0.toString());
//       assertEquals(9999L, year0.getSerialIndex());
//       assertEquals(9999, year0.getYear());
//       assertEquals(253386532799999L, year0.getMiddleMillisecond());
//       assertEquals(253370764800000L, year0.getFirstMillisecond());
//       assertEquals(529947L, week0.getSerialIndex());
//       assertEquals(253369728000000L, week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(253370332799999L, week0.getLastMillisecond());
//       assertEquals(253370030399999L, week0.getMiddleMillisecond());
//       assertEquals(9999, week0.getYearValue());
//       assertFalse(boolean0);
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//   }

  @Test
  public void test09()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertNotNull(week0);
      
      Week week1 = (Week)week0.next();
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1393113599999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, week1.getWeek());
      //  // Unstable assertion: assertEquals(1392508800000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392811199999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106750L, week1.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      
      boolean boolean0 = week0.equals((Object) week1);
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1393113599999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(8, week1.getWeek());
      //  // Unstable assertion: assertEquals(1392508800000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392811199999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(106750L, week1.getSerialIndex());
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
  }

  @Test
  public void test10()  throws Throwable  {
      long long0 = 1817L;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(long0);
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(fixedMillisecond0);
      
      MockDate mockDate0 = (MockDate)fixedMillisecond0.getEnd();
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:01 GMT 1970", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(mockDate0);
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      
      Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0);
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals(259201739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-43198261L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-345598260L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:01 GMT 1970", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week0);
      
      Week week1 = (Week)week0.previous();
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals(259201739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-43198261L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-345598260L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:01 GMT 1970", mockDate0.toString());
      //  // Unstable assertion: assertEquals((-345600001L), week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1969, week1.getYearValue());
      //  // Unstable assertion: assertEquals(104409L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals((-950400000L), week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-648000001L), week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(52, week1.getWeek());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      
      Week week2 = (Week)week1.next();
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals(259201739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals((-43198261L), week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week0.getWeek());
      //  // Unstable assertion: assertEquals(1970, week0.getYearValue());
      //  // Unstable assertion: assertEquals((-345598260L), week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1, week2.getWeek());
      //  // Unstable assertion: assertEquals((-43200001L), week2.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(104411L, week2.getSerialIndex());
      //  // Unstable assertion: assertEquals(259199999L, week2.getLastMillisecond());
      //  // Unstable assertion: assertEquals((-345600000L), week2.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1970, week2.getYearValue());
      //  // Unstable assertion: assertEquals("Thu Jan 01 00:00:01 GMT 1970", mockDate0.toString());
      //  // Unstable assertion: assertEquals((-345600001L), week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1969, week1.getYearValue());
      //  // Unstable assertion: assertEquals(104409L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals((-950400000L), week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-648000001L), week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(52, week1.getWeek());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1817L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week2);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week0, week2);
      //  // Unstable assertion: assertNotSame(week2, week1);
      //  // Unstable assertion: assertNotSame(week2, week0);
      //  // Unstable assertion: assertNotSame(week1, week2);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertTrue(week0.equals((Object)week2));
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week2.equals((Object)week1));
      //  // Unstable assertion: assertTrue(week2.equals((Object)week0));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week2));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
  }

  @Test
  public void test11() {}
//   @Test
//   public void test11()  throws Throwable  {
//       int int0 = 1;
//       Week week0 = new Week(int0, int0);
//       assertEquals((-62136288000000L), week0.getFirstMillisecond());
//       assertEquals((-62135985600001L), week0.getMiddleMillisecond());
//       assertEquals(54L, week0.getSerialIndex());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-62135683200001L), week0.getLastMillisecond());
//       assertEquals(1, week0.getYearValue());
//       assertNotNull(week0);
//       
//       RegularTimePeriod regularTimePeriod0 = week0.previous();
//       assertEquals((-62136288000000L), week0.getFirstMillisecond());
//       assertEquals((-62135985600001L), week0.getMiddleMillisecond());
//       assertEquals(54L, week0.getSerialIndex());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-62135683200001L), week0.getLastMillisecond());
//       assertEquals(1, week0.getYearValue());
//       assertNull(regularTimePeriod0);
//   }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      int int1 = 9999;
      Week week0 = new Week(int0, int1);
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
      
      Year year0 = week0.getYear();
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals("9999", year0.toString());
      //  // Unstable assertion: assertEquals(253386532799999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(253402300799999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370764800000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, year0.getYear());
      //  // Unstable assertion: assertEquals(9999L, year0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(year0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
      
      MockDate mockDate0 = (MockDate)year0.getStart();
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals("Fri Jan 01 00:00:00 GMT 9999", mockDate0.toString());
      //  // Unstable assertion: assertEquals("9999", year0.toString());
      //  // Unstable assertion: assertEquals(253386532799999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(253402300799999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370764800000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, year0.getYear());
      //  // Unstable assertion: assertEquals(9999L, year0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
      
      Week week1 = new Week((Date) mockDate0);
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(253370937601739L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370332801740L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, week1.getYearValue());
      //  // Unstable assertion: assertEquals(529948L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(253370635201739L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1, week1.getWeek());
      //  // Unstable assertion: assertEquals("Fri Jan 01 00:00:00 GMT 9999", mockDate0.toString());
      //  // Unstable assertion: assertEquals("9999", year0.toString());
      //  // Unstable assertion: assertEquals(253386532799999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(253402300799999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253370764800000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, year0.getYear());
      //  // Unstable assertion: assertEquals(9999L, year0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(int0 == int1);
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      int int1 = 9999;
      Week week0 = new Week(int0, int1);
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
      
      Year year0 = week0.getYear();
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals(9999, year0.getYear());
      //  // Unstable assertion: assertEquals(253370764800000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(253402300799999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253386532799999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("9999", year0.toString());
      //  // Unstable assertion: assertNotNull(year0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
      
      MockDate mockDate0 = (MockDate)year0.getStart();
      //  // Unstable assertion: assertEquals(529947L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(253370030399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(253370332799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253369728000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999, week0.getYearValue());
      //  // Unstable assertion: assertEquals(0, week0.getWeek());
      //  // Unstable assertion: assertEquals("Fri Jan 01 00:00:00 GMT 9999", mockDate0.toString());
      //  // Unstable assertion: assertEquals(9999, year0.getYear());
      //  // Unstable assertion: assertEquals(253370764800000L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(9999L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(253402300799999L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(253386532799999L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("9999", year0.toString());
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertFalse(int1 == int0);
      //  // Unstable assertion: assertFalse(int0 == int1);
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertEquals("", zoneInfo0.getID());
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      
      Locale locale0 = null;
      Week week1 = null;
      try {
        week1 = new Week((Date) mockDate0, (TimeZone) zoneInfo0, locale0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Null 'locale' argument.
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(week0);
      
      MockDate mockDate0 = (MockDate)week0.getEnd();
      //  // Unstable assertion: assertEquals("Sun Feb 16 00:00:01 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(mockDate0);
      
      TimeZone timeZone0 = null;
      Locale locale0 = Locale.PRC;
      //  // Unstable assertion: assertEquals("CN", locale0.getCountry());
      //  // Unstable assertion: assertEquals("zho", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("zh", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CHN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("zh_CN", locale0.toString());
      //  // Unstable assertion: assertNotNull(locale0);
      
      Week week1 = null;
      try {
        week1 = new Week((Date) mockDate0, timeZone0, locale0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Date date0 = null;
      Week week0 = null;
      try {
        week0 = new Week(date0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'time' argument.
         //
      }
  }

  @Test
  public void test16() {}
//   @Test
//   public void test16()  throws Throwable  {
//       int int0 = 0;
//       int int1 = 9999;
//       Week week0 = new Week(int0, int1);
//       assertEquals(253370030399999L, week0.getMiddleMillisecond());
//       assertEquals(529947L, week0.getSerialIndex());
//       assertEquals(9999, week0.getYearValue());
//       assertEquals(253369728000000L, week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(253370332799999L, week0.getLastMillisecond());
//       assertNotNull(week0);
//       assertFalse(int1 == int0);
//       assertFalse(int0 == int1);
//       
//       Year year0 = week0.getYear();
//       assertEquals("9999", year0.toString());
//       assertEquals(9999L, year0.getSerialIndex());
//       assertEquals(253370764800000L, year0.getFirstMillisecond());
//       assertEquals(253386532799999L, year0.getMiddleMillisecond());
//       assertEquals(9999, year0.getYear());
//       assertEquals(253402300799999L, year0.getLastMillisecond());
//       assertEquals(253370030399999L, week0.getMiddleMillisecond());
//       assertEquals(529947L, week0.getSerialIndex());
//       assertEquals(9999, week0.getYearValue());
//       assertEquals(253369728000000L, week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(253370332799999L, week0.getLastMillisecond());
//       assertNotNull(year0);
//       assertFalse(int1 == int0);
//       assertFalse(int0 == int1);
//       
//       Week week1 = new Week(int0, year0);
//       assertEquals("9999", year0.toString());
//       assertEquals(9999L, year0.getSerialIndex());
//       assertEquals(253370764800000L, year0.getFirstMillisecond());
//       assertEquals(253386532799999L, year0.getMiddleMillisecond());
//       assertEquals(9999, year0.getYear());
//       assertEquals(253402300799999L, year0.getLastMillisecond());
//       assertEquals(9999, week1.getYearValue());
//       assertEquals(253369728000000L, week1.getFirstMillisecond());
//       assertEquals(253370030399999L, week1.getMiddleMillisecond());
//       assertEquals(0, week1.getWeek());
//       assertEquals(253370332799999L, week1.getLastMillisecond());
//       assertEquals(529947L, week1.getSerialIndex());
//       assertEquals(253370030399999L, week0.getMiddleMillisecond());
//       assertEquals(529947L, week0.getSerialIndex());
//       assertEquals(9999, week0.getYearValue());
//       assertEquals(253369728000000L, week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals(253370332799999L, week0.getLastMillisecond());
//       assertNotNull(week1);
//       assertNotSame(week1, week0);
//       assertNotSame(week0, week1);
//       assertTrue(week1.equals((Object)week0));
//       assertFalse(int1 == int0);
//       assertFalse(int0 == int1);
//       assertTrue(week0.equals((Object)week1));
//   }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 5;
      Year year0 = new Year();
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      //  // Unstable assertion: assertEquals(1420070401739L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(1388534401740L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1404302401739L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(year0);
      
      Week week0 = new Week(int0, year0);
      //  // Unstable assertion: assertEquals(5, week0.getWeek());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1390996799999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391299199999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1390694400000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106747L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014L, year0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, year0.getYear());
      //  // Unstable assertion: assertEquals(1420070401739L, year0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("2014", year0.toString());
      //  // Unstable assertion: assertEquals(1388534401740L, year0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1404302401739L, year0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(week0);
  }

  @Test
  public void test18()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(week0);
      
      Week week1 = (Week)week0.previous();
      //  // Unstable assertion: assertEquals(106748L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week1.getYearValue());
      //  // Unstable assertion: assertEquals(1391903999999L, week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391601599999L, week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(6, week1.getWeek());
      //  // Unstable assertion: assertEquals(1391299200000L, week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
  }

  @Test
  public void test19()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(week0);
      
      String string0 = week0.toString();
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("Week 7, 2014", string0);
      
      // Undeclared exception!
      try {
        Week week1 = Week.parseWeek(string0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the week.
         //
      }
  }

  @Test
  public void test20()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertNotNull(week0);
      
      int int0 = week0.getYearValue();
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(2014, int0);
  }

  @Test
  public void test21() {}
//   @Test
//   public void test21()  throws Throwable  {
//       int int0 = 0;
//       Week week0 = new Week(int0, int0);
//       assertEquals(0L, week0.getSerialIndex());
//       assertEquals((-62168342400000L), week0.getFirstMillisecond());
//       assertEquals((-62167737600001L), week0.getLastMillisecond());
//       assertEquals(0, week0.getYearValue());
//       assertEquals((-62168040000001L), week0.getMiddleMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertNotNull(week0);
//       
//       MockDate mockDate0 = (MockDate)week0.getStart();
//       assertEquals(0L, week0.getSerialIndex());
//       assertEquals((-62168342400000L), week0.getFirstMillisecond());
//       assertEquals((-62167737600001L), week0.getLastMillisecond());
//       assertEquals(0, week0.getYearValue());
//       assertEquals((-62168040000001L), week0.getMiddleMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals("Sun Dec 21 00:00:00 GMT 2", mockDate0.toString());
//       assertNotNull(mockDate0);
//   }

  @Test
  public void test22()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertNotNull(week0);
      
      int int0 = week0.compareTo((Object) week0);
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test23() {}
//   @Test
//   public void test23()  throws Throwable  {
//       int int0 = (-3878);
//       Week week0 = new Week(int0, int0);
//       assertEquals((-184571092800001L), week0.getMiddleMillisecond());
//       assertEquals(-38, week0.getWeek());
//       assertEquals(-3878, week0.getYearValue());
//       assertEquals((-184570790400001L), week0.getLastMillisecond());
//       assertEquals((-205572L), week0.getSerialIndex());
//       assertEquals((-184571395200000L), week0.getFirstMillisecond());
//       assertNotNull(week0);
//       
//       long long0 = week0.getSerialIndex();
//       assertEquals((-184571092800001L), week0.getMiddleMillisecond());
//       assertEquals(-38, week0.getWeek());
//       assertEquals(-3878, week0.getYearValue());
//       assertEquals((-184570790400001L), week0.getLastMillisecond());
//       assertEquals((-205572L), week0.getSerialIndex());
//       assertEquals((-184571395200000L), week0.getFirstMillisecond());
//       assertEquals((-205572L), long0);
//   }

  @Test
  public void test24()  throws Throwable  {
      Week week0 = new Week();
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertNotNull(week0);
      
      int int0 = week0.hashCode();
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206401739L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1391904001740L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392508801739L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(25546, int0);
  }
}
