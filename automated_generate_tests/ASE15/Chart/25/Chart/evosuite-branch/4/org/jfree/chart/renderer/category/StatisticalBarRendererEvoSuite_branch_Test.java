/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:21:00 GMT 2014
 */

package org.jfree.chart.renderer.category;

import static org.junit.Assert.*;
import org.junit.Test;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JToggleButton;
import javax.swing.JToolBar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;


public class StatisticalBarRendererEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      
      int int0 = 2845;
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      assertNotNull(stackedXYBarRenderer0);
      assertEquals(2, stackedXYBarRenderer0.getPassCount());
      assertEquals(true, stackedXYBarRenderer0.getBaseCreateEntities());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedXYBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, stackedXYBarRenderer0.getRenderAsPercentages());
      assertEquals(false, stackedXYBarRenderer0.getUseYInterval());
      assertEquals(false, stackedXYBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, stackedXYBarRenderer0.getBase(), 0.01D);
      assertEquals(true, stackedXYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, stackedXYBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, stackedXYBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, stackedXYBarRenderer0.getMargin(), 0.01D);
      assertEquals(true, stackedXYBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, stackedXYBarRenderer0.getDefaultEntityRadius());
      assertEquals(true, stackedXYBarRenderer0.getBaseSeriesVisible());
      
      Paint paint0 = stackedXYBarRenderer0.getSeriesFillPaint(int0);
      assertNull(paint0);
      assertEquals(2, stackedXYBarRenderer0.getPassCount());
      assertEquals(true, stackedXYBarRenderer0.getBaseCreateEntities());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedXYBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, stackedXYBarRenderer0.getRenderAsPercentages());
      assertEquals(false, stackedXYBarRenderer0.getUseYInterval());
      assertEquals(false, stackedXYBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, stackedXYBarRenderer0.getBase(), 0.01D);
      assertEquals(true, stackedXYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, stackedXYBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, stackedXYBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, stackedXYBarRenderer0.getMargin(), 0.01D);
      assertEquals(true, stackedXYBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, stackedXYBarRenderer0.getDefaultEntityRadius());
      assertEquals(true, stackedXYBarRenderer0.getBaseSeriesVisible());
      
      statisticalBarRenderer0.setErrorIndicatorPaint(paint0);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(2, stackedXYBarRenderer0.getPassCount());
      assertEquals(true, stackedXYBarRenderer0.getBaseCreateEntities());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, stackedXYBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, stackedXYBarRenderer0.getRenderAsPercentages());
      assertEquals(false, stackedXYBarRenderer0.getUseYInterval());
      assertEquals(false, stackedXYBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, stackedXYBarRenderer0.getBase(), 0.01D);
      assertEquals(true, stackedXYBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, stackedXYBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, stackedXYBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, stackedXYBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, stackedXYBarRenderer0.getMargin(), 0.01D);
      assertEquals(true, stackedXYBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, stackedXYBarRenderer0.getDefaultEntityRadius());
      assertEquals(true, stackedXYBarRenderer0.getBaseSeriesVisible());
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertFalse(boolean0);
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertFalse(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
  }

  @Test
  public void test1()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      
      double double0 = 5.144102216299172;
      statisticalBarRenderer0.setMinimumBarLength(double0);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(5.144102216299172, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertFalse(boolean0);
      assertFalse(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(5.144102216299172, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test
  public void test2()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertTrue(boolean0);
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertTrue(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
  }

  @Test
  public void test3()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      
      DrawingSupplier drawingSupplier0 = statisticalBarRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) drawingSupplier0);
      assertFalse(boolean0);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      assertNotNull(combinedDomainCategoryPlot0);
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01D);
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(true, combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeZoomable());
      assertEquals(false, combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertEquals(false, combinedDomainCategoryPlot0.isSubplot());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(true, combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(false, combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainCategoryPlot0.isDomainZoomable());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      
      CategoryItemRendererState categoryItemRendererState0 = null;
      String string0 = "Ff)}0Q6C%l";
      JButton jButton0 = new JButton(string0);
      assertNotNull(jButton0);
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      
      Action action0 = jButton0.getAction();
      assertNull(action0);
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      
      JToggleButton jToggleButton0 = new JToggleButton(action0);
      assertNotNull(jToggleButton0);
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(false, jToggleButton0.isMaximumSizeSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicySet());
      assertEquals(0, jToggleButton0.getComponentCount());
      assertEquals(true, jToggleButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jToggleButton0.isValid());
      assertEquals(false, jToggleButton0.isLightweight());
      assertEquals(false, jToggleButton0.isDisplayable());
      assertEquals(false, jToggleButton0.isMinimumSizeSet());
      assertEquals(false, jToggleButton0.isFocusCycleRoot());
      assertEquals(false, jToggleButton0.isPreferredSizeSet());
      assertEquals(false, jToggleButton0.getIgnoreRepaint());
      assertEquals(true, jToggleButton0.isForegroundSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToggleButton0.isVisible());
      assertEquals(false, jToggleButton0.isCursorSet());
      assertEquals(true, jToggleButton0.isBackgroundSet());
      assertEquals(false, jToggleButton0.isShowing());
      assertEquals(true, jToggleButton0.isFontSet());
      assertEquals(0, jToggleButton0.countComponents());
      assertEquals(true, jToggleButton0.isEnabled());
      
      Rectangle rectangle0 = jToggleButton0.getBounds();
      assertNotNull(rectangle0);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(false, jToggleButton0.isMaximumSizeSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicySet());
      assertEquals(0, jToggleButton0.getComponentCount());
      assertEquals(true, jToggleButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jToggleButton0.isValid());
      assertEquals(false, jToggleButton0.isLightweight());
      assertEquals(false, jToggleButton0.isDisplayable());
      assertEquals(false, jToggleButton0.isMinimumSizeSet());
      assertEquals(false, jToggleButton0.isFocusCycleRoot());
      assertEquals(false, jToggleButton0.isPreferredSizeSet());
      assertEquals(false, jToggleButton0.getIgnoreRepaint());
      assertEquals(true, jToggleButton0.isForegroundSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToggleButton0.isVisible());
      assertEquals(false, jToggleButton0.isCursorSet());
      assertEquals(true, jToggleButton0.isBackgroundSet());
      assertEquals(false, jToggleButton0.isShowing());
      assertEquals(true, jToggleButton0.isFontSet());
      assertEquals(0, jToggleButton0.countComponents());
      assertEquals(true, jToggleButton0.isEnabled());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      
      CategoryAxis categoryAxis0 = new CategoryAxis();
      assertNotNull(categoryAxis0);
      assertEquals(true, categoryAxis0.isAxisLineVisible());
      assertNull(categoryAxis0.getLabelURL());
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01D);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01D);
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01D);
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(false, categoryAxis0.isTickMarksVisible());
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01D);
      assertEquals(true, categoryAxis0.isTickLabelsVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01D);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertNull(categoryAxis0.getLabelToolTip());
      assertNull(categoryAxis0.getLabel());
      assertEquals(true, categoryAxis0.isVisible());
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertNotNull(combinedRangeCategoryPlot0);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      
      NumberAxis numberAxis0 = (NumberAxis)combinedRangeCategoryPlot0.getRangeAxisForDataset(rectangle0.height);
      assertNotNull(numberAxis0);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertEquals(false, numberAxis0.isInverted());
      assertNull(numberAxis0.getLabelURL());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(false, jToggleButton0.isMaximumSizeSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicySet());
      assertEquals(0, jToggleButton0.getComponentCount());
      assertEquals(true, jToggleButton0.getFocusTraversalKeysEnabled());
      assertEquals(false, jToggleButton0.isValid());
      assertEquals(false, jToggleButton0.isLightweight());
      assertEquals(false, jToggleButton0.isDisplayable());
      assertEquals(false, jToggleButton0.isMinimumSizeSet());
      assertEquals(false, jToggleButton0.isFocusCycleRoot());
      assertEquals(false, jToggleButton0.isPreferredSizeSet());
      assertEquals(false, jToggleButton0.getIgnoreRepaint());
      assertEquals(true, jToggleButton0.isForegroundSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToggleButton0.isVisible());
      assertEquals(false, jToggleButton0.isCursorSet());
      assertEquals(true, jToggleButton0.isBackgroundSet());
      assertEquals(false, jToggleButton0.isShowing());
      assertEquals(true, jToggleButton0.isFontSet());
      assertEquals(0, jToggleButton0.countComponents());
      assertEquals(true, jToggleButton0.isEnabled());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      assertNotNull(defaultStatisticalCategoryDataset0);
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawVerticalItem(graphics2D0, categoryItemRendererState0, rectangle0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis0, defaultStatisticalCategoryDataset0, rectangle0.height, rectangle0.width);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      assertNotNull(combinedDomainCategoryPlot0);
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedDomainCategoryPlot0.isDomainZoomable());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertEquals(false, combinedDomainCategoryPlot0.isSubplot());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01D);
      assertEquals(false, combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(true, combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeZoomable());
      assertEquals(true, combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01D);
      
      CategoryItemRendererState categoryItemRendererState0 = null;
      String string0 = "7Dc0to9";
      JButton jButton0 = new JButton(string0);
      assertNotNull(jButton0);
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      
      Action action0 = jButton0.getAction();
      assertNull(action0);
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      
      JToggleButton jToggleButton0 = new JToggleButton(action0);
      assertNotNull(jToggleButton0);
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jToggleButton0.isValid());
      assertEquals(false, jToggleButton0.isLightweight());
      assertEquals(true, jToggleButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jToggleButton0.isFontSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicySet());
      assertEquals(true, jToggleButton0.isBackgroundSet());
      assertEquals(false, jToggleButton0.isMinimumSizeSet());
      assertEquals(false, jToggleButton0.isFocusCycleRoot());
      assertEquals(false, jToggleButton0.isMaximumSizeSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToggleButton0.isVisible());
      assertEquals(false, jToggleButton0.isShowing());
      assertEquals(false, jToggleButton0.isDisplayable());
      assertEquals(false, jToggleButton0.isCursorSet());
      assertEquals(false, jToggleButton0.isPreferredSizeSet());
      assertEquals(0, jToggleButton0.getComponentCount());
      assertEquals(false, jToggleButton0.getIgnoreRepaint());
      assertEquals(0, jToggleButton0.countComponents());
      assertEquals(true, jToggleButton0.isEnabled());
      assertEquals(true, jToggleButton0.isForegroundSet());
      
      Rectangle rectangle0 = jToggleButton0.getBounds();
      assertNotNull(rectangle0);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(true, jButton0.isFontSet());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(true, jButton0.isVisible());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jToggleButton0.isValid());
      assertEquals(false, jToggleButton0.isLightweight());
      assertEquals(true, jToggleButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jToggleButton0.isFontSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicySet());
      assertEquals(true, jToggleButton0.isBackgroundSet());
      assertEquals(false, jToggleButton0.isMinimumSizeSet());
      assertEquals(false, jToggleButton0.isFocusCycleRoot());
      assertEquals(false, jToggleButton0.isMaximumSizeSet());
      assertEquals(false, jToggleButton0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToggleButton0.isVisible());
      assertEquals(false, jToggleButton0.isShowing());
      assertEquals(false, jToggleButton0.isDisplayable());
      assertEquals(false, jToggleButton0.isCursorSet());
      assertEquals(false, jToggleButton0.isPreferredSizeSet());
      assertEquals(0, jToggleButton0.getComponentCount());
      assertEquals(false, jToggleButton0.getIgnoreRepaint());
      assertEquals(0, jToggleButton0.countComponents());
      assertEquals(true, jToggleButton0.isEnabled());
      assertEquals(true, jToggleButton0.isForegroundSet());
      
      CategoryAxis categoryAxis0 = new CategoryAxis();
      assertNotNull(categoryAxis0);
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(true, categoryAxis0.isAxisLineVisible());
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01D);
      assertEquals(false, categoryAxis0.isTickMarksVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01D);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertNull(categoryAxis0.getLabelToolTip());
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01D);
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01D);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01D);
      assertEquals(true, categoryAxis0.isTickLabelsVisible());
      assertNull(categoryAxis0.getLabelURL());
      assertEquals(true, categoryAxis0.isVisible());
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertNull(categoryAxis0.getLabel());
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertNotNull(defaultValueDataset0);
      
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) defaultValueDataset0);
      assertNotNull(thermometerPlot0);
      assertNull(thermometerPlot0.getNoDataMessage());
      assertEquals(true, thermometerPlot0.isRangeZoomable());
      assertEquals(100.0, thermometerPlot0.getUpperBound(), 0.01D);
      assertEquals(2, thermometerPlot0.getUnits());
      assertEquals(true, thermometerPlot0.isOutlineVisible());
      assertEquals(0.0, thermometerPlot0.getLowerBound(), 0.01D);
      assertEquals(false, thermometerPlot0.isDomainZoomable());
      assertEquals(false, thermometerPlot0.getFollowDataInSubranges());
      assertEquals(15, thermometerPlot0.getBackgroundImageAlignment());
      assertEquals(3, thermometerPlot0.getValueLocation());
      assertEquals(1.0F, thermometerPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, thermometerPlot0.getUseSubrangePaint());
      assertEquals(1.0F, thermometerPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, thermometerPlot0.isSubplot());
      assertEquals(2, thermometerPlot0.getAxisLocation());
      assertEquals(0.5F, thermometerPlot0.getBackgroundImageAlpha(), 0.01F);
      
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      assertNotNull(numberAxis0);
      assertEquals(false, numberAxis0.isAutoRange());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertNull(numberAxis0.getLabel());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(100.0, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(false, numberAxis0.isAxisLineVisible());
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertNull(thermometerPlot0.getNoDataMessage());
      assertEquals(true, thermometerPlot0.isRangeZoomable());
      assertEquals(100.0, thermometerPlot0.getUpperBound(), 0.01D);
      assertEquals(2, thermometerPlot0.getUnits());
      assertEquals(true, thermometerPlot0.isOutlineVisible());
      assertEquals(0.0, thermometerPlot0.getLowerBound(), 0.01D);
      assertEquals(false, thermometerPlot0.isDomainZoomable());
      assertEquals(false, thermometerPlot0.getFollowDataInSubranges());
      assertEquals(15, thermometerPlot0.getBackgroundImageAlignment());
      assertEquals(3, thermometerPlot0.getValueLocation());
      assertEquals(1.0F, thermometerPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, thermometerPlot0.getUseSubrangePaint());
      assertEquals(1.0F, thermometerPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, thermometerPlot0.isSubplot());
      assertEquals(2, thermometerPlot0.getAxisLocation());
      assertEquals(0.5F, thermometerPlot0.getBackgroundImageAlpha(), 0.01F);
      
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      assertNotNull(defaultStatisticalCategoryDataset0);
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawHorizontalItem(graphics2D0, categoryItemRendererState0, rectangle0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis0, defaultStatisticalCategoryDataset0, rectangle0.x, rectangle0.width);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      assertNotNull(combinedDomainCategoryPlot0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01D);
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(false, combinedDomainCategoryPlot0.isDomainZoomable());
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(false, combinedDomainCategoryPlot0.isSubplot());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeZoomable());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      
      CategoryItemRendererState categoryItemRendererState0 = null;
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      assertNotNull(jToolBar_Separator0);
      assertEquals(false, jToolBar_Separator0.isDisplayable());
      assertEquals(0, jToolBar_Separator0.getComponentCount());
      assertEquals(false, jToolBar_Separator0.isMinimumSizeSet());
      assertEquals(false, jToolBar_Separator0.isForegroundSet());
      assertEquals(false, jToolBar_Separator0.isMaximumSizeSet());
      assertEquals(false, jToolBar_Separator0.isLightweight());
      assertEquals(true, jToolBar_Separator0.getFocusTraversalKeysEnabled());
      assertEquals(false, jToolBar_Separator0.isValid());
      assertEquals(false, jToolBar_Separator0.isFontSet());
      assertEquals(true, jToolBar_Separator0.isEnabled());
      assertEquals(true, jToolBar_Separator0.isVisible());
      assertEquals(false, jToolBar_Separator0.isPreferredSizeSet());
      assertEquals(false, jToolBar_Separator0.getIgnoreRepaint());
      assertEquals(false, jToolBar_Separator0.isFocusTraversalPolicyProvider());
      assertEquals(0, jToolBar_Separator0.countComponents());
      assertEquals(false, jToolBar_Separator0.isShowing());
      assertEquals(false, jToolBar_Separator0.isFocusTraversalPolicySet());
      assertEquals(false, jToolBar_Separator0.isCursorSet());
      assertEquals(false, jToolBar_Separator0.isBackgroundSet());
      assertEquals(false, jToolBar_Separator0.isFocusCycleRoot());
      
      Rectangle rectangle0 = jToolBar_Separator0.bounds();
      assertNotNull(rectangle0);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(false, jToolBar_Separator0.isDisplayable());
      assertEquals(0, jToolBar_Separator0.getComponentCount());
      assertEquals(false, jToolBar_Separator0.isMinimumSizeSet());
      assertEquals(false, jToolBar_Separator0.isForegroundSet());
      assertEquals(false, jToolBar_Separator0.isMaximumSizeSet());
      assertEquals(false, jToolBar_Separator0.isLightweight());
      assertEquals(true, jToolBar_Separator0.getFocusTraversalKeysEnabled());
      assertEquals(false, jToolBar_Separator0.isValid());
      assertEquals(false, jToolBar_Separator0.isFontSet());
      assertEquals(true, jToolBar_Separator0.isEnabled());
      assertEquals(true, jToolBar_Separator0.isVisible());
      assertEquals(false, jToolBar_Separator0.isPreferredSizeSet());
      assertEquals(false, jToolBar_Separator0.getIgnoreRepaint());
      assertEquals(false, jToolBar_Separator0.isFocusTraversalPolicyProvider());
      assertEquals(0, jToolBar_Separator0.countComponents());
      assertEquals(false, jToolBar_Separator0.isShowing());
      assertEquals(false, jToolBar_Separator0.isFocusTraversalPolicySet());
      assertEquals(false, jToolBar_Separator0.isCursorSet());
      assertEquals(false, jToolBar_Separator0.isBackgroundSet());
      assertEquals(false, jToolBar_Separator0.isFocusCycleRoot());
      
      String string0 = "GtWxf4ucB..4K*@*b";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(string0);
      assertNotNull(subCategoryAxis0);
      assertEquals(0.0, subCategoryAxis0.getFixedDimension(), 0.01D);
      assertEquals(0.0F, subCategoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, subCategoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, subCategoryAxis0.getLowerMargin(), 0.01D);
      assertEquals(true, subCategoryAxis0.isAxisLineVisible());
      assertEquals(true, subCategoryAxis0.isTickLabelsVisible());
      assertEquals(4, subCategoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(0.2, subCategoryAxis0.getCategoryMargin(), 0.01D);
      assertEquals(1, subCategoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(true, subCategoryAxis0.isVisible());
      assertEquals(0.0F, subCategoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertNull(subCategoryAxis0.getLabelURL());
      assertEquals("GtWxf4ucB..4K*@*b", subCategoryAxis0.getLabel());
      assertEquals(0.0, subCategoryAxis0.getLabelAngle(), 0.01D);
      assertEquals(false, subCategoryAxis0.isTickMarksVisible());
      assertNull(subCategoryAxis0.getLabelToolTip());
      assertEquals(0.05, subCategoryAxis0.getUpperMargin(), 0.01D);
      
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      assertNotNull(thermometerPlot0);
      assertEquals(1.0F, thermometerPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(100.0, thermometerPlot0.getUpperBound(), 0.01D);
      assertEquals(false, thermometerPlot0.isDomainZoomable());
      assertEquals(true, thermometerPlot0.isRangeZoomable());
      assertEquals(false, thermometerPlot0.getFollowDataInSubranges());
      assertEquals(true, thermometerPlot0.isOutlineVisible());
      assertEquals(0.5F, thermometerPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, thermometerPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2, thermometerPlot0.getAxisLocation());
      assertEquals(3, thermometerPlot0.getValueLocation());
      assertNull(thermometerPlot0.getNoDataMessage());
      assertEquals(true, thermometerPlot0.getUseSubrangePaint());
      assertEquals(false, thermometerPlot0.isSubplot());
      assertEquals(2, thermometerPlot0.getUnits());
      assertEquals(0.0, thermometerPlot0.getLowerBound(), 0.01D);
      assertEquals(15, thermometerPlot0.getBackgroundImageAlignment());
      
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      assertNotNull(numberAxis0);
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertNull(numberAxis0.getLabelURL());
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(false, numberAxis0.isAutoRange());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(100.0, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(false, numberAxis0.isAxisLineVisible());
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(1.0F, thermometerPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(100.0, thermometerPlot0.getUpperBound(), 0.01D);
      assertEquals(false, thermometerPlot0.isDomainZoomable());
      assertEquals(true, thermometerPlot0.isRangeZoomable());
      assertEquals(false, thermometerPlot0.getFollowDataInSubranges());
      assertEquals(true, thermometerPlot0.isOutlineVisible());
      assertEquals(0.5F, thermometerPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, thermometerPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2, thermometerPlot0.getAxisLocation());
      assertEquals(3, thermometerPlot0.getValueLocation());
      assertNull(thermometerPlot0.getNoDataMessage());
      assertEquals(true, thermometerPlot0.getUseSubrangePaint());
      assertEquals(false, thermometerPlot0.isSubplot());
      assertEquals(2, thermometerPlot0.getUnits());
      assertEquals(0.0, thermometerPlot0.getLowerBound(), 0.01D);
      assertEquals(15, thermometerPlot0.getBackgroundImageAlignment());
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawItem(graphics2D0, categoryItemRendererState0, (Rectangle2D) rectangle0, (CategoryPlot) combinedDomainCategoryPlot0, (CategoryAxis) subCategoryAxis0, (ValueAxis) numberAxis0, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, rectangle0.x, rectangle0.height, rectangle0.y);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires StatisticalCategoryDataset.
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      
      BasicStroke basicStroke0 = (BasicStroke)statisticalBarRenderer0.getErrorIndicatorStroke();
      assertNotNull(basicStroke0);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
  }

  @Test
  public void test8()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      
      Color color0 = (Color)statisticalBarRenderer0.getErrorIndicatorPaint();
      assertNotNull(color0);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getGreen());
      assertEquals(-8355712, color0.getRGB());
      assertEquals("java.awt.Color[r=128,g=128,b=128]", color0.toString());
      assertEquals(128, color0.getBlue());
  }

  @Test
  public void test9()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      
      BasicStroke basicStroke0 = (BasicStroke)statisticalBarRenderer0.getBaseOutlineStroke();
      assertNotNull(basicStroke0);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      
      statisticalBarRenderer0.setErrorIndicatorStroke((Stroke) basicStroke0);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }
}
