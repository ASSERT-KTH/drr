/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:04:07 GMT 2014
 */

package org.jfree.chart.renderer.category;

import static org.junit.Assert.*;
import org.junit.Test;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JToolBar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;


public class StatisticalBarRendererEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertNotNull(statisticalBarRenderer0);
      
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals(-1, color0.getRGB());
      assertEquals(255, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals("java.awt.Color[r=255,g=255,b=255]", color0.toString());
      assertNotNull(color0);
      
      statisticalBarRenderer0.setErrorIndicatorPaint((Paint) color0);
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals(-1, color0.getRGB());
      assertEquals(255, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals("java.awt.Color[r=255,g=255,b=255]", color0.toString());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertNotNull(statisticalBarRenderer1);
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertFalse(boolean0);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertFalse(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
  }

  @Test
  public void test1()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
      //  // Unstable assertion: assertNotNull(rectangle2D_Double0);
      
      double double0 = (-8.035216484104954);
      int int0 = rectangle2D_Double0.outcode(double0, double0);
      //  // Unstable assertion: assertEquals(7, int0);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
      
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertNotNull(statisticalBarRenderer0);
      
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(1, minMaxCategoryRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.isDrawLines());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertNotNull(minMaxCategoryRenderer0);
      
      Color color0 = (Color)minMaxCategoryRenderer0.getGroupPaint();
      //  // Unstable assertion: assertEquals(0, color0.getBlue());
      //  // Unstable assertion: assertEquals(0, color0.getRed());
      //  // Unstable assertion: assertEquals("java.awt.Color[r=0,g=0,b=0]", color0.toString());
      //  // Unstable assertion: assertEquals(-16777216, color0.getRGB());
      //  // Unstable assertion: assertEquals(255, color0.getAlpha());
      //  // Unstable assertion: assertEquals(0, color0.getGreen());
      //  // Unstable assertion: assertEquals(1, color0.getTransparency());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(1, minMaxCategoryRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.isDrawLines());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertNotNull(color0);
      
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer((Paint) color0, (Paint) color0, (Paint) color0, (Paint) color0);
      //  // Unstable assertion: assertEquals(0, color0.getBlue());
      //  // Unstable assertion: assertEquals(0, color0.getRed());
      //  // Unstable assertion: assertEquals("java.awt.Color[r=0,g=0,b=0]", color0.toString());
      //  // Unstable assertion: assertEquals(-16777216, color0.getRGB());
      //  // Unstable assertion: assertEquals(255, color0.getAlpha());
      //  // Unstable assertion: assertEquals(0, color0.getGreen());
      //  // Unstable assertion: assertEquals(1, color0.getTransparency());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(0, waterfallBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(0, waterfallBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(1, waterfallBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(1, minMaxCategoryRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.isDrawLines());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertNotNull(waterfallBarRenderer0);
      
      ItemLabelPosition itemLabelPosition0 = waterfallBarRenderer0.getPositiveItemLabelPosition(int0, int0);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(0, color0.getBlue());
      //  // Unstable assertion: assertEquals(0, color0.getRed());
      //  // Unstable assertion: assertEquals("java.awt.Color[r=0,g=0,b=0]", color0.toString());
      //  // Unstable assertion: assertEquals(-16777216, color0.getRGB());
      //  // Unstable assertion: assertEquals(255, color0.getAlpha());
      //  // Unstable assertion: assertEquals(0, color0.getGreen());
      //  // Unstable assertion: assertEquals(1, color0.getTransparency());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(0, waterfallBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(0, waterfallBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(1, waterfallBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01D);
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(1, minMaxCategoryRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.isDrawLines());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
      //  // Unstable assertion: assertNotNull(itemLabelPosition0);
      
      boolean boolean0 = false;
      statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(int0, itemLabelPosition0, boolean0);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0, color0.getBlue());
      //  // Unstable assertion: assertEquals(0, color0.getRed());
      //  // Unstable assertion: assertEquals("java.awt.Color[r=0,g=0,b=0]", color0.toString());
      //  // Unstable assertion: assertEquals(-16777216, color0.getRGB());
      //  // Unstable assertion: assertEquals(255, color0.getAlpha());
      //  // Unstable assertion: assertEquals(0, color0.getGreen());
      //  // Unstable assertion: assertEquals(1, color0.getTransparency());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(0, waterfallBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(0, waterfallBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(1, waterfallBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(true, waterfallBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(false, waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01D);
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(1, minMaxCategoryRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.isDrawLines());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, minMaxCategoryRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, minMaxCategoryRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, minMaxCategoryRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      //  // Unstable assertion: assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer1.getRowCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer1.getColumnCount());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer1.getPassCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertNotNull(statisticalBarRenderer1);
      //  // Unstable assertion: assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      boolean boolean1 = statisticalBarRenderer0.equals((Object) statisticalBarRenderer1);
      //  // Unstable assertion: assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      //  // Unstable assertion: assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      //  // Unstable assertion: assertFalse(boolean1);
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer1.getRowCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer1.getColumnCount());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer1.getPassCount());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertTrue(boolean1 == boolean0);
      //  // Unstable assertion: assertFalse(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      //  // Unstable assertion: assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
  }

  @Test
  public void test2()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertNotNull(statisticalBarRenderer0);
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertNotNull(statisticalBarRenderer1);
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertTrue(boolean0);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertTrue(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
  }

  @Test
  public void test3()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
      //  // Unstable assertion: assertNotNull(rectangle2D_Double0);
      
      double double0 = (-8.035216484104954);
      int int0 = rectangle2D_Double0.outcode(double0, double0);
      //  // Unstable assertion: assertEquals(7, int0);
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
      
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertNotNull(statisticalBarRenderer0);
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) int0);
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      //  // Unstable assertion: assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getRowCount());
      //  // Unstable assertion: assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      //  // Unstable assertion: assertEquals(0, statisticalBarRenderer0.getColumnCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      //  // Unstable assertion: assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      //  // Unstable assertion: assertEquals(1, statisticalBarRenderer0.getPassCount());
      //  // Unstable assertion: assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      //  // Unstable assertion: assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      //  // Unstable assertion: assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      //  // Unstable assertion: assertEquals(104.04, rectangle2D_Double0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMaxX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getMinX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.02, rectangle2D_Double0.getCenterY(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.getCenterX(), 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.y, 0.01D);
      //  // Unstable assertion: assertEquals(104.0, rectangle2D_Double0.x, 0.01D);
      //  // Unstable assertion: assertEquals(0.0, rectangle2D_Double0.width, 0.01D);
      //  // Unstable assertion: assertEquals(0.04, rectangle2D_Double0.height, 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertNotNull(statisticalBarRenderer0);
      
      Graphics2D graphics2D0 = null;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, ganttRenderer0.getPassCount());
      assertEquals(0.2, ganttRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, ganttRenderer0.getBaseCreateEntities());
      assertEquals(0.0, ganttRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, ganttRenderer0.getBase(), 0.01D);
      assertEquals(false, ganttRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, ganttRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, ganttRenderer0.getColumnCount());
      assertEquals(0.65, ganttRenderer0.getEndPercent(), 0.01D);
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, ganttRenderer0.getRowCount());
      assertEquals(0.0, ganttRenderer0.getLowerClip(), 0.01D);
      assertEquals(1.0, ganttRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, ganttRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, ganttRenderer0.isDrawBarOutline());
      assertEquals(true, ganttRenderer0.getBaseSeriesVisible());
      assertEquals(false, ganttRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, ganttRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.35, ganttRenderer0.getStartPercent(), 0.01D);
      assertEquals(0.0, ganttRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, ganttRenderer0.getBaseSeriesVisibleInLegend());
      assertNotNull(ganttRenderer0);
      
      int int0 = 0;
      JToolBar jToolBar0 = new JToolBar(int0);
      assertEquals(false, jToolBar0.isLightweight());
      assertEquals(false, jToolBar0.isFocusCycleRoot());
      assertEquals(false, jToolBar0.getIgnoreRepaint());
      assertEquals(true, jToolBar0.isBackgroundSet());
      assertEquals(false, jToolBar0.isValid());
      assertEquals(true, jToolBar0.getFocusTraversalKeysEnabled());
      assertEquals(false, jToolBar0.isDisplayable());
      assertEquals(true, jToolBar0.isVisible());
      assertEquals(false, jToolBar0.isPreferredSizeSet());
      assertEquals(0, jToolBar0.getComponentCount());
      assertEquals(false, jToolBar0.isShowing());
      assertEquals(false, jToolBar0.isMaximumSizeSet());
      assertEquals(false, jToolBar0.isCursorSet());
      assertEquals(false, jToolBar0.isMinimumSizeSet());
      assertEquals(false, jToolBar0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToolBar0.isForegroundSet());
      assertEquals(0, jToolBar0.countComponents());
      assertEquals(true, jToolBar0.isFontSet());
      assertEquals(false, jToolBar0.isFocusTraversalPolicySet());
      assertEquals(true, jToolBar0.isEnabled());
      assertNotNull(jToolBar0);
      
      Action action0 = null;
      JButton jButton0 = jToolBar0.add(action0);
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jToolBar0.isLightweight());
      assertEquals(false, jToolBar0.isFocusCycleRoot());
      assertEquals(false, jToolBar0.getIgnoreRepaint());
      assertEquals(true, jToolBar0.isBackgroundSet());
      assertEquals(false, jToolBar0.isValid());
      assertEquals(true, jToolBar0.getFocusTraversalKeysEnabled());
      assertEquals(1, jToolBar0.getComponentCount());
      assertEquals(false, jToolBar0.isDisplayable());
      assertEquals(true, jToolBar0.isVisible());
      assertEquals(false, jToolBar0.isPreferredSizeSet());
      assertEquals(false, jToolBar0.isShowing());
      assertEquals(false, jToolBar0.isMaximumSizeSet());
      assertEquals(false, jToolBar0.isCursorSet());
      assertEquals(false, jToolBar0.isMinimumSizeSet());
      assertEquals(false, jToolBar0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToolBar0.isForegroundSet());
      assertEquals(true, jToolBar0.isFontSet());
      assertEquals(1, jToolBar0.countComponents());
      assertEquals(false, jToolBar0.isFocusTraversalPolicySet());
      assertEquals(true, jToolBar0.isEnabled());
      assertNotNull(jButton0);
      
      Rectangle rectangle0 = jButton0.getVisibleRect();
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, jToolBar0.isLightweight());
      assertEquals(false, jToolBar0.isFocusCycleRoot());
      assertEquals(false, jToolBar0.getIgnoreRepaint());
      assertEquals(true, jToolBar0.isBackgroundSet());
      assertEquals(false, jToolBar0.isValid());
      assertEquals(true, jToolBar0.getFocusTraversalKeysEnabled());
      assertEquals(1, jToolBar0.getComponentCount());
      assertEquals(false, jToolBar0.isDisplayable());
      assertEquals(true, jToolBar0.isVisible());
      assertEquals(false, jToolBar0.isPreferredSizeSet());
      assertEquals(false, jToolBar0.isShowing());
      assertEquals(false, jToolBar0.isMaximumSizeSet());
      assertEquals(false, jToolBar0.isCursorSet());
      assertEquals(false, jToolBar0.isMinimumSizeSet());
      assertEquals(false, jToolBar0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToolBar0.isForegroundSet());
      assertEquals(true, jToolBar0.isFontSet());
      assertEquals(1, jToolBar0.countComponents());
      assertEquals(false, jToolBar0.isFocusTraversalPolicySet());
      assertEquals(true, jToolBar0.isEnabled());
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(rectangle0);
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(combinedRangeCategoryPlot0);
      
      PlotRenderingInfo plotRenderingInfo0 = null;
      CategoryItemRendererState categoryItemRendererState0 = ganttRenderer0.initialise(graphics2D0, (Rectangle2D) rectangle0, (CategoryPlot) combinedRangeCategoryPlot0, rectangle0.x, plotRenderingInfo0);
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, ganttRenderer0.getPassCount());
      assertEquals(0.2, ganttRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, ganttRenderer0.getBaseCreateEntities());
      assertEquals(0.0, ganttRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, ganttRenderer0.getBase(), 0.01D);
      assertEquals(false, ganttRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, ganttRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, ganttRenderer0.getColumnCount());
      assertEquals(0.65, ganttRenderer0.getEndPercent(), 0.01D);
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, ganttRenderer0.getRowCount());
      assertEquals(0.0, ganttRenderer0.getLowerClip(), 0.01D);
      assertEquals(1.0, ganttRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, ganttRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, ganttRenderer0.isDrawBarOutline());
      assertEquals(true, ganttRenderer0.getBaseSeriesVisible());
      assertEquals(false, ganttRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, ganttRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, ganttRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.35, ganttRenderer0.getStartPercent(), 0.01D);
      assertEquals(1.05, ganttRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, ganttRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01D);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01D);
      assertEquals(false, jToolBar0.isLightweight());
      assertEquals(false, jToolBar0.isFocusCycleRoot());
      assertEquals(false, jToolBar0.getIgnoreRepaint());
      assertEquals(true, jToolBar0.isBackgroundSet());
      assertEquals(false, jToolBar0.isValid());
      assertEquals(true, jToolBar0.getFocusTraversalKeysEnabled());
      assertEquals(1, jToolBar0.getComponentCount());
      assertEquals(false, jToolBar0.isDisplayable());
      assertEquals(true, jToolBar0.isVisible());
      assertEquals(false, jToolBar0.isPreferredSizeSet());
      assertEquals(false, jToolBar0.isShowing());
      assertEquals(false, jToolBar0.isMaximumSizeSet());
      assertEquals(false, jToolBar0.isCursorSet());
      assertEquals(false, jToolBar0.isMinimumSizeSet());
      assertEquals(false, jToolBar0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToolBar0.isForegroundSet());
      assertEquals(true, jToolBar0.isFontSet());
      assertEquals(1, jToolBar0.countComponents());
      assertEquals(false, jToolBar0.isFocusTraversalPolicySet());
      assertEquals(true, jToolBar0.isEnabled());
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(categoryItemRendererState0);
      
      String string0 = "";
      CategoryAxis categoryAxis0 = new CategoryAxis(string0);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertNull(categoryAxis0.getLabelURL());
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01D);
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01D);
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01D);
      assertEquals(false, categoryAxis0.isTickMarksVisible());
      assertEquals(true, categoryAxis0.isVisible());
      assertEquals(true, categoryAxis0.isAxisLineVisible());
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals("", categoryAxis0.getLabel());
      assertNull(categoryAxis0.getLabelToolTip());
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(true, categoryAxis0.isTickLabelsVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01D);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01D);
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertNotNull(categoryAxis0);
      
      LevelRenderer levelRenderer0 = new LevelRenderer();
      assertEquals(true, levelRenderer0.getBaseSeriesVisible());
      assertEquals(0.2, levelRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, levelRenderer0.getPassCount());
      assertEquals(true, levelRenderer0.getBaseCreateEntities());
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, levelRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, levelRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, levelRenderer0.getRowCount());
      assertEquals(1.0, levelRenderer0.getMaximumItemWidth(), 0.01D);
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, levelRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, levelRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, levelRenderer0.getColumnCount());
      assertEquals(true, levelRenderer0.getBaseSeriesVisibleInLegend());
      assertNotNull(levelRenderer0);
      
      NumberAxis numberAxis0 = (NumberAxis)levelRenderer0.getRangeAxis(combinedRangeCategoryPlot0, rectangle0.height);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(true, levelRenderer0.getBaseSeriesVisible());
      assertEquals(0.2, levelRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, levelRenderer0.getPassCount());
      assertEquals(true, levelRenderer0.getBaseCreateEntities());
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, levelRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, levelRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, levelRenderer0.getRowCount());
      assertEquals(1.0, levelRenderer0.getMaximumItemWidth(), 0.01D);
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, levelRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, levelRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, levelRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, levelRenderer0.getColumnCount());
      assertEquals(true, levelRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(false, jButton0.isFocusTraversalPolicyProvider());
      assertEquals(false, jButton0.isDisplayable());
      assertEquals(false, jButton0.isMaximumSizeSet());
      assertEquals(false, jButton0.isLightweight());
      assertEquals(false, jButton0.isFocusCycleRoot());
      assertEquals(false, jButton0.getIgnoreRepaint());
      assertEquals(false, jButton0.isPreferredSizeSet());
      assertEquals(true, jButton0.isForegroundSet());
      assertEquals(true, jButton0.isBackgroundSet());
      assertEquals(false, jButton0.isValid());
      assertEquals(false, jButton0.isFocusTraversalPolicySet());
      assertEquals(false, jButton0.isMinimumSizeSet());
      assertEquals(0, jButton0.getComponentCount());
      assertEquals(true, jButton0.isFontSet());
      assertEquals(0, jButton0.countComponents());
      assertEquals(true, jButton0.isVisible());
      assertEquals(false, jButton0.isShowing());
      assertEquals(false, jButton0.isCursorSet());
      assertEquals(true, jButton0.getFocusTraversalKeysEnabled());
      assertEquals(true, jButton0.isEnabled());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(false, jToolBar0.isLightweight());
      assertEquals(false, jToolBar0.isFocusCycleRoot());
      assertEquals(false, jToolBar0.getIgnoreRepaint());
      assertEquals(true, jToolBar0.isBackgroundSet());
      assertEquals(false, jToolBar0.isValid());
      assertEquals(true, jToolBar0.getFocusTraversalKeysEnabled());
      assertEquals(1, jToolBar0.getComponentCount());
      assertEquals(false, jToolBar0.isDisplayable());
      assertEquals(true, jToolBar0.isVisible());
      assertEquals(false, jToolBar0.isPreferredSizeSet());
      assertEquals(false, jToolBar0.isShowing());
      assertEquals(false, jToolBar0.isMaximumSizeSet());
      assertEquals(false, jToolBar0.isCursorSet());
      assertEquals(false, jToolBar0.isMinimumSizeSet());
      assertEquals(false, jToolBar0.isFocusTraversalPolicyProvider());
      assertEquals(true, jToolBar0.isForegroundSet());
      assertEquals(true, jToolBar0.isFontSet());
      assertEquals(1, jToolBar0.countComponents());
      assertEquals(false, jToolBar0.isFocusTraversalPolicySet());
      assertEquals(true, jToolBar0.isEnabled());
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(numberAxis0);
      
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertNotNull(defaultStatisticalCategoryDataset0);
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawVerticalItem(graphics2D0, categoryItemRendererState0, rectangle0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis0, defaultStatisticalCategoryDataset0, rectangle0.y, rectangle0.height);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertNotNull(statisticalBarRenderer0);
      
      Graphics2D graphics2D0 = null;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01D);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01D);
      assertNotNull(categoryItemRendererState0);
      
      String string0 = "";
      boolean boolean0 = false;
      JInternalFrame jInternalFrame0 = new JInternalFrame(string0, boolean0, boolean0);
      assertEquals(false, jInternalFrame0.isMinimumSizeSet());
      assertEquals(false, jInternalFrame0.isShowing());
      assertEquals(2, jInternalFrame0.countComponents());
      assertEquals(false, jInternalFrame0.isFocusTraversalPolicyProvider());
      assertEquals(false, jInternalFrame0.isLightweight());
      assertEquals(false, jInternalFrame0.isPreferredSizeSet());
      assertEquals(false, jInternalFrame0.isVisible());
      assertEquals(false, jInternalFrame0.isCursorSet());
      assertEquals(false, jInternalFrame0.getIgnoreRepaint());
      assertEquals(true, jInternalFrame0.getFocusTraversalKeysEnabled());
      assertEquals(true, jInternalFrame0.isFocusTraversalPolicySet());
      assertEquals(true, jInternalFrame0.isEnabled());
      assertEquals(true, jInternalFrame0.isBackgroundSet());
      assertEquals(false, jInternalFrame0.isDisplayable());
      assertEquals(false, jInternalFrame0.isFontSet());
      assertEquals(false, jInternalFrame0.isValid());
      assertEquals(false, jInternalFrame0.isMaximumSizeSet());
      assertEquals(false, jInternalFrame0.isForegroundSet());
      assertEquals(2, jInternalFrame0.getComponentCount());
      assertNotNull(jInternalFrame0);
      
      Rectangle rectangle0 = jInternalFrame0.bounds();
      assertEquals(false, jInternalFrame0.isMinimumSizeSet());
      assertEquals(false, jInternalFrame0.isShowing());
      assertEquals(2, jInternalFrame0.countComponents());
      assertEquals(false, jInternalFrame0.isFocusTraversalPolicyProvider());
      assertEquals(false, jInternalFrame0.isLightweight());
      assertEquals(false, jInternalFrame0.isPreferredSizeSet());
      assertEquals(false, jInternalFrame0.isVisible());
      assertEquals(false, jInternalFrame0.isCursorSet());
      assertEquals(false, jInternalFrame0.getIgnoreRepaint());
      assertEquals(true, jInternalFrame0.getFocusTraversalKeysEnabled());
      assertEquals(true, jInternalFrame0.isFocusTraversalPolicySet());
      assertEquals(true, jInternalFrame0.isEnabled());
      assertEquals(true, jInternalFrame0.isBackgroundSet());
      assertEquals(false, jInternalFrame0.isDisplayable());
      assertEquals(false, jInternalFrame0.isFontSet());
      assertEquals(false, jInternalFrame0.isValid());
      assertEquals(false, jInternalFrame0.isMaximumSizeSet());
      assertEquals(false, jInternalFrame0.isForegroundSet());
      assertEquals(2, jInternalFrame0.getComponentCount());
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertNotNull(rectangle0);
      
      CategoryAxis categoryAxis0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertEquals(true, combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeZoomable());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedDomainCategoryPlot0.isDomainZoomable());
      assertEquals(false, combinedDomainCategoryPlot0.isSubplot());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertNotNull(combinedDomainCategoryPlot0);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(boolean0, boolean0);
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseShapesFilled());
      assertEquals(false, statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(true, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getBaseShapesVisible());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getBaseLinesVisible());
      assertEquals(false, statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalLineAndShapeRenderer0.getBaseItemLabelsVisible());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(combinedDomainCategoryPlot0, rectangle0.width);
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertEquals(true, combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeZoomable());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedDomainCategoryPlot0.isDomainZoomable());
      assertEquals(false, combinedDomainCategoryPlot0.isSubplot());
      assertEquals(true, combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, jInternalFrame0.isMinimumSizeSet());
      assertEquals(false, jInternalFrame0.isShowing());
      assertEquals(2, jInternalFrame0.countComponents());
      assertEquals(false, jInternalFrame0.isFocusTraversalPolicyProvider());
      assertEquals(false, jInternalFrame0.isLightweight());
      assertEquals(false, jInternalFrame0.isPreferredSizeSet());
      assertEquals(false, jInternalFrame0.isVisible());
      assertEquals(false, jInternalFrame0.isCursorSet());
      assertEquals(false, jInternalFrame0.getIgnoreRepaint());
      assertEquals(true, jInternalFrame0.getFocusTraversalKeysEnabled());
      assertEquals(true, jInternalFrame0.isFocusTraversalPolicySet());
      assertEquals(true, jInternalFrame0.isEnabled());
      assertEquals(true, jInternalFrame0.isBackgroundSet());
      assertEquals(false, jInternalFrame0.isDisplayable());
      assertEquals(false, jInternalFrame0.isFontSet());
      assertEquals(false, jInternalFrame0.isValid());
      assertEquals(false, jInternalFrame0.isMaximumSizeSet());
      assertEquals(false, jInternalFrame0.isForegroundSet());
      assertEquals(2, jInternalFrame0.getComponentCount());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseShapesFilled());
      assertEquals(false, statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(true, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getBaseShapesVisible());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalLineAndShapeRenderer0.getBaseSeriesVisible());
      assertEquals(true, statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getBaseLinesVisible());
      assertEquals(false, statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalLineAndShapeRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertNull(valueAxis0);
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertNotNull(combinedRangeCategoryPlot0);
      
      CategoryDataset categoryDataset0 = combinedRangeCategoryPlot0.getDataset(rectangle0.width);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(false, jInternalFrame0.isMinimumSizeSet());
      assertEquals(false, jInternalFrame0.isShowing());
      assertEquals(2, jInternalFrame0.countComponents());
      assertEquals(false, jInternalFrame0.isFocusTraversalPolicyProvider());
      assertEquals(false, jInternalFrame0.isLightweight());
      assertEquals(false, jInternalFrame0.isPreferredSizeSet());
      assertEquals(false, jInternalFrame0.isVisible());
      assertEquals(false, jInternalFrame0.isCursorSet());
      assertEquals(false, jInternalFrame0.getIgnoreRepaint());
      assertEquals(true, jInternalFrame0.getFocusTraversalKeysEnabled());
      assertEquals(true, jInternalFrame0.isFocusTraversalPolicySet());
      assertEquals(true, jInternalFrame0.isEnabled());
      assertEquals(true, jInternalFrame0.isBackgroundSet());
      assertEquals(false, jInternalFrame0.isDisplayable());
      assertEquals(false, jInternalFrame0.isFontSet());
      assertEquals(false, jInternalFrame0.isValid());
      assertEquals(false, jInternalFrame0.isMaximumSizeSet());
      assertEquals(false, jInternalFrame0.isForegroundSet());
      assertEquals(2, jInternalFrame0.getComponentCount());
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertNull(categoryDataset0);
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawItem(graphics2D0, categoryItemRendererState0, (Rectangle2D) rectangle0, (CategoryPlot) combinedDomainCategoryPlot0, categoryAxis0, valueAxis0, categoryDataset0, rectangle0.y, rectangle0.y, rectangle0.width);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires StatisticalCategoryDataset.
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertNotNull(statisticalBarRenderer0);
      
      BasicStroke basicStroke0 = (BasicStroke)statisticalBarRenderer0.getErrorIndicatorStroke();
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertNotNull(basicStroke0);
  }

  @Test
  public void test7()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertNotNull(statisticalBarRenderer0);
      
      Color color0 = (Color)statisticalBarRenderer0.getErrorIndicatorPaint();
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals("java.awt.Color[r=128,g=128,b=128]", color0.toString());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(-8355712, color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertNotNull(color0);
  }

  @Test
  public void test8()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertNotNull(statisticalBarRenderer0);
      
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_CROSSHAIR_STROKE;
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getEndCap());
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      statisticalBarRenderer0.setErrorIndicatorStroke((Stroke) basicStroke0);
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getEndCap());
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
  }
}
