/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:01:29 GMT 2014
 */

package org.jfree.data.time;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.awt.event.KeyEvent;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;
import javax.swing.text.View;




import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.general.SeriesException;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class TimeSeriesEvoSuite_branch_Test  {

  @Test
  public void test00() {}
//   @Test
//   public void test00()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNotNull(timeSeries0);
//       
//       int int0 = 0;
//       timeSeries0.setMaximumItemCount(int0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       
//       double double0 = timeSeries0.getMaxY();
//       assertEquals(Double.NaN, double0, 0.01D);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       
//       timeSeries0.add((RegularTimePeriod) month0, (Number) double0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//   }

  @Test
  public void test01() {}
//   @Test
//   public void test01()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       String string0 = "P";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertNotNull(timeSeries0);
//       
//       Number number0 = null;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, number0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.delete((RegularTimePeriod) month0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("P", timeSeries0.getDomainDescription());
//   }

  @Test
  public void test02() {}
//   @Test
//   public void test02()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(day0);
//       
//       String string0 = null;
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) day0, string0, string0);
//       assertNull(timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       int int0 = timeSeries0.hashCode();
//       assertEquals((-1552660357), int0);
//       assertNull(timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2, day0.getMonth());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//   }

  @Test
  public void test03() {}
//   @Test
//   public void test03()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       
//       String string0 = "P";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeries timeSeries1 = new TimeSeries((Comparable) string0, string0, string0);
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals("P", timeSeries1.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals("P", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       
//       boolean boolean0 = timeSeries0.equals((Object) timeSeries1);
//       assertFalse(boolean0);
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals("P", timeSeries1.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals("P", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//   }

  @Test
  public void test04() {}
//   @Test
//   public void test04()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       
//       String string0 = "P";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNotNull(timeSeries0);
//       
//       boolean boolean0 = timeSeries0.equals((Object) timeSeries0);
//       assertTrue(boolean0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertNotNull(millisecond0);
//       
//       timeSeries0.add((RegularTimePeriod) millisecond0, (Number) long0, boolean0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       
//       TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) month0, (RegularTimePeriod) month0);
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries1.getMinY(), 0.01D);
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("P", timeSeries1.getRangeDescription());
//       assertEquals("P", timeSeries1.getDomainDescription());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(1.393631999999E12, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//   }

  @Test
  public void test05() {}
//   @Test
//   public void test05()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(timeSeries0);
//       
//       TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) month0, (RegularTimePeriod) month0);
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//   }

  @Test
  public void test06() {}
//   @Test
//   public void test06()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month0);
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeries0);
//       
//       Month month1 = (Month)month0.previous();
//       assertFalse(month0.equals((Object)month1));
//       assertFalse(month1.equals((Object)month0));
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1, month1.getMonth());
//       assertNotNull(month1);
//       assertNotSame(month0, month1);
//       assertNotSame(month1, month0);
//       
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) month0, (RegularTimePeriod) month1);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires start on or before end.
//          //
//       }
//   }

  @Test
  public void test07()  throws Throwable  {
      int int0 = 0;
      Year year0 = new Year(int0);
      assertEquals((-62135812800001L), year0.getMiddleMillisecond());
      assertEquals((-62167392000000L), year0.getFirstMillisecond());
      assertEquals((-62104233600001L), year0.getLastMillisecond());
      assertEquals(0L, year0.getSerialIndex());
      assertEquals(0, year0.getYear());
      assertEquals("0", year0.toString());
      assertNotNull(year0);
      
      String string0 = ":em6t42*";
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, string0, string0);
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(":em6t42*", timeSeries0.getDomainDescription());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(0, timeSeries0.getItemCount());
      assertNull(timeSeries0.getDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(":em6t42*", timeSeries0.getRangeDescription());
      assertNotNull(timeSeries0);
      
      Minute minute0 = Minute.parseMinute(string0);
      assertNull(minute0);
      
      // Undeclared exception!
      try {
        TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) year0, (RegularTimePeriod) minute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'end' argument.
         //
      }
  }

  @Test
  public void test08() {}
//   @Test
//   public void test08()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(month0);
//       
//       String string0 = "oaD O[.FHW9faZ";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals("oaD O[.FHW9faZ", timeSeries0.getRangeDescription());
//       assertEquals("oaD O[.FHW9faZ", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertNotNull(timeSeries0);
//       
//       Month month1 = null;
//       // Undeclared exception!
//       try {
//         TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) month1, (RegularTimePeriod) month0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'start' argument.
//          //
//       }
//   }

  @Test
  public void test09()  throws Throwable  {
      int int0 = 3024;
      String string0 = "";
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, string0, string0);
      assertEquals(true, timeSeries0.getNotify());
      assertEquals("", timeSeries0.getDomainDescription());
      assertNull(timeSeries0.getDescription());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals("", timeSeries0.getRangeDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertNotNull(timeSeries0);
      
      int int1 = Integer.MAX_VALUE;
      // Undeclared exception!
      try {
        TimeSeries timeSeries1 = timeSeries0.createCopy(int1, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires start <= end.
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = "";
      TimeSeries timeSeries0 = new TimeSeries((Comparable) string0, string0, string0);
      assertEquals("", timeSeries0.getDomainDescription());
      assertNull(timeSeries0.getDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals("", timeSeries0.getRangeDescription());
      assertNotNull(timeSeries0);
      
      int int0 = (-545);
      // Undeclared exception!
      try {
        TimeSeries timeSeries1 = timeSeries0.createCopy(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires start >= 0.
         //
      }
  }

  @Test
  public void test11() {}
//   @Test
//   public void test11()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries0);
//       
//       int int0 = View.Y_AXIS;
//       assertEquals(1, int0);
//       
//       int int1 = 0;
//       assertFalse(int1 == int0);
//       
//       timeSeries0.add((RegularTimePeriod) month0, (Number) int0);
//       assertFalse(int0 == int1);
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       
//       boolean boolean0 = false;
//       timeSeries0.delete(int1, int1, boolean0);
//       assertFalse(int1 == int0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//   }

  @Test
  public void test12() {}
//   @Test
//   public void test12()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       boolean boolean0 = timeSeries0.isEmpty();
//       assertFalse(boolean0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("", timeSeries0.getRangeDescription());
//       
//       Month month1 = (Month)month0.previous();
//       assertFalse(month0.equals((Object)month1));
//       assertFalse(month1.equals((Object)month0));
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertNotNull(month1);
//       assertNotSame(month0, month1);
//       assertNotSame(month1, month0);
//       
//       timeSeries0.add((RegularTimePeriod) month1, (Number) long0, boolean0);
//       assertFalse(month0.equals((Object)month1));
//       assertFalse(month1.equals((Object)month0));
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertNotSame(month0, month1);
//       assertNotSame(month1, month0);
//       
//       int int0 = 0;
//       timeSeries0.delete(int0, int0);
//       assertFalse(month0.equals((Object)month1));
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNotSame(month0, month1);
//   }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 22;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0);
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertNull(timeSeries0.getDescription());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(true, timeSeries0.isEmpty());
      assertNotNull(timeSeries0);
      
      boolean boolean0 = timeSeries0.isEmpty();
      assertTrue(boolean0);
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertNull(timeSeries0.getDescription());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(true, timeSeries0.isEmpty());
      
      int int1 = timeSeries0.hashCode();
      assertEquals(359695462, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertNull(timeSeries0.getDescription());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(true, timeSeries0.isEmpty());
      
      // Undeclared exception!
      try {
        timeSeries0.delete(int1, int0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires start <= end.
         //
      }
  }

  @Test
  public void test14() {}
//   @Test
//   public void test14()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeriesDataItem0);
//       
//       Month month1 = (Month)month0.previous();
//       assertFalse(month0.equals((Object)month1));
//       assertFalse(month1.equals((Object)month0));
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertNotNull(month1);
//       assertNotSame(month0, month1);
//       assertNotSame(month1, month0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.addOrUpdate((RegularTimePeriod) month1, (Number) long0);
//       assertFalse(month0.equals((Object)month1));
//       assertFalse(month1.equals((Object)month0));
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(2, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeriesDataItem1);
//       assertNotSame(month0, month1);
//       assertNotSame(month1, month0);
//       
//       timeSeries0.delete((RegularTimePeriod) month1);
//       assertFalse(month0.equals((Object)month1));
//       assertFalse(month1.equals((Object)month0));
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNotSame(month0, month1);
//       assertNotSame(month1, month0);
//   }

  @Test
  public void test15() {}
//   @Test
//   public void test15()  throws Throwable  {
//       String string0 = TimeSeries.DEFAULT_RANGE_DESCRIPTION;
//       assertEquals("Value", string0);
//       assertNotNull(string0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) string0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNotNull(timeSeries0);
//       
//       Quarter quarter0 = new Quarter();
//       assertEquals(2014, quarter0.getYearValue());
//       assertEquals(1388534400000L, quarter0.getFirstMillisecond());
//       assertEquals(8057L, quarter0.getSerialIndex());
//       assertEquals(1396310399999L, quarter0.getLastMillisecond());
//       assertEquals(1, quarter0.getQuarter());
//       assertEquals(1392422399999L, quarter0.getMiddleMillisecond());
//       assertNotNull(quarter0);
//       
//       timeSeries0.delete((RegularTimePeriod) quarter0);
//       assertEquals(2014, quarter0.getYearValue());
//       assertEquals(1388534400000L, quarter0.getFirstMillisecond());
//       assertEquals(8057L, quarter0.getSerialIndex());
//       assertEquals(1396310399999L, quarter0.getLastMillisecond());
//       assertEquals(1, quarter0.getQuarter());
//       assertEquals(1392422399999L, quarter0.getMiddleMillisecond());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//   }

  @Test
  public void test16() {}
//   @Test
//   public void test16()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.clear();
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//   }

  @Test
  public void test17() {}
//   @Test
//   public void test17()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       String string0 = "oaD O[.FHW9faZ";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("oaD O[.FHW9faZ", timeSeries0.getDomainDescription());
//       assertEquals("oaD O[.FHW9faZ", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.clear();
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("oaD O[.FHW9faZ", timeSeries0.getDomainDescription());
//       assertEquals("oaD O[.FHW9faZ", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//   }

  @Test
  public void test18()  throws Throwable  {
      Month month0 = new Month();
      //  // Unstable assertion: assertEquals(2, month0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
      //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
      //  // Unstable assertion: assertNotNull(month0);
      
      TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
      //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
      //  // Unstable assertion: assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
      //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
      //  // Unstable assertion: assertNull(timeSeries0.getDescription());
      //  // Unstable assertion: assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
      //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
      //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      //  // Unstable assertion: assertEquals(2, month0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
      //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
      //  // Unstable assertion: assertNotNull(timeSeries0);
      
      double double0 = 0.0;
      timeSeries0.add((RegularTimePeriod) month0, double0);
      //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
      //  // Unstable assertion: assertEquals(0.0, timeSeries0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
      //  // Unstable assertion: assertEquals(false, timeSeries0.isEmpty());
      //  // Unstable assertion: assertEquals(1, timeSeries0.getItemCount());
      //  // Unstable assertion: assertNull(timeSeries0.getDescription());
      //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      //  // Unstable assertion: assertEquals(0.0, timeSeries0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
      //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      //  // Unstable assertion: assertEquals(2, month0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
      //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
      
      long long0 = (-22L);
      boolean boolean0 = true;
      timeSeries0.removeAgedItems(long0, boolean0);
      //  // Unstable assertion: assertEquals("Value", timeSeries0.getRangeDescription());
      //  // Unstable assertion: assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      //  // Unstable assertion: assertEquals("Time", timeSeries0.getDomainDescription());
      //  // Unstable assertion: assertEquals(true, timeSeries0.isEmpty());
      //  // Unstable assertion: assertNull(timeSeries0.getDescription());
      //  // Unstable assertion: assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      //  // Unstable assertion: assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      //  // Unstable assertion: assertEquals(true, timeSeries0.getNotify());
      //  // Unstable assertion: assertEquals(0, timeSeries0.getItemCount());
      //  // Unstable assertion: assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      //  // Unstable assertion: assertEquals(2, month0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, month0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(2014, month0.getYearValue());
      //  // Unstable assertion: assertEquals(1393631999999L, month0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(24170L, month0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1391212800000L, month0.getFirstMillisecond());
  }

  @Test
  public void test19() {}
//   @Test
//   public void test19()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNotNull(timeSeries0);
//       
//       long long0 = 0L;
//       timeSeries0.setMaximumItemAge(long0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       
//       boolean boolean0 = timeSeries0.equals((Object) timeSeries0);
//       assertTrue(boolean0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       
//       int int0 = View.Y_AXIS;
//       assertEquals(1, int0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) int0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(1.0, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.removeAgedItems((long) int0, boolean0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(1.0, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//   }

  @Test
  public void test20() {}
//   @Test
//   public void test20()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNotNull(timeSeries0);
//       
//       long long0 = 0L;
//       boolean boolean0 = true;
//       timeSeries0.removeAgedItems(long0, boolean0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//   }

  @Test
  public void test21() {}
//   @Test
//   public void test21()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       boolean boolean0 = timeSeries0.isEmpty();
//       assertFalse(boolean0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       
//       long long1 = 0L;
//       assertFalse(long1 == long0);
//       
//       timeSeries0.setMaximumItemAge(long1);
//       assertFalse(long1 == long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       
//       Month month1 = (Month)month0.previous();
//       assertFalse(month1.equals((Object)month0));
//       assertFalse(month0.equals((Object)month1));
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month1);
//       assertNotSame(month1, month0);
//       assertNotSame(month0, month1);
//       
//       timeSeries0.add((RegularTimePeriod) month1, (Number) long0, boolean0);
//       assertFalse(month1.equals((Object)month0));
//       assertFalse(long0 == long1);
//       assertFalse(month0.equals((Object)month1));
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNotSame(month1, month0);
//       assertNotSame(month0, month1);
//   }

  @Test
  public void test22() {}
//   @Test
//   public void test22()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries0);
//       
//       int int0 = View.Y_AXIS;
//       assertEquals(1, int0);
//       
//       int int1 = 0;
//       assertFalse(int1 == int0);
//       
//       timeSeries0.setMaximumItemCount(int1);
//       assertFalse(int1 == int0);
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       
//       TimeSeries timeSeries1 = new TimeSeries((Comparable) month0);
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertNull(timeSeries1.getDescription());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       
//       timeSeries1.add((RegularTimePeriod) month0, (Number) int0);
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(int0 == int1);
//       assertNull(timeSeries1.getDescription());
//       assertEquals(1.0, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertEquals(1.0, timeSeries1.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertNotSame(timeSeries1, timeSeries0);
//       
//       TimeSeries timeSeries2 = timeSeries0.addAndOrUpdate(timeSeries1);
//       assertFalse(timeSeries2.equals((Object)timeSeries0));
//       assertFalse(timeSeries2.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(timeSeries1.equals((Object)timeSeries2));
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries0.equals((Object)timeSeries2));
//       assertEquals(9223372036854775807L, timeSeries2.getMaximumItemAge());
//       assertEquals("Value", timeSeries2.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries2.getMinY(), 0.01D);
//       assertEquals(true, timeSeries2.getNotify());
//       assertEquals(true, timeSeries2.isEmpty());
//       assertEquals(2147483647, timeSeries2.getMaximumItemCount());
//       assertEquals(0, timeSeries2.getItemCount());
//       assertEquals(Double.NaN, timeSeries2.getMaxY(), 0.01D);
//       assertNull(timeSeries2.getDescription());
//       assertEquals("Time", timeSeries2.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(1.0, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertEquals(1.0, timeSeries1.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries2);
//       assertNotSame(timeSeries2, timeSeries0);
//       assertNotSame(timeSeries2, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries1, timeSeries2);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries0, timeSeries2);
//   }

  @Test
  public void test23() {}
//   @Test
//   public void test23()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNotNull(timeSeries0);
//       
//       Number number0 = null;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, number0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, number0);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(false, timeSeriesDataItem1.isSelected());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNotNull(timeSeriesDataItem1);
//   }

  @Test
  public void test24() {}
//   @Test
//   public void test24()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeries0);
//       
//       Number number0 = null;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, number0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (double) long0);
//       assertEquals(false, timeSeriesDataItem1.isSelected());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeriesDataItem1);
//   }

  @Test
  public void test25()  throws Throwable  {
      int int0 = 12;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((long) int0);
      assertEquals(12L, fixedMillisecond0.getLastMillisecond());
      assertEquals(12L, fixedMillisecond0.getFirstMillisecond());
      assertEquals(12L, fixedMillisecond0.getSerialIndex());
      assertEquals(12L, fixedMillisecond0.getMiddleMillisecond());
      assertNotNull(fixedMillisecond0);
      
      String string0 = TimeSeries.DEFAULT_RANGE_DESCRIPTION;
      assertEquals("Value", string0);
      assertNotNull(string0);
      
      TimeSeries timeSeries0 = new TimeSeries((Comparable) string0);
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertNull(timeSeries0.getDescription());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertNotNull(timeSeries0);
      
      Class<RegularTimePeriod> class0 = RegularTimePeriod.class;
      timeSeries0.timePeriodClass = class0;
      assertEquals(false, timeSeries0.timePeriodClass.isPrimitive());
      assertEquals(false, timeSeries0.timePeriodClass.isSynthetic());
      assertEquals(1025, timeSeries0.timePeriodClass.getModifiers());
      assertEquals("class org.jfree.data.time.RegularTimePeriod", timeSeries0.timePeriodClass.toString());
      assertEquals(false, timeSeries0.timePeriodClass.isArray());
      assertEquals(false, timeSeries0.timePeriodClass.isAnnotation());
      assertEquals(false, timeSeries0.timePeriodClass.isInterface());
      assertEquals(false, timeSeries0.timePeriodClass.isEnum());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertNull(timeSeries0.getDescription());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertNotNull(timeSeries0.timePeriodClass);
      
      // Undeclared exception!
      try {
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) fixedMillisecond0, (double) int0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // You are trying to add data where the time period class is org.jfree.data.time.FixedMillisecond, but the TimeSeries is expecting an instance of org.jfree.data.time.RegularTimePeriod.
         //
      }
  }

  @Test
  public void test26() {}
//   @Test
//   public void test26()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) month0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       // Undeclared exception!
//       try {
//         TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.addOrUpdate(timeSeriesDataItem0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'period' argument.
//          //
//       }
//   }

  @Test
  public void test27() {}
//   @Test
//   public void test27()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(timeSeries0);
//       
//       int int0 = View.Y_AXIS;
//       assertEquals(1, int0);
//       
//       timeSeries0.add((RegularTimePeriod) month0, (Number) int0);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1.0, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       
//       TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1.0, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertEquals(1, timeSeries1.getItemCount());
//       assertEquals(1.0, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(1.0, timeSeries1.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//   }

  @Test
  public void test28() {}
//   @Test
//   public void test28()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(month0);
//       
//       String string0 = "f";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("f", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("f", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(timeSeries0);
//       
//       Number number0 = null;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, number0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("f", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("f", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.update((RegularTimePeriod) month0, number0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("f", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("f", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//   }

  @Test
  public void test29() {}
//   @Test
//   public void test29()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeries0);
//       
//       Number number0 = null;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, number0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = 0;
//       timeSeries0.update(int0, (Number) long0);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//   }

  @Test
  public void test30() {}
//   @Test
//   public void test30()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeries0);
//       
//       int int0 = View.Y_AXIS;
//       assertEquals(1, int0);
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.update((RegularTimePeriod) month0, (Number) int0);
//         fail("Expecting exception: RuntimeException");
//       
//       } catch(RuntimeException e) {
//          //
//          // There is no existing value for the specified 'period'.
//          //
//       }
//   }

  @Test
  public void test31() {}
//   @Test
//   public void test31()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertNull(timeSeriesDataItem0);
//       
//       timeSeries0.update((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//   }

  @Test
  public void test32() {}
//   @Test
//   public void test32()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNull(timeSeriesDataItem0);
//       
//       Month month1 = (Month)month0.previous();
//       assertFalse(month1.equals((Object)month0));
//       assertFalse(month0.equals((Object)month1));
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month1);
//       assertNotSame(month1, month0);
//       assertNotSame(month0, month1);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.addOrUpdate((RegularTimePeriod) month1, (Number) long0);
//       assertFalse(month1.equals((Object)month0));
//       assertFalse(month0.equals((Object)month1));
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNull(timeSeriesDataItem1);
//       assertNotSame(month1, month0);
//       assertNotSame(month0, month1);
//       
//       TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) month1, (RegularTimePeriod) month0);
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(month1.equals((Object)month0));
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertFalse(month0.equals((Object)month1));
//       assertEquals(2, timeSeries1.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries1.getMaxY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries1.getRangeDescription());
//       assertEquals(1.393631999999E12, timeSeries1.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals("java.util.Date", timeSeries1.getDomainDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(false, timeSeries1.isEmpty());
//       assertEquals(1389873599999L, month1.getMiddleMillisecond());
//       assertEquals(2014, month1.getYearValue());
//       assertEquals(1391212799999L, month1.getLastMillisecond());
//       assertEquals(24169L, month1.getSerialIndex());
//       assertEquals(1388534400000L, month1.getFirstMillisecond());
//       assertEquals(1, month1.getMonth());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(month1, month0);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(month0, month1);
//   }

  @Test
  public void test33() {}
//   @Test
//   public void test33()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNull(timeSeriesDataItem0);
//       
//       boolean boolean0 = timeSeries0.isEmpty();
//       assertFalse(boolean0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.add((RegularTimePeriod) month0, (Number) long0, boolean0);
//         fail("Expecting exception: RuntimeException");
//       
//       } catch(RuntimeException e) {
//          //
//          // You are attempting to add an observation for the time period February 2014 but the series already contains an observation for that time period. Duplicates are not permitted.  Try using the addOrUpdate() method.
//          //
//       }
//   }

  @Test
  public void test34() {}
//   @Test
//   public void test34()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       
//       String string0 = "P";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertNull(timeSeries0.getDescription());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertNull(timeSeriesDataItem0);
//       
//       boolean boolean0 = timeSeries0.equals((Object) timeSeries0);
//       assertTrue(boolean0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals("P", timeSeries0.getRangeDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("P", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       
//       Millisecond millisecond0 = new Millisecond();
//       assertEquals(1392409281320L, millisecond0.getFirstMillisecond());
//       assertEquals(1392409281320L, millisecond0.getLastMillisecond());
//       assertEquals(320L, millisecond0.getMillisecond());
//       assertEquals(1392409281320L, millisecond0.getMiddleMillisecond());
//       assertEquals(3601570881320L, millisecond0.getSerialIndex());
//       assertNotNull(millisecond0);
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.add((RegularTimePeriod) millisecond0, (Number) long0, boolean0);
//         fail("Expecting exception: RuntimeException");
//       
//       } catch(RuntimeException e) {
//          //
//          // You are trying to add data where the time period class is org.jfree.data.time.Millisecond, but the TimeSeries is expecting an instance of org.jfree.data.time.Month.
//          //
//       }
//   }

  @Test
  public void test35() {}
//   @Test
//   public void test35()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(day0);
//       
//       String string0 = "\\np pX";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) day0, string0, string0);
//       assertEquals("\\np pX", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("\\np pX", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       boolean boolean0 = timeSeries0.equals((Object) day0);
//       assertFalse(boolean0);
//       assertEquals("\\np pX", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("\\np pX", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       
//       int int0 = (-74);
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (double) int0);
//       assertEquals("\\np pX", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals("\\np pX", timeSeries0.getDomainDescription());
//       assertEquals((-74.0), timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals((-74.0), timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2014, day0.getYear());
//       assertEquals(2, day0.getMonth());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertNull(timeSeriesDataItem0);
//       
//       // Undeclared exception!
//       try {
//         timeSeries0.add(timeSeriesDataItem0, boolean0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'item' argument.
//          //
//       }
//   }

  @Test
  public void test36()  throws Throwable  {
      int int0 = 12;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((long) int0);
      assertEquals(12L, fixedMillisecond0.getMiddleMillisecond());
      assertEquals(12L, fixedMillisecond0.getSerialIndex());
      assertEquals(12L, fixedMillisecond0.getFirstMillisecond());
      assertEquals(12L, fixedMillisecond0.getLastMillisecond());
      assertNotNull(fixedMillisecond0);
      
      String string0 = TimeSeries.DEFAULT_RANGE_DESCRIPTION;
      assertEquals("Value", string0);
      assertNotNull(string0);
      
      TimeSeries timeSeries0 = new TimeSeries((Comparable) string0);
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertNull(timeSeries0.getDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertNotNull(timeSeries0);
      
      Number number0 = timeSeries0.getValue((RegularTimePeriod) fixedMillisecond0);
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertNull(timeSeries0.getDescription());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals(12L, fixedMillisecond0.getMiddleMillisecond());
      assertEquals(12L, fixedMillisecond0.getSerialIndex());
      assertEquals(12L, fixedMillisecond0.getFirstMillisecond());
      assertEquals(12L, fixedMillisecond0.getLastMillisecond());
      assertNull(number0);
  }

  @Test
  public void test37() {}
//   @Test
//   public void test37()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(timeSeries0);
//       
//       MockDate mockDate0 = (MockDate)month0.getStart();
//       assertEquals("Sat Feb 01 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(mockDate0);
//       
//       Class<Object> class0 = Object.class;
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertEquals("GMT", zoneInfo0.getID());
//       assertNotNull(zoneInfo0);
//       
//       RegularTimePeriod regularTimePeriod0 = RegularTimePeriod.createInstance((Class) class0, (Date) mockDate0, (TimeZone) zoneInfo0);
//       assertEquals("Sat Feb 01 00:00:00 GMT 2014", mockDate0.toString());
//       assertEquals("GMT", zoneInfo0.getID());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNull(regularTimePeriod0);
//       
//       // Undeclared exception!
//       try {
//         int int0 = timeSeries0.getIndex(regularTimePeriod0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'period' argument.
//          //
//       }
//   }

  @Test
  public void test38() {}
//   @Test
//   public void test38()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       boolean boolean0 = true;
//       TimeSeries timeSeries1 = new TimeSeries((Comparable) month0);
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertEquals(true, timeSeries1.getNotify());
//       assertNull(timeSeries1.getDescription());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       
//       int int0 = KeyEvent.VK_NONCONVERT;
//       assertEquals(29, int0);
//       
//       timeSeries0.add((RegularTimePeriod) month0, (Number) int0, boolean0);
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(29.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(29.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotSame(timeSeries0, timeSeries1);
//       
//       Collection collection0 = timeSeries1.getTimePeriodsUniqueToOtherSeries(timeSeries0);
//       assertFalse(timeSeries1.equals((Object)timeSeries0));
//       assertFalse(timeSeries0.equals((Object)timeSeries1));
//       assertEquals(true, timeSeries1.getNotify());
//       assertNull(timeSeries1.getDescription());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(29.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(29.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(collection0);
//       assertNotSame(timeSeries1, timeSeries0);
//       assertNotSame(timeSeries0, timeSeries1);
//   }

  @Test
  public void test39() {}
//   @Test
//   public void test39()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       boolean boolean0 = true;
//       int int0 = KeyEvent.VK_NONCONVERT;
//       assertEquals(29, int0);
//       
//       timeSeries0.add((RegularTimePeriod) month0, (Number) int0, boolean0);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(29.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(29.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       
//       Collection collection0 = timeSeries0.getTimePeriodsUniqueToOtherSeries(timeSeries0);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(29.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(29.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(collection0);
//   }

  @Test
  public void test40() {}
//   @Test
//   public void test40()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       
//       String string0 = "";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNull(timeSeriesDataItem0);
//       
//       Collection collection0 = timeSeries0.getTimePeriods();
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("", timeSeries0.getDomainDescription());
//       assertEquals("", timeSeries0.getRangeDescription());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(collection0);
//   }

  @Test
  public void test41() {}
//   @Test
//   public void test41()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(timeSeries0);
//       
//       int int0 = 0;
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) int0);
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(0.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.getRawDataItem(month0);
//       assertEquals(false, timeSeriesDataItem1.isSelected());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(0.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(timeSeriesDataItem1);
//   }

  @Test
  public void test42() {}
//   @Test
//   public void test42()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getRawDataItem(month0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertNull(timeSeriesDataItem0);
//   }

  @Test
  public void test43() {}
//   @Test
//   public void test43()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertNull(timeSeriesDataItem0);
//       
//       TimeSeriesDataItem timeSeriesDataItem1 = timeSeries0.getDataItem((RegularTimePeriod) month0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(false, timeSeriesDataItem1.isSelected());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertNotNull(timeSeriesDataItem1);
//   }

  @Test
  public void test44() {}
//   @Test
//   public void test44()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNotNull(timeSeries0);
//       
//       long long0 = (-22L);
//       // Undeclared exception!
//       try {
//         timeSeries0.setMaximumItemAge(long0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Negative 'periods' argument.
//          //
//       }
//   }

  @Test
  public void test45() {}
//   @Test
//   public void test45()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertNotNull(month0);
//       
//       long long0 = month0.getLastMillisecond();
//       assertEquals(1393631999999L, long0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertNotNull(timeSeries0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) long0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertNull(timeSeriesDataItem0);
//       
//       int int0 = timeSeries0.hashCode();
//       assertEquals(469529412, int0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       
//       timeSeries0.setMaximumItemCount(int0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertEquals(1.393631999999E12, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(1.393631999999E12, timeSeries0.getMinY(), 0.01D);
//       assertEquals(469529412, timeSeries0.getMaximumItemCount());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//   }

  @Test
  public void test46() {}
//   @Test
//   public void test46()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertNotNull(timeSeries0);
//       
//       int int0 = (-171);
//       // Undeclared exception!
//       try {
//         timeSeries0.setMaximumItemCount(int0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Negative 'maximum' argument.
//          //
//       }
//   }

  @Test
  public void test47()  throws Throwable  {
      int int0 = 3024;
      String string0 = "";
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0, string0, string0);
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals("", timeSeries0.getRangeDescription());
      assertNull(timeSeries0.getDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("", timeSeries0.getDomainDescription());
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertEquals(0, timeSeries0.getItemCount());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertNotNull(timeSeries0);
      
      MockDate mockDate0 = new MockDate(int0, int0, int0, int0, int0, int0);
      assertEquals("Fri Aug 17 03:14:24 GMT 5184", mockDate0.toString());
      assertNotNull(mockDate0);
      
      Minute minute0 = new Minute((Date) mockDate0);
      assertEquals("Fri Aug 17 03:14:24 GMT 5184", mockDate0.toString());
      assertEquals(14, minute0.getMinute());
      assertEquals(101443806840000L, minute0.getFirstMillisecond());
      assertEquals(3, minute0.getHourValue());
      assertEquals(1727549474L, minute0.getSerialIndex());
      assertEquals(101443806899999L, minute0.getLastMillisecond());
      assertEquals(101443806869999L, minute0.getMiddleMillisecond());
      assertNotNull(minute0);
      
      boolean boolean0 = true;
      timeSeries0.add((RegularTimePeriod) minute0, (Number) int0, boolean0);
      assertEquals("Fri Aug 17 03:14:24 GMT 5184", mockDate0.toString());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals("", timeSeries0.getRangeDescription());
      assertEquals(1, timeSeries0.getItemCount());
      assertEquals(3024.0, timeSeries0.getMaxY(), 0.01D);
      assertEquals(false, timeSeries0.isEmpty());
      assertEquals(3024.0, timeSeries0.getMinY(), 0.01D);
      assertNull(timeSeries0.getDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("", timeSeries0.getDomainDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(14, minute0.getMinute());
      assertEquals(101443806840000L, minute0.getFirstMillisecond());
      assertEquals(3, minute0.getHourValue());
      assertEquals(1727549474L, minute0.getSerialIndex());
      assertEquals(101443806899999L, minute0.getLastMillisecond());
      assertEquals(101443806869999L, minute0.getMiddleMillisecond());
      
      Integer integer0 = (Integer)timeSeries0.getValue((RegularTimePeriod) minute0);
      assertEquals(3024, (int)integer0);
      assertEquals("Fri Aug 17 03:14:24 GMT 5184", mockDate0.toString());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals("", timeSeries0.getRangeDescription());
      assertEquals(1, timeSeries0.getItemCount());
      assertEquals(3024.0, timeSeries0.getMaxY(), 0.01D);
      assertEquals(false, timeSeries0.isEmpty());
      assertEquals(3024.0, timeSeries0.getMinY(), 0.01D);
      assertNull(timeSeries0.getDescription());
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("", timeSeries0.getDomainDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(14, minute0.getMinute());
      assertEquals(101443806840000L, minute0.getFirstMillisecond());
      assertEquals(3, minute0.getHourValue());
      assertEquals(1727549474L, minute0.getSerialIndex());
      assertEquals(101443806899999L, minute0.getLastMillisecond());
      assertEquals(101443806869999L, minute0.getMiddleMillisecond());
  }

  @Test
  public void test48() {}
//   @Test
//   public void test48()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       // Undeclared exception!
//       try {
//         RegularTimePeriod regularTimePeriod0 = timeSeries0.getNextTimePeriod();
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
//       
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test49() {}
//   @Test
//   public void test49()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(timeSeries0);
//       
//       List list0 = timeSeries0.getItems();
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, list0.isEmpty());
//       assertEquals(0, list0.size());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(list0);
//   }

  @Test
  public void test50() {}
//   @Test
//   public void test50()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       Class class0 = timeSeries0.getTimePeriodClass();
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(2, month0.getMonth());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNull(class0);
//   }

  @Test
  public void test51()  throws Throwable  {
      int int0 = 22;
      TimeSeries timeSeries0 = new TimeSeries((Comparable) int0);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(0, timeSeries0.getItemCount());
      assertNull(timeSeries0.getDescription());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
      assertNotNull(timeSeries0);
      
      double double0 = timeSeries0.getMinY();
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(2147483647, timeSeries0.getMaximumItemCount());
      assertEquals("Value", timeSeries0.getRangeDescription());
      assertEquals("Time", timeSeries0.getDomainDescription());
      assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
      assertEquals(true, timeSeries0.isEmpty());
      assertEquals(true, timeSeries0.getNotify());
      assertEquals(0, timeSeries0.getItemCount());
      assertNull(timeSeries0.getDescription());
      assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
      assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
  }

  @Test
  public void test52() {}
//   @Test
//   public void test52()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNotNull(timeSeries0);
//       
//       int int0 = View.Y_AXIS;
//       assertEquals(1, int0);
//       
//       TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, (Number) int0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(1.0, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(false, timeSeries0.isEmpty());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(1.0, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(1, timeSeries0.getItemCount());
//       assertNull(timeSeriesDataItem0);
//       
//       int int1 = 0;
//       assertFalse(int1 == int0);
//       
//       timeSeries0.setMaximumItemCount(int1);
//       assertFalse(int1 == int0);
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(true, timeSeries0.getNotify());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(0, timeSeries0.getMaximumItemCount());
//   }

  @Test
  public void test53() {}
//   @Test
//   public void test53()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(month0);
//       
//       String string0 = "java.util.Date";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0, string0, string0);
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertNotNull(timeSeries0);
//       
//       TimeSeries timeSeries1 = (TimeSeries)timeSeries0.clone();
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("java.util.Date", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals("java.util.Date", timeSeries0.getDomainDescription());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals("java.util.Date", timeSeries1.getRangeDescription());
//       assertNull(timeSeries1.getDescription());
//       assertEquals("java.util.Date", timeSeries1.getDomainDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//   }

  @Test
  public void test54() {}
//   @Test
//   public void test54()  throws Throwable  {
//       Day day0 = new Day();
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertNotNull(day0);
//       
//       String string0 = "\\np pX";
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) day0, string0, string0);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("\\np pX", timeSeries0.getRangeDescription());
//       assertEquals("\\np pX", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//       assertNotNull(timeSeries0);
//       
//       timeSeries0.setDomainDescription(string0);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals("\\np pX", timeSeries0.getRangeDescription());
//       assertEquals("\\np pX", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(14, day0.getDayOfMonth());
//       assertEquals(1392422399999L, day0.getLastMillisecond());
//       assertEquals(2, day0.getMonth());
//       assertEquals(1392336000000L, day0.getFirstMillisecond());
//       assertEquals(1392379199999L, day0.getMiddleMillisecond());
//       assertEquals(41684L, day0.getSerialIndex());
//       assertEquals(2014, day0.getYear());
//   }

  @Test
  public void test55() {}
//   @Test
//   public void test55()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertNotNull(timeSeries0);
//       
//       int int0 = 0;
//       TimeSeries timeSeries1 = timeSeries0.createCopy(int0, int0);
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertNotNull(timeSeries1);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//       
//       boolean boolean0 = timeSeries1.equals((Object) timeSeries0);
//       assertTrue(boolean0);
//       assertTrue(timeSeries0.equals((Object)timeSeries1));
//       assertTrue(timeSeries1.equals((Object)timeSeries0));
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(2147483647, timeSeries1.getMaximumItemCount());
//       assertEquals("Time", timeSeries1.getDomainDescription());
//       assertEquals(0, timeSeries1.getItemCount());
//       assertEquals(9223372036854775807L, timeSeries1.getMaximumItemAge());
//       assertNull(timeSeries1.getDescription());
//       assertEquals(true, timeSeries1.getNotify());
//       assertEquals(true, timeSeries1.isEmpty());
//       assertEquals(Double.NaN, timeSeries1.getMinY(), 0.01D);
//       assertEquals("Value", timeSeries1.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries1.getMaxY(), 0.01D);
//       assertNotSame(timeSeries0, timeSeries1);
//       assertNotSame(timeSeries1, timeSeries0);
//   }

  @Test
  public void test56() {}
//   @Test
//   public void test56()  throws Throwable  {
//       Month month0 = new Month();
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(month0);
//       
//       TimeSeries timeSeries0 = new TimeSeries((Comparable) month0);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals("Value", timeSeries0.getRangeDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//       assertNotNull(timeSeries0);
//       
//       String string0 = "Vf";
//       timeSeries0.setRangeDescription(string0);
//       assertEquals(0, timeSeries0.getItemCount());
//       assertEquals(Double.NaN, timeSeries0.getMinY(), 0.01D);
//       assertEquals("Time", timeSeries0.getDomainDescription());
//       assertEquals("Vf", timeSeries0.getRangeDescription());
//       assertNull(timeSeries0.getDescription());
//       assertEquals(Double.NaN, timeSeries0.getMaxY(), 0.01D);
//       assertEquals(2147483647, timeSeries0.getMaximumItemCount());
//       assertEquals(9223372036854775807L, timeSeries0.getMaximumItemAge());
//       assertEquals(true, timeSeries0.getNotify());
//       assertEquals(true, timeSeries0.isEmpty());
//       assertEquals(1392422399999L, month0.getMiddleMillisecond());
//       assertEquals(1393631999999L, month0.getLastMillisecond());
//       assertEquals(1391212800000L, month0.getFirstMillisecond());
//       assertEquals(2014, month0.getYearValue());
//       assertEquals(2, month0.getMonth());
//       assertEquals(24170L, month0.getSerialIndex());
//   }
}
