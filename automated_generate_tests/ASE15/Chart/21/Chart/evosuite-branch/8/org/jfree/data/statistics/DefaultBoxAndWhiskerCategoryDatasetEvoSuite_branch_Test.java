/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:06:25 GMT 2014
 */

package org.jfree.data.statistics;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.awt.event.ContainerEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;



import org.jfree.chart.util.TableOrder;
import org.jfree.data.KeyedObjects2D;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.time.Day;
import org.junit.runner.RunWith;


public class DefaultBoxAndWhiskerCategoryDatasetEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertNotNull(defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(boolean0);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset0, defaultBoxAndWhiskerCategoryDataset1);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(defaultBoxAndWhiskerCategoryDataset0.equals((Object)defaultBoxAndWhiskerCategoryDataset1));
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
  }

  @Test
  public void test01()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeUpperBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean1 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) double0);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test02()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test03()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      double double1 = 0.0;
      assertFalse(double1 == double0);
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double1, double0, double0, double0, double1, double1, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertFalse(double1 == double0);
      assertFalse(double0 == double1);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double1, (Comparable) double0);
      assertFalse(double1 == double0);
      assertFalse(double0 == double1);
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(1, int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list1 = keyedObjects2D0.getColumnKeys();
      assertNotSame(list1, list0);
      assertNotNull(list1);
      assertFalse(list1.equals((Object)list0));
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list1.isEmpty());
      assertEquals(1, list1.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) double0, (Number) int0, (List) list1);
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertNotSame(list1, list0);
      assertNotNull(boxAndWhiskerItem1);
      assertFalse(double0 == double1);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      assertFalse(list1.equals((Object)list0));
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list1.isEmpty());
      assertEquals(1, list1.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertNotSame(list1, list0);
      assertFalse(double0 == double1);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      assertFalse(list1.equals((Object)list0));
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list1.isEmpty());
      assertEquals(2, list1.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list1, (Comparable) int0, (Comparable) int0);
      assertNotSame(list1, list0);
      assertFalse(list1.equals((Object)list0));
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list1.isEmpty());
      assertEquals(2, list1.size());
  }

  @Test
  public void test04()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(1, int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) int0, (Comparable) int0);
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
  }

  @Test
  public void test05()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) boolean0, (Comparable) boolean0);
      assertNotSame(list1, list0);
      assertNotNull(list1);
      assertTrue(list1.equals((Object)list0));
      assertEquals(true, list1.isEmpty());
      assertEquals(0, list1.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test06()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      keyedObjects2D0.addObject((Object) number1, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) boolean0, (Comparable) boolean0);
      assertNull(list1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test07()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(int0, int0);
      assertNotSame(list1, list0);
      assertNotNull(list1);
      assertTrue(list1.equals((Object)list0));
      assertEquals(1, list1.size());
      assertEquals(false, list1.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test08()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test09()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      keyedObjects2D0.addObject((Object) number1, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number2 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number2);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(int0, int0);
      assertEquals(Double.NaN, (double)double1, 0.01D);
      assertTrue(double1.equals((Object)double0));
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      keyedObjects2D0.addObject((Object) number1, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      
      int int0 = 0;
      Number number2 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(int0, int0);
      assertNull(number2);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      keyedObjects2D0.addObject((Object) number1, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Number number2 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number2);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      double[][] doubleArray0 = new double[3][6];
      byte byte0 = (byte)0;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      
      List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((int) byte0, (int) byte0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = keyedObjects2D0.getRowCount();
      assertEquals(1, int1);
      assertFalse(int1 == int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier(int0, int1);
      assertNull(number0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      double[][] doubleArray0 = new double[3][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      
      List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(int0, int0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) int0, (Comparable) boolean0);
      assertNull(number0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue(int0, int0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test20()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = keyedObjects2D0.getRowCount();
      assertEquals(1, int1);
      assertFalse(int1 == int0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue(int0, int1);
      assertNull(number0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) int0, (Comparable) int0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test22()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ3Value(int0, int0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test23()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(1, int1);
      assertFalse(int1 == int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value(int0, int1);
      assertNull(number0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test24()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      double[][] doubleArray0 = new double[3][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      
      List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(6, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(6, list0.size());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) int0, (Comparable) int0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test25()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      int int0 = 0;
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value(int0, int0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test26()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      keyedObjects2D0.addObject((Object) number1, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = 0;
      Number number2 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value(int0, int0);
      assertNull(number2);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test27()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getValue((Comparable) int0, (Comparable) boolean0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test28()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) int0, (Comparable) boolean0);
      assertNull(number0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test29()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test30()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      Number number0 = null;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      assertNotNull(defaultPieDataset0);
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      List list0 = defaultPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultPieDataset0.getItemCount());
      
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      keyedObjects2D0.addObject((Object) number1, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Number number2 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) boolean0, (Comparable) boolean0);
      assertNull(number2);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test31()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeUpperBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ContainerEvent.COMPONENT_ADDED;
      assertEquals(300, int0);
      
      Object[][] objectArray0 = new Object[6][6];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      assertNotNull(defaultTableModel0);
      
      Vector vector0 = defaultTableModel0.getDataVector();
      assertNotNull(vector0);
      assertEquals(false, vector0.isEmpty());
      assertEquals(6, vector0.capacity());
      assertEquals(6, vector0.size());
      assertEquals("[[null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null]]", vector0.toString());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) int0, (Number) double0, (List) vector0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, vector0.isEmpty());
      assertEquals(6, vector0.capacity());
      assertEquals(6, vector0.size());
      assertEquals("[[null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null]]", vector0.toString());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, vector0.isEmpty());
      assertEquals(6, vector0.capacity());
      assertEquals(6, vector0.size());
      assertEquals("[[null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null], [null, null, null, null, null, null]]", vector0.toString());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMeanValue(int1, int1);
      assertEquals(Double.NaN, (double)double1, 0.01D);
      assertFalse(int1 == int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test32()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = keyedObjects2D0.getRowCount();
      assertEquals(1, int1);
      assertFalse(int1 == int0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue(int0, int1);
      assertNull(number0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test33()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = null;
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, number0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) boolean0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) boolean0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test34()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = (DefaultBoxAndWhiskerCategoryDataset)defaultBoxAndWhiskerCategoryDataset0.clone();
      assertNotSame(defaultBoxAndWhiskerCategoryDataset0, defaultBoxAndWhiskerCategoryDataset1);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertNotNull(defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(defaultBoxAndWhiskerCategoryDataset0.equals((Object)defaultBoxAndWhiskerCategoryDataset1));
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
  }

  @Test
  public void test35()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      assertNotNull(tableOrder0);
      assertEquals("TableOrder.BY_COLUMN", tableOrder0.toString());
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, tableOrder0, int0);
      assertNotNull(categoryToPieDataset0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals("TableOrder.BY_COLUMN", tableOrder0.toString());
      assertEquals(0, categoryToPieDataset0.getExtractIndex());
      
      Integer integer0 = (Integer)categoryToPieDataset0.getValue((Comparable) int0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals("TableOrder.BY_COLUMN", tableOrder0.toString());
      assertEquals(0, categoryToPieDataset0.getExtractIndex());
  }

  @Test
  public void test36()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test37()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      //  // Unstable assertion: assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      //  // Unstable assertion: assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      //  // Unstable assertion: assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Day day0 = new Day();
      //  // Unstable assertion: assertNotNull(day0);
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(1392335996463L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392422396462L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnIndex((Comparable) day0);
      //  // Unstable assertion: assertEquals((-1), int0);
      //  // Unstable assertion: assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      //  // Unstable assertion: assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(1392335996463L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392422396462L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
  }

  @Test
  public void test38()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      assertNotNull(tableOrder0);
      assertEquals("TableOrder.BY_COLUMN", tableOrder0.toString());
      
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, tableOrder0, int0);
      assertNotNull(categoryToPieDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals("TableOrder.BY_COLUMN", tableOrder0.toString());
      assertEquals(0, categoryToPieDataset0.getExtractIndex());
      
      List list0 = categoryToPieDataset0.getKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals("TableOrder.BY_COLUMN", tableOrder0.toString());
      assertEquals(0, categoryToPieDataset0.getExtractIndex());
  }

  @Test
  public void test39()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(boolean0);
      assertNotNull(range0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0.0, range0.getLowerBound(), 0.01D);
      assertEquals(0.0, range0.getUpperBound(), 0.01D);
      assertEquals(0.0, range0.getCentralValue(), 0.01D);
      assertEquals(0.0, range0.getLength(), 0.01D);
  }

  @Test
  public void test40()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      // Undeclared exception!
      try {
        Comparable comparable0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKey(int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
      }
  }

  @Test
  public void test41()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      // Undeclared exception!
      try {
        Comparable comparable0 = defaultBoxAndWhiskerCategoryDataset0.getRowKey(int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
      }
  }
}
