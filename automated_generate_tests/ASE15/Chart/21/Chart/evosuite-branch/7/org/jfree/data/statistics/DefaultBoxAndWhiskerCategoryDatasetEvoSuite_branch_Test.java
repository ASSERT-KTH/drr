/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:55:27 GMT 2014
 */

package org.jfree.data.statistics;

import static org.junit.Assert.*;
import org.junit.Test;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.util.List;
import java.util.Vector;
import javax.swing.JFormattedTextField;
import javax.swing.SwingConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.jfree.data.KeyedObjects2D;
import org.jfree.data.Range;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;


public class DefaultBoxAndWhiskerCategoryDatasetEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset1);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
      
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(boolean0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      assertNotSame(defaultBoxAndWhiskerCategoryDataset0, defaultBoxAndWhiskerCategoryDataset1);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(defaultBoxAndWhiskerCategoryDataset0.equals((Object)defaultBoxAndWhiskerCategoryDataset1));
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
  }

  @Test
  public void test01()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) int0);
      assertFalse(boolean0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test02()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = JFormattedTextField.REVERT;
      assertEquals(2, int0);
      
      Number number0 = null;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      assertNotNull(taskSeriesCollection0);
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      
      List list0 = taskSeriesCollection0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      
      Vector<Object> vector0 = new Vector<Object>();
      assertNotNull(vector0);
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) int0, (Number) int0, number0, (Number) int0, number0, (Number) int0, (Number) int0, number0, (List) vector0);
      assertNotNull(boxAndWhiskerItem1);
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
  }

  @Test
  public void test03()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = (-2048);
      Number number0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      assertNotNull(defaultStatisticalCategoryDataset0);
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      
      List list0 = defaultStatisticalCategoryDataset0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, number0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
  }

  @Test
  public void test04()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      double double0 = 0.0;
      List<String> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((double) int0, double0, (double) int0, (double) int0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list1 = keyedObjects2D0.getRowKeys();
      assertNotNull(list1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, list1.size());
      assertEquals(false, list1.isEmpty());
      
      String string0 = "";
      defaultBoxAndWhiskerCategoryDataset0.add((List) list1, (Comparable) int0, (Comparable) string0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, list1.size());
      assertEquals(false, list1.isEmpty());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test05()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) int0, (Comparable) int0);
      assertNull(list1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test06()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) int0, (Comparable) int0);
      assertNull(list0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test07()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(int1, int1);
      assertNull(list1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
  }

  @Test
  public void test08()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) int0, (Comparable) int0);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test09()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.setObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) int0, (Comparable) int0);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(int1, int1);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int1));
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(int1, int1);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) int0, (Comparable) int0);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.setObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) int0, (Comparable) int0);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinOutlier(int1, int1);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier(int1, int1);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      List<String> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Double double0 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) int0, (Comparable) int0);
      assertEquals(3.0, (double)double0, 0.01D);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(int1, int1);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int1));
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      byte[] byteArray0 = new byte[9];
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((int) byteArray0[6], (int) byteArray0[8]);
      assertNull(number0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) int0, (Comparable) int0);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test20()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      double double0 = (-389.0);
      double double1 = 3996.274623472937;
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double1, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) double1, (Comparable) double1);
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double1 == double0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) double1, (Comparable) double0);
      assertNull(number0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = JFormattedTextField.REVERT;
      assertEquals(2, int0);
      
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      assertNotNull(taskSeriesCollection0);
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      
      List list0 = taskSeriesCollection0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue(int1, int1);
      assertEquals(2, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
  }

  @Test
  public void test22()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) int0, (Comparable) int0);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test23()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      double double0 = (-389.0);
      double double1 = 3996.274623472937;
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double1, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) double1, (Comparable) double1);
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double1 == double0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) double1, (Comparable) double0);
      assertNull(number0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
  }

  @Test
  public void test24()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ3Value(int1, int1);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int1));
  }

  @Test
  public void test25()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.setObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value(int1, int1);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
  }

  @Test
  public void test26()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) int0, (Comparable) int0);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test27()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) int0, (Comparable) int0);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test28()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      double double0 = (-389.0);
      double double1 = 3996.274623472937;
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double1, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) double1, (Comparable) double1);
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double1 == double0);
      
      int int0 = 1;
      Double double2 = (Double)defaultBoxAndWhiskerCategoryDataset0.getQ1Value(int0, int0);
      assertEquals((-389.0), (double)double2, 0.01D);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(double2.equals((Object)double1));
      assertTrue(double2.equals((Object)double0));
  }

  @Test
  public void test29()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      byte[] byteArray0 = new byte[9];
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((int) byteArray0[1], int1);
      assertNull(number0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
  }

  @Test
  public void test30()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List<String> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (double) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List list1 = keyedObjects2D0.getRowKeys();
      assertNotNull(list1);
      assertEquals(1, list1.size());
      assertEquals(false, list1.isEmpty());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      String string0 = "";
      defaultBoxAndWhiskerCategoryDataset0.add((List) list1, (Comparable) int0, (Comparable) string0);
      assertEquals(1, list1.size());
      assertEquals(false, list1.isEmpty());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Double double0 = (Double)defaultBoxAndWhiskerCategoryDataset0.getValue((Comparable) int0, (Comparable) string0);
      assertEquals(3.0, (double)double0, 0.01D);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test31()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      Object object0 = null;
      keyedObjects2D0.addObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) int0, (Comparable) int0);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test32()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMedianValue(int1, int1);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
  }

  @Test
  public void test33()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      Object object0 = null;
      keyedObjects2D0.setObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getValue(int1, int1);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
  }

  @Test
  public void test34()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) int0, (Comparable) int0);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test35()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      
      Object object0 = null;
      keyedObjects2D0.setObject(object0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) int0, (Comparable) int0);
      assertNull(number0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test36()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = SwingConstants.EAST;
      assertEquals(3, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMeanValue(int1, int1);
      assertEquals(3, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int1));
  }

  @Test
  public void test37()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      KeyedObjects2D keyedObjects2D0 = defaultBoxAndWhiskerCategoryDataset0.data;
      assertNotNull(keyedObjects2D0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      List list0 = keyedObjects2D0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      
      String string0 = "";
      double double0 = 1098.1152737952;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, keyedObjects2D0.getRowCount());
      assertEquals(1, keyedObjects2D0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list0, (Comparable) double0, (Comparable) string0);
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, keyedObjects2D0.getColumnCount());
      assertEquals(2, keyedObjects2D0.getRowCount());
      
      int int2 = 1;
      assertFalse(int2 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue(int1, int2);
      assertNull(number0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
  }

  @Test
  public void test38()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ColorSpace.TYPE_YCbCr;
      assertEquals(3, int0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertNotNull(list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      
      int int1 = 1;
      assertFalse(int1 == int0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertFalse(int0 == int1);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertFalse(int0 == int1);
      
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-46);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((double) int1, (double) byte0, (double) int0, (double) byte0, (double) byte0, (double) byte0, (double) int1, (double) byteArray0[5], (List) list0);
      assertNotNull(boxAndWhiskerItem1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertFalse(int1 == int0);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      assertFalse(int0 == int1);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) byteArray0[8], (Comparable) int1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(2, list0.size());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertFalse(int1 == int0);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      assertFalse(int0 == int1);
  }

  @Test
  public void test39()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = JFormattedTextField.REVERT;
      assertEquals(2, int0);
      
      Number number0 = null;
      Vector<Object> vector0 = new Vector<Object>();
      assertNotNull(vector0);
      assertEquals(true, vector0.isEmpty());
      assertEquals(0, vector0.size());
      assertEquals(10, vector0.capacity());
      assertEquals("[]", vector0.toString());
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, number0, (Number) int0, number0, (Number) int0, (Number) int0, number0, (List) vector0);
      assertNotNull(boxAndWhiskerItem0);
      assertEquals(true, vector0.isEmpty());
      assertEquals(0, vector0.size());
      assertEquals(10, vector0.capacity());
      assertEquals("[]", vector0.toString());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(true, vector0.isEmpty());
      assertEquals(0, vector0.size());
      assertEquals(10, vector0.capacity());
      assertEquals("[]", vector0.toString());
  }

  @Test
  public void test40()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = (DefaultBoxAndWhiskerCategoryDataset)defaultBoxAndWhiskerCategoryDataset0.clone();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset1);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      assertNotSame(defaultBoxAndWhiskerCategoryDataset0, defaultBoxAndWhiskerCategoryDataset1);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(defaultBoxAndWhiskerCategoryDataset0.equals((Object)defaultBoxAndWhiskerCategoryDataset1));
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
  }

  @Test
  public void test41()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeUpperBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test42()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Week week0 = new Week();
      assertNotNull(week0);
      assertEquals(1392595199999L, week0.getLastMillisecond());
      assertEquals(106749L, week0.getSerialIndex());
      assertEquals(1391990400000L, week0.getFirstMillisecond());
      assertEquals(7, week0.getWeek());
      assertEquals(2014, week0.getYearValue());
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex((Comparable) week0);
      assertEquals((-1), int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1392595199999L, week0.getLastMillisecond());
      assertEquals(106749L, week0.getSerialIndex());
      assertEquals(1391990400000L, week0.getFirstMillisecond());
      assertEquals(7, week0.getWeek());
      assertEquals(2014, week0.getYearValue());
  }

  @Test
  public void test43()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test44()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ICC_Profile.icHdrSize;
      assertEquals(0, int0);
      
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getColumnIndex((Comparable) int0);
      assertEquals((-1), int1);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test45()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(boolean0);
      assertNotNull(range0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0.0, range0.getCentralValue(), 0.01D);
      assertEquals(0.0, range0.getLength(), 0.01D);
      assertEquals(0.0, range0.getUpperBound(), 0.01D);
      assertEquals(0.0, range0.getLowerBound(), 0.01D);
  }

  @Test
  public void test46()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = 1;
      // Undeclared exception!
      try {
        Comparable comparable0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKey(int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
      }
  }

  @Test
  public void test47()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = ICC_Profile.icHdrSize;
      assertEquals(0, int0);
      
      // Undeclared exception!
      try {
        Comparable comparable0 = defaultBoxAndWhiskerCategoryDataset0.getRowKey(int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
      }
  }
}
