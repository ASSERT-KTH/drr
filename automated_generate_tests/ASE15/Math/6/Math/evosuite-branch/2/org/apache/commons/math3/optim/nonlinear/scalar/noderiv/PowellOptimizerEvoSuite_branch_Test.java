/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 21:27:27 GMT 2014
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.exception.NotStrictlyPositiveException;
import org.apache.commons.math3.exception.NumberIsTooSmallException;
import org.apache.commons.math3.exception.TooManyEvaluationsException;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer;



import org.junit.runner.RunWith;


public class PowellOptimizerEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      double double0 = 3679.190480251;
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(double0, double0);
      assertNotNull(powellOptimizer0);
      assertEquals(0, powellOptimizer0.getIterations());
      assertEquals(2147483647, powellOptimizer0.getMaxIterations());
      assertEquals(0, powellOptimizer0.getEvaluations());
      assertNull(powellOptimizer0.getGoalType());
      assertEquals(0, powellOptimizer0.getMaxEvaluations());
      
      OptimizationData[] optimizationDataArray0 = new OptimizationData[10];
      int int0 = 0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(int0);
      assertNotNull(simpleBounds0);
      
      optimizationDataArray0[9] = (OptimizationData) simpleBounds0;
      assertNotNull(optimizationDataArray0[9]);
      
      // Undeclared exception!
      try {
        PointValuePair pointValuePair0 = powellOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // constraint
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      double double0 = 2593.5274528920268;
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(double0, double0);
      assertNotNull(powellOptimizer0);
      assertEquals(0, powellOptimizer0.getMaxEvaluations());
      assertEquals(0, powellOptimizer0.getEvaluations());
      assertEquals(2147483647, powellOptimizer0.getMaxIterations());
      assertNull(powellOptimizer0.getGoalType());
      assertEquals(0, powellOptimizer0.getIterations());
      
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      double[] doubleArray0 = new double[12];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      assertNotNull(initialGuess0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      assertNotNull(optimizationDataArray0[0]);
      
      try {
        PointValuePair pointValuePair0 = powellOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      double double0 = 2360.0741195173896;
      double double1 = (-5.0E-8);
      PowellOptimizer powellOptimizer0 = null;
      try {
        powellOptimizer0 = new PowellOptimizer(double0, double1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -0 is smaller than, or equal to, the minimum (0)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      double double0 = 0.0;
      PowellOptimizer powellOptimizer0 = null;
      try {
        powellOptimizer0 = new PowellOptimizer(double0, double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than the minimum (0)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      double double0 = 2252.8;
      PowellOptimizer powellOptimizer0 = new PowellOptimizer(double0, double0, double0, double0);
      assertNotNull(powellOptimizer0);
      assertNull(powellOptimizer0.getGoalType());
      assertEquals(0, powellOptimizer0.getMaxEvaluations());
      assertEquals(0, powellOptimizer0.getIterations());
      assertEquals(2147483647, powellOptimizer0.getMaxIterations());
      assertEquals(0, powellOptimizer0.getEvaluations());
  }
}
