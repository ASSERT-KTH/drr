/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:56:43 GMT 2014
 */

package org.apache.commons.math.ode.events;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.apache.commons.math.ode.sampling.NordsieckStepInterpolator;
import org.apache.commons.math.ode.sampling.StepInterpolator;



import org.junit.runner.RunWith;


public class EventStateEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = (-3790.70093998);
      int int0 = 23;
      EventState eventState0 = new EventState(eventHandler0, double0, double0, int0);
      assertNotNull(eventState0);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(false, eventState0.stop());
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      
      double[] doubleArray0 = new double[5];
      boolean boolean0 = eventState0.reset((double) int0, doubleArray0);
      assertFalse(boolean0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(false, eventState0.stop());
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
  }

  @Test
  public void test1()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = (-3790.70093998);
      int int0 = 23;
      EventState eventState0 = new EventState(eventHandler0, double0, double0, int0);
      assertNotNull(eventState0);
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals(false, eventState0.stop());
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      
      boolean boolean0 = eventState0.stop();
      assertFalse(boolean0);
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals(false, eventState0.stop());
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
  }

  @Test
  public void test2()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = 1406.95306419;
      int int0 = (-868);
      EventState eventState0 = new EventState(eventHandler0, double0, (double) int0, int0);
      assertNotNull(eventState0);
      assertEquals(false, eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(1406.95306419, eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(-868, eventState0.getMaxIterationCount());
      assertEquals(868.0, eventState0.getConvergence(), 0.01D);
      
      NordsieckStepInterpolator nordsieckStepInterpolator0 = new NordsieckStepInterpolator();
      assertNotNull(nordsieckStepInterpolator0);
      assertEquals(Double.NaN, nordsieckStepInterpolator0.getCurrentTime(), 0.01D);
      assertEquals(Double.NaN, nordsieckStepInterpolator0.getInterpolatedTime(), 0.01D);
      assertEquals(Double.NaN, nordsieckStepInterpolator0.getPreviousTime(), 0.01D);
      assertEquals(true, nordsieckStepInterpolator0.isForward());
      
      // Undeclared exception!
      try {
        boolean boolean0 = eventState0.evaluateStep((StepInterpolator) nordsieckStepInterpolator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = (-2091.52251);
      int int0 = 3075;
      EventState eventState0 = new EventState(eventHandler0, (double) int0, double0, int0);
      assertNotNull(eventState0);
      assertEquals(false, eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(3075, eventState0.getMaxIterationCount());
      assertEquals(2091.52251, eventState0.getConvergence(), 0.01D);
      assertEquals(3075.0, eventState0.getMaxCheckInterval(), 0.01D);
      
      double[] doubleArray0 = new double[4];
      boolean boolean0 = false;
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, boolean0);
      assertNotNull(dummyStepInterpolator0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(Double.NaN, dummyStepInterpolator0.getPreviousTime(), 0.01D);
      assertEquals(Double.NaN, dummyStepInterpolator0.getCurrentTime(), 0.01D);
      assertEquals(false, dummyStepInterpolator0.isForward());
      assertEquals(Double.NaN, dummyStepInterpolator0.getInterpolatedTime(), 0.01D);
      
      // Undeclared exception!
      try {
        boolean boolean1 = eventState0.evaluateStep((StepInterpolator) dummyStepInterpolator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = 10.652500065107166;
      int int0 = (-2029);
      EventState eventState0 = new EventState(eventHandler0, double0, double0, int0);
      assertNotNull(eventState0);
      assertEquals(10.652500065107166, eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(-2029, eventState0.getMaxIterationCount());
      assertEquals(10.652500065107166, eventState0.getConvergence(), 0.01D);
      assertEquals(false, eventState0.stop());
      
      double double1 = eventState0.getConvergence();
      assertTrue(double1 == double0);
      assertTrue(double0 == double1);
      assertEquals(10.652500065107166, double1, 0.01D);
      assertEquals(10.652500065107166, eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(-2029, eventState0.getMaxIterationCount());
      assertEquals(10.652500065107166, eventState0.getConvergence(), 0.01D);
      assertEquals(false, eventState0.stop());
  }

  @Test
  public void test5()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = Double.NaN;
      int int0 = 1371;
      EventState eventState0 = new EventState(eventHandler0, double0, double0, int0);
      //  // Unstable assertion: assertNotNull(eventState0);
      //  // Unstable assertion: assertEquals(false, eventState0.stop());
      //  // Unstable assertion: assertEquals(1371, eventState0.getMaxIterationCount());
      //  // Unstable assertion: assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      //  // Unstable assertion: assertEquals(Double.NaN, eventState0.getConvergence(), 0.01D);
      //  // Unstable assertion: assertEquals(Double.NaN, eventState0.getMaxCheckInterval(), 0.01D);
      
      double double1 = eventState0.getMaxCheckInterval();
      //  // Unstable assertion: assertTrue(double1 == double0);
      //  // Unstable assertion: assertTrue(double0 == double1);
      //  // Unstable assertion: assertEquals(Double.NaN, double1, 0.01D);
      //  // Unstable assertion: assertEquals(false, eventState0.stop());
      //  // Unstable assertion: assertEquals(1371, eventState0.getMaxIterationCount());
      //  // Unstable assertion: assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      //  // Unstable assertion: assertEquals(Double.NaN, eventState0.getConvergence(), 0.01D);
      //  // Unstable assertion: assertEquals(Double.NaN, eventState0.getMaxCheckInterval(), 0.01D);
  }

  @Test
  public void test6()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = (-2091.52251);
      int int0 = 3075;
      EventState eventState0 = new EventState(eventHandler0, (double) int0, double0, int0);
      assertNotNull(eventState0);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(3075.0, eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(3075, eventState0.getMaxIterationCount());
      assertEquals(2091.52251, eventState0.getConvergence(), 0.01D);
      assertEquals(false, eventState0.stop());
      
      int int1 = eventState0.getMaxIterationCount();
      assertTrue(int0 == int1);
      assertTrue(int1 == int0);
      assertEquals(3075, int1);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(3075.0, eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(3075, eventState0.getMaxIterationCount());
      assertEquals(2091.52251, eventState0.getConvergence(), 0.01D);
      assertEquals(false, eventState0.stop());
  }

  @Test
  public void test7()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = (-3790.70093998);
      int int0 = 23;
      EventState eventState0 = new EventState(eventHandler0, double0, double0, int0);
      assertNotNull(eventState0);
      assertEquals(false, eventState0.stop());
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      
      double double1 = eventState0.getEventTime();
      assertFalse(double1 == double0);
      assertFalse(double0 == double1);
      assertEquals(Double.NaN, double1, 0.01D);
      assertEquals(false, eventState0.stop());
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
  }

  @Test
  public void test8()  throws Throwable  {
      EventHandler eventHandler0 = null;
      double double0 = (-3790.70093998);
      int int0 = 23;
      EventState eventState0 = new EventState(eventHandler0, double0, double0, int0);
      assertNotNull(eventState0);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      assertEquals(false, eventState0.stop());
      
      EventHandler eventHandler1 = eventState0.getEventHandler();
      assertNull(eventHandler1);
      assertEquals(23, eventState0.getMaxIterationCount());
      assertEquals((-3790.70093998), eventState0.getMaxCheckInterval(), 0.01D);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01D);
      assertEquals(3790.70093998, eventState0.getConvergence(), 0.01D);
      assertEquals(false, eventState0.stop());
  }
}
