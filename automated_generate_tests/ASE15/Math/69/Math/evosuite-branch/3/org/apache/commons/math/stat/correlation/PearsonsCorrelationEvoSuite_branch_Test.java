/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:01:51 GMT 2014
 */

package org.apache.commons.math.stat.correlation;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import org.apache.commons.math.MathRuntimeException;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixImpl;
import org.apache.commons.math.stat.correlation.Covariance;
import org.apache.commons.math.stat.correlation.PearsonsCorrelation;



import org.junit.runner.RunWith;


public class PearsonsCorrelationEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
      assertNotNull(realMatrixImpl0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(8, realMatrixImpl0.getRowDimension());
      assertEquals(false, realMatrixImpl0.isSquare());
      assertEquals(1, realMatrixImpl0.getColumnDimension());
      
      PearsonsCorrelation pearsonsCorrelation0 = null;
      try {
        pearsonsCorrelation0 = new PearsonsCorrelation((RealMatrix) realMatrixImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data: only 8 rows and 1 columns.
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      double[][] doubleArray0 = new double[1][3];
      PearsonsCorrelation pearsonsCorrelation0 = null;
      try {
        pearsonsCorrelation0 = new PearsonsCorrelation(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // insufficient data: only 1 rows and 3 columns.
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      double[][] doubleArray0 = new double[3][5];
      double[] doubleArray1 = new double[2];
      PearsonsCorrelation pearsonsCorrelation0 = new PearsonsCorrelation(doubleArray0);
      assertNotNull(pearsonsCorrelation0);
      
      double[] doubleArray2 = new double[10];
      assertNotSame(doubleArray2, doubleArray1);
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      
      try {
        double double0 = pearsonsCorrelation0.correlation(doubleArray1, doubleArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid array dimensions. xArray has size 2; yArray has 10 elements
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      double[][] doubleArray0 = new double[9][10];
      PearsonsCorrelation pearsonsCorrelation0 = new PearsonsCorrelation(doubleArray0);
      assertNotNull(pearsonsCorrelation0);
      
      BlockRealMatrix blockRealMatrix0 = (BlockRealMatrix)pearsonsCorrelation0.getCorrelationPValues();
      assertNotNull(blockRealMatrix0);
      assertEquals(10, blockRealMatrix0.getColumnDimension());
      assertEquals(10, blockRealMatrix0.getRowDimension());
      assertEquals(true, blockRealMatrix0.isSquare());
      assertEquals(Double.NaN, blockRealMatrix0.getFrobeniusNorm(), 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      double[][] doubleArray0 = new double[2][10];
      PearsonsCorrelation pearsonsCorrelation0 = new PearsonsCorrelation(doubleArray0);
      assertNotNull(pearsonsCorrelation0);
      
      BlockRealMatrix blockRealMatrix0 = (BlockRealMatrix)pearsonsCorrelation0.getCorrelationStandardErrors();
      assertNotNull(blockRealMatrix0);
      assertEquals(10, blockRealMatrix0.getColumnDimension());
      assertEquals(Double.NaN, blockRealMatrix0.getFrobeniusNorm(), 0.01D);
      assertEquals(true, blockRealMatrix0.isSquare());
      assertEquals(10, blockRealMatrix0.getRowDimension());
  }

  @Test
  public void test5()  throws Throwable  {
      Covariance covariance0 = new Covariance();
      assertNotNull(covariance0);
      assertEquals(0, covariance0.getN());
      
      PearsonsCorrelation pearsonsCorrelation0 = null;
      try {
        pearsonsCorrelation0 = new PearsonsCorrelation(covariance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // covariance matrix is null
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      PearsonsCorrelation pearsonsCorrelation0 = new PearsonsCorrelation();
      assertNotNull(pearsonsCorrelation0);
      
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      assertNotNull(doubleArray0[0]);
      
      BlockRealMatrix blockRealMatrix0 = (BlockRealMatrix)pearsonsCorrelation0.computeCorrelationMatrix(doubleArray0);
      assertNotNull(blockRealMatrix0);
      assertEquals(1.0, blockRealMatrix0.getFrobeniusNorm(), 0.01D);
      assertEquals(1, blockRealMatrix0.getColumnDimension());
      assertEquals(1, blockRealMatrix0.getRowDimension());
      assertEquals(true, blockRealMatrix0.isSquare());
      
      int int0 = 17;
      PearsonsCorrelation pearsonsCorrelation1 = new PearsonsCorrelation((RealMatrix) blockRealMatrix0, int0);
      assertNotNull(pearsonsCorrelation1);
      assertNotSame(pearsonsCorrelation1, pearsonsCorrelation0);
      assertNotSame(pearsonsCorrelation0, pearsonsCorrelation1);
      assertFalse(pearsonsCorrelation1.equals((Object)pearsonsCorrelation0));
      assertFalse(pearsonsCorrelation0.equals((Object)pearsonsCorrelation1));
      assertEquals(1.0, blockRealMatrix0.getFrobeniusNorm(), 0.01D);
      assertEquals(1, blockRealMatrix0.getColumnDimension());
      assertEquals(1, blockRealMatrix0.getRowDimension());
      assertEquals(true, blockRealMatrix0.isSquare());
  }

  @Test
  public void test7()  throws Throwable  {
      PearsonsCorrelation pearsonsCorrelation0 = new PearsonsCorrelation();
      assertNotNull(pearsonsCorrelation0);
      
      double[][] doubleArray0 = new double[1][5];
      // Undeclared exception!
      try {
        RealMatrix realMatrix0 = pearsonsCorrelation0.computeCorrelationMatrix(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid array dimensions. xArray has size 1; yArray has 1 elements
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      double[][] doubleArray0 = new double[5][6];
      boolean boolean0 = false;
      Covariance covariance0 = new Covariance(doubleArray0, boolean0);
      assertNotNull(covariance0);
      assertEquals(5, covariance0.getN());
      
      PearsonsCorrelation pearsonsCorrelation0 = new PearsonsCorrelation(covariance0);
      assertNotNull(pearsonsCorrelation0);
      assertEquals(5, covariance0.getN());
      
      BlockRealMatrix blockRealMatrix0 = (BlockRealMatrix)pearsonsCorrelation0.getCorrelationMatrix();
      assertNotNull(blockRealMatrix0);
      assertEquals(5, covariance0.getN());
      assertEquals(6, blockRealMatrix0.getRowDimension());
      assertEquals(Double.NaN, blockRealMatrix0.getFrobeniusNorm(), 0.01D);
      assertEquals(6, blockRealMatrix0.getColumnDimension());
      assertEquals(true, blockRealMatrix0.isSquare());
  }
}
