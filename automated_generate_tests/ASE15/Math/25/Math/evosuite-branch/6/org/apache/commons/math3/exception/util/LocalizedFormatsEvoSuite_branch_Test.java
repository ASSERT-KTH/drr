/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 18:32:56 GMT 2014
 */

package org.apache.commons.math3.exception.util;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Locale;
import org.apache.commons.math3.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;


public class LocalizedFormatsEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR;
      assertEquals(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR, localizedFormats0);
      assertEquals(16, localizedFormats0.ordinal());
      assertEquals("cannot format a {0} instance as a 3D vector", localizedFormats0.getSourceString());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.toString());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.name());
      
      Locale locale0 = Locale.FRENCH;
      assertEquals("fr", locale0.toString());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getCountry());
      assertNotNull(locale0);
      
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertEquals("impossible de formater une instance de {0} comme un vecteur de dimension 3", string0);
      assertEquals(16, localizedFormats0.ordinal());
      assertEquals("cannot format a {0} instance as a 3D vector", localizedFormats0.getSourceString());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.toString());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.name());
      assertEquals("fr", locale0.toString());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getCountry());
      assertNotNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR;
      assertEquals(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR, localizedFormats0);
      assertEquals("cannot format a {0} instance as a 3D vector", localizedFormats0.getSourceString());
      assertEquals(16, localizedFormats0.ordinal());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.toString());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.name());
      
      String string0 = localizedFormats0.getSourceString();
      assertEquals("cannot format a {0} instance as a 3D vector", string0);
      assertEquals("cannot format a {0} instance as a 3D vector", localizedFormats0.getSourceString());
      assertEquals(16, localizedFormats0.ordinal());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.toString());
      assertEquals("CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR", localizedFormats0.name());
      assertNotNull(string0);
  }
}
