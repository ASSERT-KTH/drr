/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:32:11 GMT 2014
 */

package org.apache.commons.lang.time;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.TimeZone;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class DurationFormatUtilsEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.S;
      assertEquals("S", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      int int0 = (-2613);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, int0);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1, int0);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token1));
      assertNotNull(durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token2);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token1));
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 2147483599;
      Integer integer0 = new Integer(int0);
      assertEquals(2147483599, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test02()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test
  public void test03()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      assertEquals("d", string0);
      assertNotNull(string0);
      
      int int0 = 29;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string0, int0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
  }

  @Test
  public void test04()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      int int0 = (-20);
      String string0 = (String)DurationFormatUtils.M;
      assertEquals("M", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      Integer integer0 = new Integer(int0);
      assertEquals((-20), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(integer0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      boolean boolean0 = durationFormatUtils_TokenArray0[1].equals((Object) durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
  }

  @Test
  public void test05()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) stringBuffer0);
      assertFalse(boolean0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test
  public void test06()  throws Throwable  {
      long long0 = 0L;
      String string0 = DurationFormatUtils.formatDurationISO(long0);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      assertNotNull(string0);
      
      boolean boolean0 = false;
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      assertEquals("GMT", zoneInfo0.getID());
      assertNotNull(zoneInfo0);
      
      String string1 = DurationFormatUtils.formatPeriod(long0, long0, string0, boolean0, (TimeZone) zoneInfo0);
      assertEquals("P0Y000DT00000.0000", string1);
      assertEquals("GMT", zoneInfo0.getID());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test
  public void test07()  throws Throwable  {
      long long0 = 0L;
      String string0 = DurationFormatUtils.formatDurationISO(long0);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      assertEquals("GMT", zoneInfo0.getID());
      assertNotNull(zoneInfo0);
      
      String string1 = DurationFormatUtils.formatPeriod(long0, long0, string0, boolean0, (TimeZone) zoneInfo0);
      assertEquals("P0Y000DT00000.0000", string1);
      assertEquals("GMT", zoneInfo0.getID());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertNotNull(string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
  }

  @Test
  public void test08()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      int int0 = (-20);
      String string0 = (String)DurationFormatUtils.M;
      assertEquals("M", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      Integer integer0 = new Integer(int0);
      assertEquals((-20), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(integer0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      boolean boolean0 = true;
      String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, (int) integer0, int0, (int) integer0, int0, int0, int0, boolean0);
      assertEquals("-20", string1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(string1, string0);
  }

  @Test
  public void test09()  throws Throwable  {
      long long0 = (-1502L);
      long long1 = 2419199911L;
      String string0 = "M";
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0);
      assertEquals("0", string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(long1 == long0);
      assertNotNull(string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
  }

  @Test
  public void test10()  throws Throwable  {
      long long0 = (-15L);
      long long1 = 2419200045L;
      String string0 = "\"w{Y%";
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0);
      assertEquals("\"w{Y%", string1);
      assertTrue(string0.equals((Object)string1));
      assertFalse(long1 == long0);
      assertTrue(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertNotNull(string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 36;
      long long0 = 2419200100L;
      String string0 = DurationFormatUtils.formatPeriodISO((long) int0, long0);
      assertEquals("P0Y0M28DT0H0M0.064S", string0);
      assertNotNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      long long0 = 415L;
      boolean boolean0 = false;
      boolean boolean1 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean1);
      assertEquals("0 days", string0);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      long long0 = 60000L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 minute", string0);
      assertNotNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = 3600009L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 hour", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 2147483599;
      Integer integer0 = new Integer(int0);
      assertEquals(2147483599, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, integer0);
      assertTrue(boolean0);
      assertTrue(integer0.equals((Object)int0));
      
      String string0 = DurationFormatUtils.formatDurationWords((long) integer0, boolean0, boolean0);
      assertEquals("24 days 20 hours 31 minutes 23 seconds", string0);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      long long0 = 415L;
      boolean boolean0 = false;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("0 days 0 hours 0 minutes 0 seconds", string0);
      assertNotNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      assertEquals("d", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      String string1 = durationFormatUtils_Token0.toString();
      assertEquals("d", string1);
      assertNotNull(string1);
      assertSame(string1, string0);
      assertSame(string0, string1);
  }

  @Test
  public void test18()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      assertNotNull(durationFormatUtils0);
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = 2147483599;
      Integer integer0 = new Integer(int0);
      assertEquals(2147483599, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      String string0 = DurationFormatUtils.formatDurationHMS((long) integer0);
      assertEquals("596:31:23.599", string0);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      int int0 = 2147483599;
      String string0 = "Q7,y;D8y0^}%pcG";
      String string1 = DurationFormatUtils.formatPeriod((long) int0, (long) int0, string0);
      assertEquals("Q7,00;D80^}%pcG", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }
}
