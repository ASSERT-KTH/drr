/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 18:23:45 GMT 2014
 */

package org.apache.commons.lang.time;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.util.TimeZone;
import org.apache.commons.lang.time.DurationFormatUtils;



import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class DurationFormatUtilsEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.H;
      assertEquals("H", string0);
      assertNotNull(string0);
      
      int int0 = 1878;
      String string1 = DurationFormatUtils.formatDurationHMS((long) int0);
      assertEquals("0:00:01.878", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string0, string1);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string1, int0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string1, string0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 4;
      Integer integer0 = new Integer(int0);
      assertEquals(4, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0, (int) integer0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.H;
      assertEquals("H", string0);
      assertNotNull(string0);
      
      int int0 = 1878;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.S;
      assertEquals("S", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token1);
      assertTrue(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      
      durationFormatUtils_Token0.increment();
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
  }

  @Test
  public void test04()  throws Throwable  {
      int int0 = (-22);
      Integer integer0 = new Integer(int0);
      assertEquals((-22), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0, (int) integer0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, (int) integer0);
      assertNotNull(durationFormatUtils_Token1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
  }

  @Test
  public void test05()  throws Throwable  {
      String string0 = "9";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertEquals("9", stringBuffer0.toString());
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
      assertNotNull(durationFormatUtils_Token0);
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertEquals("9", stringBuffer0.toString());
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertEquals("9", stringBuffer0.toString());
  }

  @Test
  public void test06()  throws Throwable  {
      int int0 = (-22);
      Integer integer0 = new Integer(int0);
      assertEquals((-22), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0, (int) integer0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      String string0 = DurationFormatUtils.formatDurationISO((long) int0);
      assertEquals("P0Y0M0DT0H0M0.78S", string0);
      assertNotNull(string0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) string0);
      assertFalse(boolean0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = (-22);
      Integer integer0 = new Integer(int0);
      assertEquals((-22), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      String string0 = (String)DurationFormatUtils.S;
      assertEquals("S", string0);
      assertNotNull(string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, (int) integer0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      boolean boolean0 = false;
      String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, int0, int0, int0, (int) integer0, (int) integer0, (int) integer0, boolean0);
      assertEquals("-22", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(integer0.equals((Object)int0));
      assertNotSame(string1, string0);
  }

  @Test
  public void test08()  throws Throwable  {
      String string0 = "d' days 'H' hurs 'm' minutes 's' seconds'";
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      int int0 = (-3782);
      boolean boolean0 = true;
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      // Undeclared exception!
      try {
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, int0, int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test09()  throws Throwable  {
      long long0 = 810L;
      String string0 = "9k4";
      String string1 = DurationFormatUtils.formatDuration(long0, string0);
      assertEquals("9k4", string1);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      
      boolean boolean0 = true;
      long long1 = 2419200046L;
      long long2 = (-139L);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getTimeZone(string0);
      assertNotNull(zoneInfo0);
      assertEquals("GMT", zoneInfo0.getID());
      assertTrue(string0.equals((Object)string1));
      assertNotSame(string0, string1);
      
      String string2 = DurationFormatUtils.formatPeriod(long2, long1, string1, boolean0, (TimeZone) zoneInfo0);
      assertEquals("9k4", string2);
      assertNotNull(string2);
      assertEquals("GMT", zoneInfo0.getID());
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      assertTrue(string1.equals((Object)string2));
      assertTrue(string1.equals((Object)string0));
      assertFalse(long1 == long0);
      assertFalse(long1 == long2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string0.equals((Object)string2));
      assertTrue(string0.equals((Object)string1));
      assertFalse(long0 == long1);
      assertFalse(long0 == long2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
  }

  @Test
  public void test10()  throws Throwable  {
      long long0 = 2419200043L;
      long long1 = (-3488L);
      String string0 = DurationFormatUtils.formatPeriodISO(long1, long0);
      assertEquals("P0Y0M28DT0H0M3.531S", string0);
      assertNotNull(string0);
      assertFalse(long1 == long0);
      assertFalse(long0 == long1);
  }

  @Test
  public void test11()  throws Throwable  {
      long long0 = (-19L);
      String string0 = "A8X%A&8?[Z<Pun8+s";
      String string1 = DurationFormatUtils.formatPeriodISO(long0, long0);
      assertEquals("P0Y0M0DT0H0M0.000S", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      
      boolean boolean0 = true;
      long long1 = 2419199986L;
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getTimeZone(string0);
      assertNotNull(zoneInfo0);
      assertEquals("GMT", zoneInfo0.getID());
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string0, string1);
      
      String string2 = DurationFormatUtils.formatPeriod(long0, long1, string1, boolean0, (TimeZone) zoneInfo0);
      assertEquals("P0Y000DT0672000.0005", string2);
      assertNotNull(string2);
      assertEquals("GMT", zoneInfo0.getID());
      assertFalse(long0 == long1);
      assertFalse(long1 == long0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
  }

  @Test
  public void test12()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = 60079L;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 minute", string0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = 3600000L;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 hour", string0);
      assertNotNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = 2419200017L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("28 days", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      long long0 = 2419200043L;
      boolean boolean0 = false;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("28 days 0 hours 0 minutes 0 seconds", string0);
      assertNotNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      long long0 = (-19L);
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("0 seconds", string0);
      assertNotNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.H;
      assertEquals("H", string0);
      assertNotNull(string0);
      
      int int0 = 1878;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      String string1 = durationFormatUtils_Token0.toString();
  }

  @Test
  public void test18()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      assertNotNull(durationFormatUtils0);
  }

  @Test
  public void test19()  throws Throwable  {
      long long0 = 0L;
      String string0 = "u{6SR[y]|G0dPTP";
      String string1 = DurationFormatUtils.formatPeriod(long0, long0, string0);
      assertEquals("u{60R[0]|G00PTP", string1);
      assertNotNull(string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }
}
