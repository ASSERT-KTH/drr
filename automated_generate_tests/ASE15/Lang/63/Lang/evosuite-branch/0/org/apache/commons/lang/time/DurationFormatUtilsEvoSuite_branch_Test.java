/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:21:52 GMT 2014
 */

package org.apache.commons.lang.time;

import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;


public class DurationFormatUtilsEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      long long0 = 40L;
      String string0 = " 1 day";
      boolean boolean0 = true;
      String string1 = DurationFormatUtils.formatDuration(long0, string0, boolean0);
      assertNotNull(string1);
      assertEquals(" 1 0a0", string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string1);
      assertNotNull(durationFormatUtils_Token0);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string0, string1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string0.equals((Object)string1));
      
      boolean boolean1 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertFalse(boolean1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string1, string0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string0, string1);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean0 == boolean1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string0.equals((Object)string1));
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 78;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(int0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = "EHf F`";
      int int0 = 1650;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      int int1 = 13;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string0, int1);
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(int1 == int0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertFalse(boolean0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
  }

  @Test
  public void test03()  throws Throwable  {
      int int0 = 78;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(int0);
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, int0);
      assertNotNull(durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertFalse(boolean0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
  }

  @Test
  public void test04()  throws Throwable  {
      String string0 = "Strings must not heull";
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx(string0);
      assertNotNull(durationFormatUtils_TokenArray0);
      
      int int0 = (-4);
      Integer integer0 = new Integer(int0);
      assertEquals((-4), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0, (int) integer0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) string0);
      assertFalse(boolean0);
      assertTrue(integer0.equals((Object)int0));
      
      String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, (int) integer0, int0, (int) integer0, (int) integer0, (int) integer0, int0, int0, boolean0);
      assertNotNull(string1);
      assertEquals("-4tring-4 -4u-4t not heull", string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string0.equals((Object)string1));
  }

  @Test
  public void test05()  throws Throwable  {
      long long0 = 651L;
      String string0 = DurationFormatUtils.formatPeriodISO(long0, long0);
      assertNotNull(string0);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      int int0 = (-600);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      boolean boolean0 = true;
      String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, int0, int0, int0, int0, int0, int0, boolean0);
      assertNotNull(string1);
      assertEquals("", string1);
      assertNotSame(string1, string0);
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test06()  throws Throwable  {
      long long0 = (-1344L);
      String string0 = DurationFormatUtils.formatDurationISO(long0);
      assertNotNull(string0);
      assertEquals("P0Y0M0DT0H0M-1.56S", string0);
      
      long long1 = 2419199953L;
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0);
      assertNotNull(string1);
      assertEquals("P0Y000DT067200-1.561297", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long1 == long0);
  }

  @Test
  public void test07()  throws Throwable  {
      long long0 = (-1L);
      long long1 = 2419200049L;
      String string0 = "";
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0);
      assertNotNull(string1);
      assertEquals("", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(long0 == long1);
      assertTrue(string0.equals((Object)string1));
      assertTrue(string1.equals((Object)string0));
      assertFalse(long1 == long0);
  }

  @Test
  public void test08()  throws Throwable  {
      long long0 = 2419199901L;
      long long1 = (-1122L);
      String string0 = DurationFormatUtils.formatPeriodISO(long1, long0);
      assertNotNull(string0);
      assertEquals("P0Y0M28DT0H0M1.023S", string0);
      assertFalse(long1 == long0);
      assertFalse(long0 == long1);
  }

  @Test
  public void test09()  throws Throwable  {
      long long0 = 60037L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotNull(string0);
      assertEquals("1 minute", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.m;
      assertNotNull(string0);
      assertEquals("m", string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      
      long long0 = 3600043L;
      String string1 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotNull(string1);
      assertEquals("1 hour", string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
  }

  @Test
  public void test11()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      int int0 = (-1506);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertTrue(boolean0);
      
      long long0 = 2419200016L;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(string0);
      assertEquals("28 days", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      long long0 = 651L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotNull(string0);
      assertEquals("0 seconds", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = false;
      int int0 = (-4);
      Integer integer0 = new Integer(int0);
      assertEquals((-4), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      String string0 = DurationFormatUtils.formatDurationWords((long) integer0, boolean0, boolean0);
      assertNotNull(string0);
      assertEquals("0 days 0 hours 0 minutes 0 seconds", string0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = 651L;
      String string0 = DurationFormatUtils.formatPeriodISO(long0, long0);
      assertNotNull(string0);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      String string1 = durationFormatUtils_Token0.toString();
      assertNotNull(string1);
      assertEquals("P0Y0M0DT0H0M0.000S", string1);
      assertSame(string1, string0);
      assertSame(string0, string1);
  }

  @Test
  public void test15()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      assertNotNull(durationFormatUtils0);
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 1650;
      String string0 = DurationFormatUtils.formatDurationHMS((long) int0);
      assertNotNull(string0);
      assertEquals("0:00:01.650", string0);
  }
}
