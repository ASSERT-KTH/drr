/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 18:44:20 GMT 2014
 */

package org.apache.commons.lang.time;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.TimeZone;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;


public class DurationFormatUtilsEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      String string0 = "^3";
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 1350;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(int0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = "zM_1";
      int int0 = (-1941);
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(4, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals("zM_1", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals(4, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals("zM_1", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertEquals(4, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals("zM_1", stringBuffer0.toString());
      assertTrue(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      String string0 = "G";
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[4];
      int int0 = 978;
      int int1 = 163;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int1);
      assertFalse(int1 == int0);
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[2]);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string0, int0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(int0 == int1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotNull(durationFormatUtils_Token1);
      
      boolean boolean0 = durationFormatUtils_TokenArray0[2].equals((Object) durationFormatUtils_Token1);
      assertFalse(boolean0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(int0 == int1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
  }

  @Test
  public void test04()  throws Throwable  {
      String string0 = "^3";
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotNull(durationFormatUtils_Token1);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertFalse(boolean0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
  }

  @Test
  public void test05()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      assertNotNull(durationFormatUtils0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils0);
      assertFalse(boolean0);
  }

  @Test
  public void test06()  throws Throwable  {
      boolean boolean0 = true;
      String string0 = "4ItUHr9C} kcr";
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[8];
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals(30, stringBuffer0.capacity());
      assertEquals(14, stringBuffer0.length());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      int int0 = 343;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals(30, stringBuffer0.capacity());
      assertEquals(14, stringBuffer0.length());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals(14, stringBuffer0.length());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      Integer integer0 = new Integer(int0);
      assertEquals(343, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals(14, stringBuffer0.length());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals(14, stringBuffer0.length());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_TokenArray0[2]);
      
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_TokenArray0[1];
      assertNotNull(durationFormatUtils_TokenArray0[3]);
      
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_TokenArray0[0];
      assertNotNull(durationFormatUtils_TokenArray0[4]);
      
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_TokenArray0[0];
      assertNotNull(durationFormatUtils_TokenArray0[5]);
      
      String string1 = (String)DurationFormatUtils.S;
      assertEquals("S", string1);
      assertNotSame(string1, string0);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string1);
      assertNotSame(string1, string0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertNotNull(durationFormatUtils_Token1);
      
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token1;
      assertNotNull(durationFormatUtils_TokenArray0[6]);
      
      // Undeclared exception!
      try {
        String string2 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, (int) integer0, (int) integer0, int0, (int) integer0, (int) integer0, int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = 87;
      String string0 = "AUcS";
      boolean boolean0 = false;
      String string1 = DurationFormatUtils.formatDuration((long) int0, string0, boolean0);
      assertEquals("AUc87", string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertNotNull(string1);
  }

  @Test
  public void test08()  throws Throwable  {
      boolean boolean0 = true;
      String string0 = "4ItUHr9C} kcr";
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[8];
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      int int0 = 343;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      Integer integer0 = new Integer(int0);
      assertEquals(343, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotNull(durationFormatUtils_TokenArray0[2]);
      
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_TokenArray0[1];
      assertNotNull(durationFormatUtils_TokenArray0[3]);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, int0);
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotNull(durationFormatUtils_Token1);
      
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token1;
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("4ItUHr9C} kcr", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertNotNull(durationFormatUtils_TokenArray0[4]);
      
      // Undeclared exception!
      try {
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, (int) integer0, (int) integer0, int0, (int) integer0, (int) integer0, int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test09()  throws Throwable  {
      long long0 = (-1098L);
      long long1 = 2419199996L;
      String string0 = "*|C_!Um6";
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0);
      assertEquals("*|C_!U-4449606", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(long0 == long1);
      assertFalse(long1 == long0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1231);
      long long0 = 2419200001L;
      String string0 = "'P'yyyy'>'v'M'd'DT'H'H'm'M's.S'SX";
      String string1 = DurationFormatUtils.formatPeriod((long) int0, long0, string0);
      assertEquals("P0000>vM-308DT0H0M1.232SX", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = "zM_1";
      long long0 = (-1648L);
      long long1 = 2419200001L;
      boolean boolean0 = true;
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getTimeZone(string0);
      assertEquals("GMT", zoneInfo0.getID());
      assertNotNull(zoneInfo0);
      
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0, boolean0, (TimeZone) zoneInfo0);
      assertEquals("GMT", zoneInfo0.getID());
      assertEquals("z0_1", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(long1 == long0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertNotNull(string1);
  }

  @Test
  public void test12()  throws Throwable  {
      long long0 = 71L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("0 seconds", string0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = 60052L;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 minute", string0);
      assertNotNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = 86400000L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 day", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      long long0 = 3600120L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 hour", string0);
      assertNotNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      assertEquals("d", string0);
      assertNotNull(string0);
      
      int int0 = 87;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      String string1 = "AUcS";
      assertNotSame(string1, string0);
      assertFalse(string1.equals((Object)string0));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string1, int0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string1, string0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(durationFormatUtils_Token1);
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      
      String string2 = DurationFormatUtils.formatDurationWords((long) int0, boolean0, boolean0);
      assertEquals("0 days 0 hours 0 minutes 0 seconds", string2);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertNotNull(string2);
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      assertEquals("d", string0);
      assertNotNull(string0);
      
      int int0 = 87;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      String string1 = durationFormatUtils_Token0.toString();
      assertEquals("ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
  }

  @Test
  public void test18()  throws Throwable  {
      long long0 = (-1098L);
      String string0 = DurationFormatUtils.formatDurationHMS(long0);
      assertEquals("0:00:-1.02", string0);
      assertNotNull(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      long long0 = (-1648L);
      String string0 = DurationFormatUtils.formatDurationISO(long0);
      assertEquals("P0Y0M0DT0H0M-1.52S", string0);
      assertNotNull(string0);
  }

  @Test
  public void test20()  throws Throwable  {
      String string0 = "^3";
      int int0 = (-1231);
      String string1 = DurationFormatUtils.formatPeriod((long) int0, (long) int0, string0);
      assertEquals("^3", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertTrue(string0.equals((Object)string1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
  }

  @Test
  public void test21()  throws Throwable  {
      long long0 = 3600120L;
      String string0 = DurationFormatUtils.formatPeriodISO(long0, long0);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      assertNotNull(string0);
  }
}
