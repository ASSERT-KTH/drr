/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 18:13:34 GMT 2014
 */

package org.apache.commons.lang.enums;

import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.lang.enums.Enum;
import org.apache.commons.lang.enums.ValuedEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.junit.runner.RunWith;


public class ValuedEnumEvoSuite_branch_Test  {

  @Test
  public void test0()  throws Throwable  {
      int int0 = 8;
      Class<Object> class0 = null;
      // Undeclared exception!
      try {
        Enum enum0 = ValuedEnum.getEnum(class0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Enum Class must not be null
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Class<String> class0 = String.class;
      int int0 = 2;
      // Undeclared exception!
      try {
        Enum enum0 = ValuedEnum.getEnum(class0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Class must be a subclass of Enum
         //
      }
  }
}
