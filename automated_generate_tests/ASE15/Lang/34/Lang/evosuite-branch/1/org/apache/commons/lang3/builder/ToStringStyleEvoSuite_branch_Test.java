/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 15:47:57 GMT 2014
 */

package org.apache.commons.lang3.builder;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;



import org.junit.runner.RunWith;


public class ToStringStyleEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setSummaryObjectEndText(string0);
  }

  @Test
  public void test01()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("<null>", string0);
      assertNotNull(string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setSummaryObjectEndText(string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test02()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      String string0 = null;
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test03()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string0 = "java.compiler";
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("java.compiler", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test04()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = null;
      standardToStringStyle0.setSizeEndText(string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test05()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertEquals("<size=", string0);
      assertNotNull(string0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      standardToStringStyle0.setSizeEndText(string0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test06()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = null;
      standardToStringStyle0.setSizeStartText(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test07()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals("<", string0);
      assertNotNull(string0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      
      standardToStringStyle0.setSizeStartText(string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test08()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      String string0 = null;
      standardToStringStyle0.setNullText(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test09()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = "";
      standardToStringStyle0.setNullText(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test10()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string0 = null;
      standardToStringStyle0.setFieldSeparator(string0);
      assertEquals("", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test11()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      String string0 = null;
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test12()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = "";
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test
  public void test13()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      
      String string0 = null;
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test14()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals(">", string0);
      assertNotNull(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setContentEnd(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test15()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setContentStart(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = "";
      standardToStringStyle0.setContentStart(string0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test17()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      String string0 = null;
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test18()  throws Throwable  {
      String string0 = "Caught a SecurityException reading the system property '";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("Caught a SecurityException reading the system property '", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test19()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      
      String string0 = null;
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test
  public void test20()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      String string0 = "";
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
  }

  @Test
  public void test21()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setArrayStart(string0);
  }

  @Test
  public void test22()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = "";
      standardToStringStyle0.setArrayStart(string0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test23()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = "java.vendor.url";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals("java.vendor.url", stringBuffer0.toString());
      assertEquals(15, stringBuffer0.length());
      assertEquals(31, stringBuffer0.capacity());
      
      char char0 = '$';
      String string1 = null;
      Double double0 = new Double((double) char0);
      assertEquals(36.0, (double)double0, 0.01D);
      
      standardToStringStyle0.append(stringBuffer0, string1, (double) double0);
      assertEquals(20, stringBuffer0.length());
      assertEquals(31, stringBuffer0.capacity());
      assertEquals("java.vendor.url36.0,", stringBuffer0.toString());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test24()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertEquals("<size=", string0);
      assertNotNull(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(22, stringBuffer0.capacity());
      assertEquals("<size=", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
      
      Integer integer0 = null;
      standardToStringStyle0.appendIdentityHashCode(stringBuffer0, integer0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(22, stringBuffer0.capacity());
      assertEquals("<size=", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
  }

  @Test
  public void test25()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = null;
      StringBuffer stringBuffer0 = null;
      standardToStringStyle0.appendClassName(stringBuffer0, string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test26()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      
      String string0 = "<";
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[1] = boolean0;
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) booleanArray0[1]);
      assertTrue(Arrays.equals(new boolean[] {false, true, false, false, false, false, false, false, false}, booleanArray0));
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(57, stringBuffer0.length());
      assertEquals("<={false,true,false,false,false,false,false,false,false},", stringBuffer0.toString());
      assertEquals(70, stringBuffer0.capacity());
  }

  @Test
  public void test27()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals("{", string0);
      assertNotNull(string0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      boolean boolean0 = standardToStringStyle0.isUseIdentityHashCode();
      assertTrue(boolean0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      
      double[] doubleArray0 = new double[3];
      standardToStringStyle0.append(stringBuffer0, string0, doubleArray0, (Boolean) boolean0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals("{={0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test28()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "Caught a SecurityException reading the system property '";
      String string1 = toStringStyle0.getSizeEndText();
      //  // Unstable assertion: assertEquals("org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle", string1);
      //  // Unstable assertion: assertNotNull(string1);
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string1, string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertFalse(string0.equals((Object)string1));
      //  // Unstable assertion: assertNotSame(string0, string1);
      //  // Unstable assertion: assertEquals("Caught a SecurityException reading the system property '", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(72, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(56, stringBuffer0.length());
      
      char[] charArray0 = new char[3];
      Boolean boolean0 = Boolean.TRUE;
      //  // Unstable assertion: assertTrue(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string1, charArray0, boolean0);
      //  // Unstable assertion: assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
      //  // Unstable assertion: assertFalse(string0.equals((Object)string1));
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string0, string1);
      //  // Unstable assertion: assertNotSame(string1, string0);
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(146, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(136, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("Caught a SecurityException reading the system property 'org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle={\u0000,\u0000,\u0000},", stringBuffer0.toString());
  }

  @Test
  public void test29()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      
      String string0 = "s";
      boolean boolean0 = true;
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      byte[] byteArray0 = new byte[5];
      toStringStyle0.append(stringBuffer0, string0, byteArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      //  // Unstable assertion: assertEquals(84, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("org.apache.commons.lang3.ClassUtils04.104.104.104.10Q]Tw\"~suUY6,l8N((java.vendor.url", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(146, stringBuffer0.capacity());
  }

  @Test
  public void test30()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = standardToStringStyle0.getArrayEnd();
      assertEquals("}", string0);
      assertNotNull(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      
      short[] shortArray0 = new short[10];
      standardToStringStyle0.append(stringBuffer0, string0, shortArray0, (Boolean) boolean0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(34, stringBuffer0.capacity());
      assertEquals(24, stringBuffer0.length());
      assertEquals("}={0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
  }

  @Test
  public void test31()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      String string0 = "u/bj`BXul5Mr|e,vVUt";
      char char0 = ':';
      StringBuffer stringBuffer0 = new StringBuffer((int) char0);
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(58, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      
      int[] intArray0 = new int[2];
      standardToStringStyle0.append(stringBuffer0, string0, intArray0, (Boolean) boolean0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(58, stringBuffer0.capacity());
      assertEquals(26, stringBuffer0.length());
      assertEquals("u/bj`BXul5Mr|e,vVUt={0,0},", stringBuffer0.toString());
  }

  @Test
  public void test32()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals("<", string0);
      assertNotNull(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertNotNull(stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals("<", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      long[] longArray0 = new long[20];
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertTrue(boolean0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, (Boolean) boolean0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      assertEquals(45, stringBuffer0.length());
      assertEquals("<<={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(74, stringBuffer0.capacity());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test33()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      boolean boolean0 = true;
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      
      String string0 = toStringStyle0.getSummaryObjectEndText();
      //  // Unstable assertion: assertEquals("&~d,~53Y_28]Z", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      //  // Unstable assertion: assertNotNull(hashMap0);
      //  // Unstable assertion: assertEquals("{}", hashMap0.toString());
      //  // Unstable assertion: assertEquals(true, hashMap0.isEmpty());
      //  // Unstable assertion: assertEquals(0, hashMap0.size());
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) hashMap0, (Boolean) boolean0);
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("{}", hashMap0.toString());
      //  // Unstable assertion: assertEquals(true, hashMap0.isEmpty());
      //  // Unstable assertion: assertEquals(0, hashMap0.size());
      //  // Unstable assertion: assertEquals("&~d,~53Y_28]Z={},", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(17, stringBuffer0.length());
  }

  @Test
  public void test34()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      String string0 = "DB,";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(3, stringBuffer0.length());
      assertEquals(19, stringBuffer0.capacity());
      assertEquals("DB,", stringBuffer0.toString());
      
      LinkedList<HashMap<Integer, Double>> linkedList0 = new LinkedList<HashMap<Integer, Double>>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      
      boolean boolean0 = false;
      Boolean boolean1 = new Boolean(boolean0);
      assertFalse(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) linkedList0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertEquals(16, stringBuffer0.length());
      assertEquals("DB,DB,=<size=0>,", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.capacity());
  }

  @Test
  public void test35()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      
      String string0 = toStringStyle0.getSummaryObjectEndText();
      //  // Unstable assertion: assertEquals("&~d,~53Y_28]Z", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(12, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("&~d,~53Y_28,", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      
      int int0 = 0;
      StandardToStringStyle standardToStringStyle1 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle1);
      //  // Unstable assertion: assertFalse(standardToStringStyle1.equals((Object)standardToStringStyle0));
      //  // Unstable assertion: assertNotSame(standardToStringStyle1, standardToStringStyle0);
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle1.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle1.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle1.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle1.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle1.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle1.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseFieldNames());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getFieldSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle1.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getArraySeparator());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle1.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSizeEndText());
      
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      //  // Unstable assertion: assertNotNull(hashMap0);
      //  // Unstable assertion: assertEquals("{}", hashMap0.toString());
      //  // Unstable assertion: assertEquals(0, hashMap0.size());
      //  // Unstable assertion: assertEquals(true, hashMap0.isEmpty());
      
      Boolean boolean0 = new Boolean(string0);
      //  // Unstable assertion: assertFalse(boolean0);
      
      standardToStringStyle1.append(stringBuffer0, string0, (Object) hashMap0, boolean0);
      //  // Unstable assertion: assertFalse(standardToStringStyle1.equals((Object)standardToStringStyle0));
      //  // Unstable assertion: assertNotSame(standardToStringStyle1, standardToStringStyle0);
      //  // Unstable assertion: assertEquals("&~d,~53Y_28,&~d,~53Y_28]Z=<size=0>,", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(35, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(70, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("{}", hashMap0.toString());
      //  // Unstable assertion: assertEquals(0, hashMap0.size());
      //  // Unstable assertion: assertEquals(true, hashMap0.isEmpty());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle1.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle1.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle1.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle1.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle1.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle1.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseFieldNames());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getFieldSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle1.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getArraySeparator());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle1.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSizeEndText());
      
      boolean boolean1 = false;
      String string1 = "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle";
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string1, string0);
      
      boolean boolean2 = false;
      String string2 = "[]";
      //  // Unstable assertion: assertFalse(string2.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string2, string1);
      //  // Unstable assertion: assertNotSame(string2, string0);
      
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      //  // Unstable assertion: assertNotNull(object0);
      
      objectArray0[0] = object0;
      //  // Unstable assertion: assertNotNull(objectArray0[0]);
      
      Object object1 = new Object();
      //  // Unstable assertion: assertNotNull(object1);
      //  // Unstable assertion: assertFalse(object1.equals((Object)object0));
      //  // Unstable assertion: assertNotSame(object1, object0);
      
      objectArray0[1] = object1;
      //  // Unstable assertion: assertNotNull(objectArray0[1]);
      
      objectArray0[2] = (Object) string0;
      //  // Unstable assertion: assertNotNull(objectArray0[2]);
      
      objectArray0[3] = (Object) boolean1;
      //  // Unstable assertion: assertNotNull(objectArray0[3]);
      
      objectArray0[4] = (Object) boolean2;
      //  // Unstable assertion: assertNotNull(objectArray0[4]);
      
      objectArray0[5] = (Object) standardToStringStyle1;
      //  // Unstable assertion: assertNotNull(objectArray0[5]);
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle1.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle1.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle1.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle1.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle1.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle1.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseFieldNames());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getFieldSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle1.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getArraySeparator());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle1.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSizeEndText());
      
      objectArray0[6] = (Object) boolean2;
      //  // Unstable assertion: assertNotNull(objectArray0[6]);
      
      objectArray0[7] = (Object) int0;
      //  // Unstable assertion: assertNotNull(objectArray0[7]);
      
      String string3 = "=MiU!4";
      //  // Unstable assertion: assertFalse(string3.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string3, string1);
      //  // Unstable assertion: assertNotSame(string3, string0);
      //  // Unstable assertion: assertNotSame(string3, string2);
      
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = boolean2;
      booleanArray0[1] = (boolean) boolean0;
      booleanArray0[2] = (boolean) boolean0;
      booleanArray0[3] = boolean2;
      booleanArray0[4] = (boolean) boolean0;
      booleanArray0[5] = boolean1;
      booleanArray0[6] = (boolean) boolean0;
      standardToStringStyle1.appendDetail(stringBuffer0, string3, booleanArray0);
      //  // Unstable assertion: assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false}, booleanArray0));
      //  // Unstable assertion: assertFalse(string3.equals((Object)string1));
      //  // Unstable assertion: assertFalse(string3.equals((Object)string0));
      //  // Unstable assertion: assertFalse(string3.equals((Object)string2));
      //  // Unstable assertion: assertFalse(standardToStringStyle1.equals((Object)standardToStringStyle0));
      //  // Unstable assertion: assertNotSame(string3, string1);
      //  // Unstable assertion: assertNotSame(string3, string0);
      //  // Unstable assertion: assertNotSame(string3, string2);
      //  // Unstable assertion: assertNotSame(standardToStringStyle1, standardToStringStyle0);
      //  // Unstable assertion: assertEquals(142, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(78, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("&~d,~53Y_28,&~d,~53Y_28]Z=<size=0>,{false,false,false,false,false,false,false}", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle1.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle1.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle1.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle1.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle1.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle1.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseFieldNames());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getFieldSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle1.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getArraySeparator());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle1.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSizeEndText());
      
      standardToStringStyle1.appendDetail(stringBuffer0, string1, objectArray0);
      //  // Unstable assertion: assertFalse(string1.equals((Object)string2));
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertFalse(string1.equals((Object)string3));
      //  // Unstable assertion: assertFalse(standardToStringStyle1.equals((Object)standardToStringStyle0));
      //  // Unstable assertion: assertNotSame(string1, string2);
      //  // Unstable assertion: assertNotSame(string1, string0);
      //  // Unstable assertion: assertNotSame(string1, string3);
      //  // Unstable assertion: assertNotSame(standardToStringStyle1, standardToStringStyle0);
      //  // Unstable assertion: assertEquals(286, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(222, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseClassName());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle1.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle1.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle1.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle1.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle1.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle1.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle1.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle1.isUseFieldNames());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getFieldSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle1.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle1.getArraySeparator());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle1.getNullText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle1.getSizeEndText());
      
      toStringStyle0.setFieldSeparator(string2);
      //  // Unstable assertion: assertFalse(string2.equals((Object)string3));
      //  // Unstable assertion: assertFalse(string2.equals((Object)string1));
      //  // Unstable assertion: assertFalse(string2.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string2, string3);
      //  // Unstable assertion: assertNotSame(string2, string1);
      //  // Unstable assertion: assertNotSame(string2, string0);
      
      ToStringStyle toStringStyle1 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle1);
      //  // Unstable assertion: assertSame(toStringStyle1, toStringStyle0);
      
      String string4 = toStringStyle1.getSummaryObjectStartText();
      //  // Unstable assertion: assertEquals("o:2^V~@jv>&tBoiL", string4);
      //  // Unstable assertion: assertNotNull(string4);
      //  // Unstable assertion: assertFalse(string4.equals((Object)string2));
      //  // Unstable assertion: assertFalse(string4.equals((Object)string0));
      //  // Unstable assertion: assertFalse(string4.equals((Object)string1));
      //  // Unstable assertion: assertFalse(string4.equals((Object)string3));
      //  // Unstable assertion: assertSame(toStringStyle1, toStringStyle0);
      //  // Unstable assertion: assertNotSame(string4, string2);
      //  // Unstable assertion: assertNotSame(string4, string0);
      //  // Unstable assertion: assertNotSame(string4, string1);
      //  // Unstable assertion: assertNotSame(string4, string3);
  }

  @Test
  public void test36()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getSummaryObjectStartText();
      //  // Unstable assertion: assertEquals("o:2^V~@jv>&tBoiL", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      
      Boolean boolean0 = Boolean.TRUE;
      //  // Unstable assertion: assertTrue(boolean0);
      
      Object object0 = null;
      standardToStringStyle0.append(stringBuffer0, string0, object0, boolean0);
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("o:2^V~@jv>&tBoiL=<null>,", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(24, stringBuffer0.length());
  }

  @Test
  public void test37()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getArrayEnd();
      //  // Unstable assertion: assertEquals(",#ZHFzW", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      short[] shortArray0 = new short[2];
      standardToStringStyle0.append(stringBuffer0, string0, shortArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertArrayEquals(new short[] {(short)0, (short)0}, shortArray0);
      //  // Unstable assertion: assertEquals(",#ZHFzW=<size=2>,", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(17, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      //  // Unstable assertion: assertEquals(",#ZHFzW=<size=2>", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test38()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      assertNotNull(toStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(int0);
      assertNotNull(stringBuffer1);
      assertSame(stringBuffer0, stringBuffer1);
      assertSame(stringBuffer1, stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals("\u0000", stringBuffer0.toString());
      assertEquals(2, stringBuffer0.capacity());
      assertEquals("\u0000", stringBuffer1.toString());
      assertEquals(1, stringBuffer1.length());
      assertEquals(2, stringBuffer1.capacity());
      
      toStringStyle0.removeLastFieldSeparator(stringBuffer1);
      assertSame(stringBuffer0, stringBuffer1);
      assertSame(stringBuffer1, stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals("\u0000", stringBuffer0.toString());
      assertEquals(2, stringBuffer0.capacity());
      assertEquals("\u0000", stringBuffer1.toString());
      assertEquals(1, stringBuffer1.length());
      assertEquals(2, stringBuffer1.capacity());
  }

  @Test
  public void test39()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test
  public void test40()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      boolean boolean0 = true;
      standardToStringStyle0.setFieldSeparatorAtEnd(boolean0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = "org.apache.commons.lang3.builder.StandardToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals("org.apache.commons.lang3.builder.StandardToStringStyle", stringBuffer0.toString());
      assertEquals(54, stringBuffer0.length());
      assertEquals(70, stringBuffer0.capacity());
      
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      assertNotNull(linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(55, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.StandardToStringStyle]", stringBuffer0.toString());
      assertEquals(70, stringBuffer0.capacity());
  }

  @Test
  public void test41()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      int int0 = 5;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(5, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      
      toStringStyle0.appendStart(stringBuffer0, (Object) stringBuffer0);
      //  // Unstable assertion: assertEquals(24, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("java.lang.StringBuffer[]", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(46, stringBuffer0.capacity());
  }

  @Test
  public void test42()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = "hot";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(19, stringBuffer0.capacity());
      assertEquals(3, stringBuffer0.length());
      assertEquals("hot", stringBuffer0.toString());
      
      Object object0 = null;
      standardToStringStyle0.appendStart(stringBuffer0, object0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(19, stringBuffer0.capacity());
      assertEquals(3, stringBuffer0.length());
      assertEquals("hot", stringBuffer0.toString());
  }

  @Test
  public void test43()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      
      String string0 = "[]";
      standardToStringStyle0.appendToString(stringBuffer0, string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
  }

  @Test
  public void test44()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("<null>", string0);
      assertNotNull(string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      StringBuffer stringBuffer0 = null;
      standardToStringStyle0.appendToString(stringBuffer0, string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test45()  throws Throwable  {
      String string0 = null;
      ToStringStyle.unregister(string0);
  }

  @Test
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      ToStringStyle.register(objectArray0[6]);
  }

  @Test
  public void test47()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = standardToStringStyle0.getArrayEnd();
      assertEquals("}", string0);
      assertNotNull(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      
      LinkedList<HashMap<Integer, Double>> linkedList0 = new LinkedList<HashMap<Integer, Double>>();
      assertNotNull(linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) linkedList0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("}}=[],", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
  }

  @Test
  public void test48()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertEquals("<size=", string0);
      assertNotNull(string0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(6, stringBuffer0.length());
      assertEquals("<size=", stringBuffer0.toString());
      assertEquals(22, stringBuffer0.capacity());
      
      int int0 = 0;
      standardToStringStyle0.append(stringBuffer0, string0, int0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=<size==0,", stringBuffer0.toString());
      assertEquals(22, stringBuffer0.capacity());
      assertEquals(15, stringBuffer0.length());
  }

  @Test
  public void test49()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      
      String string0 = "";
      float float0 = (-1922.22F);
      standardToStringStyle0.append(stringBuffer0, string0, float0);
      assertEquals("=-1922.22,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(10, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test50()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertEquals(",", string0);
      assertNotNull(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertNotNull(stringBuffer0);
      assertEquals(",", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      byte[] byteArray0 = new byte[10];
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.append(stringBuffer0, string0, byteArray0, boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(13, stringBuffer0.length());
      assertEquals(",,=<size=10>,", stringBuffer0.toString());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test
  public void test51()  throws Throwable  {
      Object object0 = null;
      boolean boolean0 = ToStringStyle.isRegistered(object0);
      assertFalse(boolean0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.setFieldSeparatorAtStart(boolean0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test52()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertTrue(boolean0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test
  public void test53()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setUseIdentityHashCode(boolean0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test54()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      String string0 = standardToStringStyle0.getContentStart();
      assertEquals("[", string0);
      assertNotNull(string0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test55()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      int int0 = 1825;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(1825, stringBuffer0.capacity());
      
      standardToStringStyle0.appendStart(stringBuffer0, (Object) stringBuffer0);
      assertEquals(1825, stringBuffer0.capacity());
      assertEquals(25, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test56()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      
      String string0 = null;
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
  }

  @Test
  public void test57()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.setUseClassName((boolean) boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test
  public void test58()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(boolean0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test
  public void test59()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      String string0 = standardToStringStyle0.getFieldNameValueSeparator();
      assertEquals("=", string0);
      assertNotNull(string0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test60()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = "char";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(4, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals("char", stringBuffer0.toString());
      
      float[] floatArray0 = new float[19];
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, (Boolean) boolean0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(174, stringBuffer0.capacity());
      assertEquals(87, stringBuffer0.length());
      assertEquals("charchar={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0},", stringBuffer0.toString());
  }

  @Test
  public void test61()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string0 = "java.vendor.url";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(15, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("java.vendor.url", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(31, stringBuffer0.capacity());
      
      Object[] objectArray0 = new Object[16];
      objectArray0[1] = (Object) string0;
      //  // Unstable assertion: assertNotNull(objectArray0[1]);
      
      Boolean boolean0 = null;
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, boolean0);
      //  // Unstable assertion: assertEquals(262, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(157, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test62()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      String string0 = "org.apache.commons.lang3.builder.StandardToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(54, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.StandardToStringStyle", stringBuffer0.toString());
      assertEquals(70, stringBuffer0.capacity());
      
      long[] longArray0 = new long[9];
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, boolean0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      assertEquals(118, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.StandardToStringStyleorg.apache.commons.lang3.builder.StandardToStringStyle=<size=9>,", stringBuffer0.toString());
      assertEquals(142, stringBuffer0.capacity());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test
  public void test63()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertEquals(",", string0);
      assertNotNull(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertNotNull(stringBuffer0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(1, stringBuffer0.length());
      assertEquals(",", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      Object[] objectArray0 = new Object[4];
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, boolean0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",,=<size=4>,", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
  }

  @Test
  public void test64()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertFalse(boolean0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test65()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      boolean boolean0 = true;
      standardToStringStyle0.setArrayContentDetail(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test66()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      String string0 = "java.vendor.url";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(31, stringBuffer0.capacity());
      assertEquals("java.vendor.url", stringBuffer0.toString());
      assertEquals(15, stringBuffer0.length());
      
      char[] charArray0 = new char[15];
      Boolean boolean0 = Boolean.valueOf(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, charArray0, boolean0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(64, stringBuffer0.capacity());
      assertEquals(41, stringBuffer0.length());
      assertEquals("java.vendor.urljava.vendor.url=<size=15>,", stringBuffer0.toString());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test
  public void test67()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getContentEnd();
      //  // Unstable assertion: assertEquals("java.vm.info", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals("java.vm.info", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(28, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(12, stringBuffer0.length());
      
      int[] intArray0 = new int[10];
      Boolean boolean0 = Boolean.FALSE;
      //  // Unstable assertion: assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, intArray0, boolean0);
      //  // Unstable assertion: assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(58, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(35, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("java.vm.infojava.vm.info=<size=10>,", stringBuffer0.toString());
  }

  @Test
  public void test68()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      
      String string0 = "g];Z6";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      double[] doubleArray0 = new double[15];
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, doubleArray0, boolean0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("g];Z6=<size=15>,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test69()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      boolean boolean0 = false;
      standardToStringStyle0.setUseShortClassName(boolean0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test70()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      
      String string0 = "g];Z6";
      char char0 = ';';
      toStringStyle0.append(stringBuffer0, string0, char0);
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("g];Z6kA5d{u_?:DA;*1/ODU yW\\-&)", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(30, stringBuffer0.length());
  }

  @Test
  public void test71()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      
      String string0 = "org.apache.commons.lang3.builder.StandardToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(54, stringBuffer0.length());
      assertEquals(70, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.builder.StandardToStringStyle", stringBuffer0.toString());
      
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      assertNotNull(linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) linkedList0);
      assertEquals(55, stringBuffer0.length());
      assertEquals(70, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.builder.StandardToStringStyle]", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
  }

  @Test
  public void test72()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      
      String string0 = "";
      boolean boolean0 = true;
      standardToStringStyle0.append(stringBuffer0, string0, boolean0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(6, stringBuffer0.length());
      assertEquals("=true,", stringBuffer0.toString());
  }

  @Test
  public void test73()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      
      String string0 = "";
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.setDefaultFullDetail((boolean) boolean0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test
  public void test74()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      
      String string0 = "";
      float[] floatArray0 = new float[5];
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, boolean0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(10, stringBuffer0.length());
      assertEquals("=<size=5>,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
  }

  @Test
  public void test75()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      
      String string0 = standardToStringStyle0.getArraySeparator();
      assertEquals(",", string0);
      assertNotNull(string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test
  public void test76()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      
      String string0 = "s";
      byte[] byteArray0 = new byte[5];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      standardToStringStyle0.append(stringBuffer0, string0, (short) byteArray0[2]);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, stringBuffer0.length());
      assertEquals("s=0,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
  }

  @Test
  public void test77()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = "java.vm.specification.name";
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      
      boolean[] booleanArray0 = new boolean[8];
      standardToStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) booleanArray0[3]);
      assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false, false}, booleanArray0));
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(36, stringBuffer0.length());
      assertEquals(70, stringBuffer0.capacity());
      assertEquals("java.vm.specification.name=<size=8>,", stringBuffer0.toString());
  }

  @Test
  public void test78()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(85, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle", stringBuffer0.toString());
      assertEquals(69, stringBuffer0.length());
      
      byte byte0 = (byte)64;
      standardToStringStyle0.append(stringBuffer0, string0, byte0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyleorg.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle=64,", stringBuffer0.toString());
      assertEquals(172, stringBuffer0.capacity());
      assertEquals(142, stringBuffer0.length());
  }

  @Test
  public void test79()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      boolean boolean0 = standardToStringStyle0.isUseIdentityHashCode();
      assertTrue(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      standardToStringStyle0.setUseFieldNames(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test80()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = "char";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals("char", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals(4, stringBuffer0.length());
      
      long long0 = 13L;
      standardToStringStyle0.append(stringBuffer0, string0, long0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(12, stringBuffer0.length());
      assertEquals("charchar=13,", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.capacity());
  }
}
