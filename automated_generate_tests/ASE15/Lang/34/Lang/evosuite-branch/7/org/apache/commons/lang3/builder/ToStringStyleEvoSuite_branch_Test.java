/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:51:17 GMT 2014
 */

package org.apache.commons.lang3.builder;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Arrays;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;


public class ToStringStyleEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setSummaryObjectEndText(string0);
  }

  @Test
  public void test01()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = "l H?<Z>y";
      toStringStyle0.setSummaryObjectEndText(string0);
  }

  @Test
  public void test02()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test03()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getContentStart();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(string0);
      assertEquals("[", string0);
      
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test04()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setSizeEndText(string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test05()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle";
      toStringStyle0.setSizeEndText(string0);
  }

  @Test
  public void test06()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setSizeStartText(string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test
  public void test07()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(string0);
      assertEquals(">", string0);
      
      standardToStringStyle0.setSizeStartText(string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test08()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setNullText(string0);
  }

  @Test
  public void test09()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "6>*mdc9p*\"3W-j";
      standardToStringStyle0.setNullText(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("6>*mdc9p*\"3W-j", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test
  public void test10()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setFieldSeparator(string0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test11()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(string0);
      assertEquals("<", string0);
      
      standardToStringStyle0.setFieldSeparator(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test12()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test13()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "(9C$ShD";
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("(9C$ShD", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test14()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test15()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertNotNull(string0);
      assertEquals("{", string0);
      
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test16()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setContentStart(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test17()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(string0);
      assertEquals(">", string0);
      
      standardToStringStyle0.setContentStart(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test18()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test19()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle";
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test20()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test21()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "2;B<fm";
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals("2;B<fm", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test22()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setArrayStart(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test23()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = "M+ ";
      toStringStyle0.setArrayStart(string0);
  }

  @Test
  public void test24()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(string0);
      assertEquals("<size=", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", stringBuffer0.toString());
      assertEquals(22, stringBuffer0.capacity());
      assertEquals(6, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      boolean boolean0 = true;
      standardToStringStyle0.setUseShortClassName(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      
      standardToStringStyle0.appendStart(stringBuffer0, (Object) standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      assertEquals(46, stringBuffer0.capacity());
      assertEquals(30, stringBuffer0.length());
  }

  @Test
  public void test25()  throws Throwable  {
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertNotNull(standardToStringStyle0);
      
      Object[] objectArray0 = new Object[9];
      standardToStringStyle0.appendClassName(stringBuffer0, objectArray0[0]);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
  }

  @Test
  public void test26()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle";
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      //  // Unstable assertion: assertTrue(boolean0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      float[] floatArray0 = new float[9];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(108, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(140, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0},", stringBuffer0.toString());
  }

  @Test
  public void test27()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertNotNull(string0);
      assertEquals(">", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      double[] doubleArray0 = new double[1];
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, doubleArray0, boolean0);
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(12, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(">>=<size=1>,", stringBuffer0.toString());
  }

  @Test
  public void test28()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(string0);
      assertEquals("<size=", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals(22, stringBuffer0.capacity());
      assertEquals(6, stringBuffer0.length());
      assertEquals("<size=", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(stringBuffer0);
      
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[12];
      standardToStringStyle0.append(stringBuffer0, string0, byteArray0, (Boolean) boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(46, stringBuffer0.capacity());
      assertEquals("<size=<size=={0,0,0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(39, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test29()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "}\\=(fG)EwH}wCsOS#";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals("}\\=(fG)EwH}wCsOS#", stringBuffer0.toString());
      assertEquals(34, stringBuffer0.capacity());
      assertEquals(18, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      short[] shortArray0 = new short[23];
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, shortArray0, boolean0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(85, stringBuffer0.length());
      assertEquals(142, stringBuffer0.capacity());
      assertEquals("}\\=(fG)EwH}wCsOS#}\\=(fG)EwH}wCsOS#={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
  }

  @Test
  public void test30()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "2;B<fm";
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      int[] intArray0 = new int[13];
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, intArray0, boolean0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(62, stringBuffer0.capacity());
      assertEquals(35, stringBuffer0.length());
      assertEquals("2;B<fm={0,0,0,0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
  }

  @Test
  public void test31()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      boolean boolean0 = true;
      String string0 = "#1";
      long[] longArray0 = new long[9];
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, (Boolean) boolean0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      assertEquals(23, stringBuffer0.length());
      assertEquals("#1={0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(30, stringBuffer0.capacity());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test
  public void test32()  throws Throwable  {
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = null;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(standardToStringStyle0);
      
      String string1 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(string1);
      assertEquals(">", string1);
      
      Object[] objectArray0 = new Object[9];
      Boolean boolean0 = Boolean.valueOf(string1);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, boolean0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(14, stringBuffer0.capacity());
      assertEquals("<size=9>,", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test
  public void test33()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      Object[] objectArray0 = new Object[4];
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, boolean0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(34, stringBuffer0.capacity());
      assertEquals(31, stringBuffer0.length());
      assertEquals("={<null>,<null>,<null>,<null>},", stringBuffer0.toString());
  }

  @Test
  public void test34()  throws Throwable  {
      String string0 = "";
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      boolean boolean0 = true;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      Object[] objectArray0 = new Object[10];
      objectArray0[0] = (Object) boolean0;
      //  // Unstable assertion: assertNotNull(objectArray0[0]);
      
      toStringStyle0.appendDetail(stringBuffer0, string0, objectArray0);
      //  // Unstable assertion: assertEquals(260, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("<YmuiLd:Boolean[MT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmCMT($1Dng<c`CChK@[XaJ.G/LNmC<", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(286, stringBuffer0.capacity());
  }

  @Test
  public void test35()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string0 = "-%8&f,|\\o9";
      LinkedList<Character> linkedList0 = new LinkedList<Character>();
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertNotNull(linkedList0);
      
      boolean boolean0 = false;
      standardToStringStyle0.appendInternal(stringBuffer0, string0, linkedList0, boolean0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(8, stringBuffer0.length());
  }

  @Test
  public void test36()  throws Throwable  {
      String string0 = "*Y`G\\u3";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(23, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(7, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("*Y`G\\u3", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      Object object0 = null;
      Boolean boolean0 = null;
      toStringStyle0.append(stringBuffer0, string0, object0, boolean0);
      //  // Unstable assertion: assertEquals("*Y`G\\u3*Y`G\\u3vqorg.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(83, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(83, stringBuffer0.capacity());
  }

  @Test
  public void test37()  throws Throwable  {
      String string0 = "*Y`G\\u3";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(23, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("*Y`G\\u3", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(7, stringBuffer0.length());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      Boolean boolean0 = null;
      toStringStyle0.append(stringBuffer0, string0, (Object) string0, boolean0);
      //  // Unstable assertion: assertEquals(101, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(101, stringBuffer0.length());
      
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      //  // Unstable assertion: assertEquals(101, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(34, stringBuffer0.length());
  }

  @Test
  public void test38()  throws Throwable  {
      String string0 = "M+ ";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals("M+ ", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.capacity());
      assertEquals(3, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertNotNull(standardToStringStyle0);
      
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) linkedList0);
      assertEquals(19, stringBuffer0.capacity());
      assertEquals(4, stringBuffer0.length());
      assertEquals("M+ ]", stringBuffer0.toString());
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test39()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      assertNotNull(toStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      toStringStyle0.appendEnd(stringBuffer0, (Object) toStringStyle0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
  }

  @Test
  public void test40()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "M+ ";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(19, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(3, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("M+ ", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      Object object0 = new Object();
      //  // Unstable assertion: assertNotNull(object0);
      
      toStringStyle0.appendStart(stringBuffer0, object0);
      //  // Unstable assertion: assertEquals(92, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(58, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("M+ java.lang.Objectjava.specification.vers0onRP{6W+_AaYs\\$", stringBuffer0.toString());
  }

  @Test
  public void test41()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = null;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.appendStart(stringBuffer0, (Object) string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
  }

  @Test
  public void test42()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string0 = "Fj@]MJ>:.`lpNwVLXs";
      standardToStringStyle0.appendToString(stringBuffer0, string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(4, stringBuffer0.length());
      assertEquals("Fj@,", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.capacity());
  }

  @Test
  public void test43()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = "]";
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
  }

  @Test
  public void test44()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = "java.runtime.version";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(36, stringBuffer0.capacity());
      assertEquals("java.runtime.version", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string1 = null;
      toStringStyle0.appendSuper(stringBuffer0, string1);
      assertEquals(36, stringBuffer0.capacity());
      assertEquals("java.runtime.version", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
  }

  @Test
  public void test45()  throws Throwable  {
      Object object0 = null;
      ToStringStyle.unregister(object0);
  }

  @Test
  public void test46()  throws Throwable  {
      Object object0 = null;
      ToStringStyle.register(object0);
  }

  @Test
  public void test47()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = "-%8ot:,\\o9";
      LinkedList<Character> linkedList0 = new LinkedList<Character>();
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertNotNull(linkedList0);
      
      boolean boolean0 = true;
      standardToStringStyle0.appendInternal(stringBuffer0, string0, linkedList0, boolean0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(2, stringBuffer0.length());
      assertEquals("[]", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
  }

  @Test
  public void test48()  throws Throwable  {
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(string0);
      assertEquals(">", string0);
      
      char char0 = '2';
      standardToStringStyle0.append(stringBuffer0, string0, char0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(6, stringBuffer0.capacity());
      assertEquals(">=2,", stringBuffer0.toString());
      assertEquals(4, stringBuffer0.length());
  }

  @Test
  public void test49()  throws Throwable  {
      int int0 = 4;
      String string0 = Integer.toHexString(int0);
      assertNotNull(string0);
      assertEquals("4", string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertEquals("4", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.append(stringBuffer0, string0, int0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("44=4,", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
  }

  @Test
  public void test50()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "java.runtime.version";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals("java.runtime.version", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(20, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(36, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      byte[] byteArray0 = new byte[8];
      Boolean boolean0 = new Boolean(string0);
      //  // Unstable assertion: assertFalse(boolean0);
      
      toStringStyle0.append(stringBuffer0, string0, byteArray0, boolean0);
      //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      //  // Unstable assertion: assertEquals(184, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(104, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("java.runtime.version>8org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyleRP{6W+_AaYs\\$", stringBuffer0.toString());
  }

  @Test
  public void test51()  throws Throwable  {
      boolean boolean0 = false;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      assertFalse(boolean1);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.setFieldSeparatorAtStart((boolean) boolean1);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test52()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(boolean0);
  }

  @Test
  public void test53()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(string0);
      assertEquals("]", string0);
  }

  @Test
  public void test54()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = true;
      toStringStyle0.setUseIdentityHashCode(boolean0);
  }

  @Test
  public void test55()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
  }

  @Test
  public void test56()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getArrayEnd();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("<", string0);
  }

  @Test
  public void test57()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertNotNull(string0);
      assertEquals(",", string0);
  }

  @Test
  public void test58()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(boolean0);
      
      standardToStringStyle0.setUseClassName(boolean0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test59()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertTrue(boolean0);
  }

  @Test
  public void test60()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getFieldNameValueSeparator();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("vq", string0);
  }

  @Test
  public void test61()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = "#1*w1q]ynT){hy]";
      long long0 = 1L;
      toStringStyle0.append(stringBuffer0, string0, (float) long0);
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("#1*w1q]ynT){hy]>1.0OR7|pEto:n0", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(30, stringBuffer0.length());
  }

  @Test
  public void test62()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "2;B<fm";
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      long[] longArray0 = new long[10];
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, boolean0);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("2;B<fm=<size=10>,", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
  }

  @Test
  public void test63()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = false;
      standardToStringStyle0.setArrayContentDetail(boolean0);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test64()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getSizeStartText();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("rP/LV:?`", string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertFalse(boolean0);
      
      int int0 = 64;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertEquals(64, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      standardToStringStyle0.append(stringBuffer0, string0, boolean0);
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(64, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("rP/LV:?`=false,", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(15, stringBuffer0.length());
  }

  @Test
  public void test65()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeEndText();
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals(">", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(">", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(1, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(17, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      int[] intArray0 = new int[4];
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertFalse(boolean0);
      
      toStringStyle0.append(stringBuffer0, string0, intArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      //  // Unstable assertion: assertEquals(">>}|]1jlb0.R@^t{G8=X[[40.9$&>dK\"ULSa7$4^", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(74, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(40, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test66()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = toStringStyle0.isUseClassName();
      assertTrue(boolean0);
  }

  @Test
  public void test67()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertNotNull(string0);
      assertEquals(">", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertNotNull(stringBuffer0);
      
      char[] charArray0 = new char[6];
      standardToStringStyle0.append(stringBuffer0, string0, (double) charArray0[2]);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(7, stringBuffer0.length());
      assertEquals(">>=0.0,", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test
  public void test68()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string0 = "(9C$ShD";
      char[] charArray0 = new char[9];
      Boolean boolean0 = null;
      standardToStringStyle0.append(stringBuffer0, string0, charArray0, boolean0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals("(9C$ShD={\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000},", stringBuffer0.toString());
      assertEquals(28, stringBuffer0.length());
      assertEquals(34, stringBuffer0.capacity());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test
  public void test69()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals(71, stringBuffer0.length());
      assertEquals(87, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      boolean[] booleanArray0 = new boolean[8];
      boolean boolean0 = true;
      booleanArray0[1] = boolean0;
      booleanArray0[2] = booleanArray0[1];
      standardToStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) booleanArray0[2]);
      assertTrue(Arrays.equals(new boolean[] {false, true, true, false, false, false, false, false}, booleanArray0));
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyleorg.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle={false,true,true,false,false,false,false,false},", stringBuffer0.toString());
      assertEquals(354, stringBuffer0.capacity());
      assertEquals(191, stringBuffer0.length());
  }

  @Test
  public void test70()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.setDefaultFullDetail((boolean) boolean0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test
  public void test71()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertFalse(boolean0);
      
      standardToStringStyle0.setFieldSeparatorAtEnd(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test72()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertFalse(boolean0);
      
      String string0 = "}\\=(fG)EwH}wCsOS#";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(18, stringBuffer0.length());
      assertEquals("}\\=(fG)EwH}wCsOS#", stringBuffer0.toString());
      assertEquals(34, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      float[] floatArray0 = new float[10];
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, (Boolean) boolean0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}\\=(fG)EwH}wCsOS#}\\=(fG)EwH}wCsOS#=<size=10>,", stringBuffer0.toString());
      assertEquals(47, stringBuffer0.length());
      assertEquals(70, stringBuffer0.capacity());
  }

  @Test
  public void test73()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = ";K=($vb.zigcstYxKVX";
      double[] doubleArray0 = new double[6];
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, doubleArray0, boolean0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(";K=($vb.zigcstYxKVX={0.0,0.0,0.0,0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(70, stringBuffer0.capacity());
      assertEquals(46, stringBuffer0.length());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test
  public void test74()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getArraySeparator();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(string0);
      assertEquals(",", string0);
  }

  @Test
  public void test75()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "Ar&Y";
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      short[] shortArray0 = new short[8];
      boolean boolean0 = false;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      //  // Unstable assertion: assertFalse(boolean1);
      
      toStringStyle0.append(stringBuffer0, string0, shortArray0, boolean1);
      //  // Unstable assertion: assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      //  // Unstable assertion: assertEquals("Ar&YvqrP/LV:?`8rP/LV:?`org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(90, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(90, stringBuffer0.capacity());
  }

  @Test
  public void test76()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeEndText();
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals(">", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(17, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(1, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(">", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      short short0 = (short)0;
      toStringStyle0.append(stringBuffer0, string0, short0);
      //  // Unstable assertion: assertEquals(18, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(36, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(">>}0$&>dK\"ULSa7$4^", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
  }

  @Test
  public void test77()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = " ";
      boolean[] booleanArray0 = new boolean[3];
      boolean boolean0 = false;
      toStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertTrue(Arrays.equals(new boolean[] {false, false, false}, booleanArray0));
      //  // Unstable assertion: assertEquals(70, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(" >org.apache.commons.lang3.builder.ToStringStyle3Ne_v3v2PxOR7|pEto:n0", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(98, stringBuffer0.capacity());
  }

  @Test
  public void test78()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(string0);
      assertEquals("<null>", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      byte byte0 = (byte) (-128);
      standardToStringStyle0.append(stringBuffer0, string0, byte0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("<null>=-128,", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test
  public void test79()  throws Throwable  {
      boolean boolean0 = true;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.setUseFieldNames(boolean0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test80()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
  }

  @Test
  public void test81()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string0 = ":3KOua";
      int[] intArray0 = new int[7];
      standardToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, string0, intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(15, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("{0,0,0,0,0,0,0}", stringBuffer0.toString());
  }

  @Test
  public void test82()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = "#1*w1q]ynT){hy]";
      long long0 = 1L;
      toStringStyle0.append(stringBuffer0, string0, long0);
      //  // Unstable assertion: assertEquals(28, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("#1*w1q]ynT){hy]>1OR7|pEto:n0", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(34, stringBuffer0.capacity());
  }
}
