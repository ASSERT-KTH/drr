/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:19:39 GMT 2014
 */

package org.apache.commons.lang3.builder;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;



import org.junit.runner.RunWith;


public class ToStringStyleEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setSummaryObjectEndText(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test01()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = ":TOv|E#ydCky.zseW";
      standardToStringStyle0.setSummaryObjectEndText(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(":TOv|E#ydCky.zseW", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test
  public void test02()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test03()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = ">";
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test
  public void test04()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setSizeEndText(string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test05()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "org.apache.commons.lang3.exception.CloneFailedException";
      standardToStringStyle0.setSizeEndText(string0);
      assertEquals("org.apache.commons.lang3.exception.CloneFailedException", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test
  public void test06()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setSizeStartText(string0);
  }

  @Test
  public void test07()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "Z,";
      standardToStringStyle0.setSizeStartText(string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("Z,", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test08()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setNullText(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test09()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "oH\"";
      standardToStringStyle0.setNullText(string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("oH\"", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test
  public void test10()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setFieldSeparator(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", string0);
      assertNotNull(string0);
      
      standardToStringStyle0.setFieldSeparator(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test12()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test13()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", string0);
      assertNotNull(string0);
      
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test14()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test15()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setContentStart(string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test16()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getArraySeparator();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", string0);
      assertNotNull(string0);
      
      standardToStringStyle0.setContentStart(string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test17()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test18()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", string0);
      assertNotNull(string0);
      
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test19()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test20()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "oH\"";
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("oH\"", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test21()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      standardToStringStyle0.setArrayStart(string0);
      assertEquals("", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test
  public void test22()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "p%y,LbHE";
      standardToStringStyle0.setArrayStart(string0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("p%y,LbHE", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test23()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 2932;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(2932, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string0 = null;
      standardToStringStyle0.appendIdentityHashCode(stringBuffer0, string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(2932, stringBuffer0.capacity());
  }

  @Test
  public void test24()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = true;
      standardToStringStyle0.setUseShortClassName(boolean0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", string0);
      assertNotNull(string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals("]", stringBuffer0.toString());
      assertEquals(1, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendStart(stringBuffer0, (Object) standardToStringStyle0);
      assertEquals(25, stringBuffer0.length());
      assertEquals(36, stringBuffer0.capacity());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test25()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = null;
      String string1 = toStringStyle0.getFieldNameValueSeparator();
      //  // Unstable assertion: assertEquals("", string1);
      //  // Unstable assertion: assertNotNull(string1);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string1);
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.appendClassName(stringBuffer0, string0);
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getFieldSeparator());
      //  // Unstable assertion: assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      //  // Unstable assertion: assertEquals("}", standardToStringStyle0.getArrayEnd());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSizeEndText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseFieldNames());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isUseShortClassName());
      //  // Unstable assertion: assertEquals("]", standardToStringStyle0.getContentEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      //  // Unstable assertion: assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
      //  // Unstable assertion: assertEquals("[", standardToStringStyle0.getContentStart());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseClassName());
      //  // Unstable assertion: assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      //  // Unstable assertion: assertEquals(",", standardToStringStyle0.getArraySeparator());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      //  // Unstable assertion: assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      //  // Unstable assertion: assertEquals("<null>", standardToStringStyle0.getNullText());
      //  // Unstable assertion: assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
  }

  @Test
  public void test26()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "5.1";
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      boolean[] booleanArray0 = new boolean[8];
      standardToStringStyle0.append(stringBuffer0, string0, booleanArray0, boolean0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("5.1=<size=8>,", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false, false}, booleanArray0));
  }

  @Test
  public void test27()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      int int0 = 982;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(982, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = "x9w<b";
      double[] doubleArray0 = new double[8];
      boolean boolean0 = true;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      //  // Unstable assertion: assertTrue(boolean1);
      
      toStringStyle0.append(stringBuffer0, string0, doubleArray0, boolean1);
      //  // Unstable assertion: assertEquals("java.runtime.version0.0user.home0.0user.home0.0user.home0.0user.home0.0user.home0.0user.home0.0user.home0.0ROhz-SQHkO#~!t-8+Ypfw", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(982, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(128, stringBuffer0.length());
      //  // Unstable assertion: assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test
  public void test28()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      //  // Unstable assertion: assertTrue(boolean0);
      
      String string0 = "Q.)Zr4)L@.ao)_hS";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals("Q.)Zr4)L@.ao)_hS", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(32, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      char[] charArray0 = new char[12];
      toStringStyle0.append(stringBuffer0, string0, charArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertEquals("Q.)Zr4)L@.ao)_hSQ.)Zr4)L@.ao)_hS<?-1Fv5)@MD7\u0000<\u0000<\u0000<\u0000<\u0000<\u0000<\u0000<\u0000<\u0000<\u0000<\u0000<\u0000java.class.path", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(134, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(83, stringBuffer0.length());
      //  // Unstable assertion: assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test29()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = true;
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = null;
      byte[] byteArray0 = new byte[4];
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1.equals((Object)boolean0));
      assertTrue(boolean1);
      
      standardToStringStyle0.append(stringBuffer0, string0, byteArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("{0,0,0,0},", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test
  public void test30()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = toStringStyle0.getFieldSeparator();
      //  // Unstable assertion: assertEquals("HkO#~!t-8+Ypfw", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      short[] shortArray0 = new short[4];
      toStringStyle0.appendDetail(stringBuffer0, string0, shortArray0);
      //  // Unstable assertion: assertEquals("java.runtime.version0user.home0user.home0user.home0ROhz-SQ", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(58, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(70, stringBuffer0.capacity());
      //  // Unstable assertion: assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0}, shortArray0);
  }

  @Test
  public void test31()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = "G5.1";
      boolean boolean0 = true;
      int[] intArray0 = new int[4];
      toStringStyle0.append(stringBuffer0, string0, intArray0, (Boolean) boolean0);
      //  // Unstable assertion: assertEquals(85, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("LINUX0000GHrrMorg.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(85, stringBuffer0.length());
      //  // Unstable assertion: assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test
  public void test32()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string0 = "";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = true;
      long[] longArray0 = new long[2];
      Boolean boolean1 = Boolean.valueOf(boolean0);
      assertTrue(boolean1);
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, boolean1);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(7, stringBuffer0.length());
      assertEquals("={0,0},", stringBuffer0.toString());
      assertArrayEquals(new long[] {0L, 0L}, longArray0);
  }

  @Test
  public void test33()  throws Throwable  {
      String string0 = "r";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      Object[] objectArray0 = new Object[2];
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1.equals((Object)boolean0));
      assertTrue(boolean1);
      
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(30, stringBuffer0.capacity());
      assertEquals("r={<null>,<null>},", stringBuffer0.toString());
      assertEquals(18, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test34()  throws Throwable  {
      String string0 = "r";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      boolean boolean0 = false;
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      assertEquals(0, hashMap0.size());
      assertEquals(true, hashMap0.isEmpty());
      assertEquals("{}", hashMap0.toString());
      assertNotNull(hashMap0);
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) hashMap0, (Boolean) boolean0);
      assertEquals(0, hashMap0.size());
      assertEquals(true, hashMap0.isEmpty());
      assertEquals("{}", hashMap0.toString());
      assertEquals(11, stringBuffer0.length());
      assertEquals(18, stringBuffer0.capacity());
      assertEquals("r=<size=0>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test35()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "org.apache.commons.lang3.exception.CloneFailedException";
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      boolean boolean0 = false;
      standardToStringStyle0.appendInternal(stringBuffer0, string0, linkedList0, boolean0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
  }

  @Test
  public void test36()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      char[] charArray0 = new char[3];
      boolean boolean0 = Character.isIdeographic((int) charArray0[0]);
      assertFalse(boolean0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) string0, (Boolean) boolean0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>,", stringBuffer0.toString());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test37()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "p%y,LbHE";
      int int0 = 2932;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(2932, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      short[] shortArray0 = new short[9];
      Boolean boolean0 = Boolean.valueOf(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, shortArray0, boolean0);
      assertEquals("p%y,LbHE=<size=9>,", stringBuffer0.toString());
      assertEquals(18, stringBuffer0.length());
      assertEquals(2932, stringBuffer0.capacity());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("p%y,LbHE=<size=9>", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
      assertEquals(2932, stringBuffer0.capacity());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test38()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getNullText();
      //  // Unstable assertion: assertEquals("ROhz-SQ", string0);
      //  // Unstable assertion: assertNotNull(string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(23, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(7, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("ROhz-SQ", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      //  // Unstable assertion: assertEquals(23, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(7, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("ROhz-SQ", stringBuffer0.toString());
  }

  @Test
  public void test39()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = "LINUX";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(5, stringBuffer0.length());
      assertEquals(21, stringBuffer0.capacity());
      assertEquals("LINUX", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(5, stringBuffer0.length());
      assertEquals(21, stringBuffer0.capacity());
      assertEquals("LINUX", stringBuffer0.toString());
  }

  @Test
  public void test40()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 2932;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(2932, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(2932, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test
  public void test41()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = true;
      standardToStringStyle0.setFieldSeparatorAtStart(boolean0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", string0);
      assertNotNull(string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(1, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("]", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendStart(stringBuffer0, (Object) standardToStringStyle0);
      assertEquals(112, stringBuffer0.capacity());
      assertEquals(59, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test42()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = null;
      Object object0 = null;
      standardToStringStyle0.appendStart(stringBuffer0, object0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test43()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = ":TOv|E#ydCky.zseW";
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(":TOv|E#ydCky.zseW", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string1 = standardToStringStyle0.getSummaryObjectEndText();
      assertFalse(string1.equals((Object)string0));
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(":TOv|E#ydCky.zseW", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertNotSame(string1, string0);
      assertEquals(">", string1);
      assertNotNull(string1);
      
      StringBuffer stringBuffer0 = new StringBuffer(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(":TOv|E#ydCky.zseW", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(1, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(">", stringBuffer0.toString());
      assertNotSame(string1, string0);
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(":TOv|E#ydCky.zseW", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(1, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(">", stringBuffer0.toString());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test
  public void test44()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = null;
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
  }

  @Test
  public void test45()  throws Throwable  {
      String string0 = null;
      ToStringStyle.unregister(string0);
  }

  @Test
  public void test46()  throws Throwable  {
      String string0 = null;
      ToStringStyle.register(string0);
  }

  @Test
  public void test47()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      assertTrue(boolean0);
      
      String string0 = "Q.)Zr4)L@.ao)_hS";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(16, stringBuffer0.length());
      assertEquals("Q.)Zr4)L@.ao)_hS", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      LinkedList<LinkedList<StandardToStringStyle>> linkedList0 = new LinkedList<LinkedList<StandardToStringStyle>>();
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertNotNull(linkedList0);
      
      toStringStyle0.appendInternal(stringBuffer0, string0, linkedList0, boolean0);
      assertEquals(0, linkedList0.size());
      assertEquals("[]", linkedList0.toString());
      assertEquals(18, stringBuffer0.length());
      assertEquals("Q.)Zr4)L@.ao)_hS[]", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.capacity());
  }

  @Test
  public void test48()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      char char0 = 'H';
      toStringStyle0.append(stringBuffer0, string0, char0);
      //  // Unstable assertion: assertEquals("<?-H", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(4, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
  }

  @Test
  public void test49()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "=xbjblT";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals("=xbjblT", stringBuffer0.toString());
      assertEquals(23, stringBuffer0.capacity());
      assertEquals(7, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      int int0 = stringBuffer0.lastIndexOf(string0);
      assertEquals("=xbjblT", stringBuffer0.toString());
      assertEquals(23, stringBuffer0.capacity());
      assertEquals(7, stringBuffer0.length());
      assertEquals(0, int0);
      
      standardToStringStyle0.append(stringBuffer0, string0, int0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(17, stringBuffer0.length());
      assertEquals(23, stringBuffer0.capacity());
      assertEquals("=xbjblT=xbjblT=0,", stringBuffer0.toString());
  }

  @Test
  public void test50()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "LINUX";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertEquals(5, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("LINUX", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(21, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      float float0 = (-85.1455F);
      toStringStyle0.append(stringBuffer0, string0, float0);
      //  // Unstable assertion: assertEquals(84, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(84, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("LINUX-85.1455org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
  }

  @Test
  public void test51()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "oH\"";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals(3, stringBuffer0.length());
      assertEquals("oH\"", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string1 = standardToStringStyle0.getContentStart();
      assertFalse(string1.equals((Object)string0));
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotSame(string1, string0);
      assertEquals("[", string1);
      assertNotNull(string1);
      
      byte[] byteArray0 = new byte[4];
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string1, byteArray0, boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("oH\"[=<size=4>,", stringBuffer0.toString());
      assertEquals(14, stringBuffer0.length());
      assertEquals(19, stringBuffer0.capacity());
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test
  public void test52()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(boolean0);
  }

  @Test
  public void test53()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = true;
      toStringStyle0.setUseIdentityHashCode(boolean0);
  }

  @Test
  public void test54()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = ":TOv|E#ydCky.zseW";
      String string1 = standardToStringStyle0.getSummaryObjectEndText();
      assertFalse(string1.equals((Object)string0));
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotSame(string1, string0);
      assertEquals(">", string1);
      assertNotNull(string1);
      
      StringBuffer stringBuffer0 = new StringBuffer(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotSame(string1, string0);
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendSuper(stringBuffer0, string0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
  }

  @Test
  public void test55()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getArrayEnd();
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("}", string0);
      assertNotNull(string0);
  }

  @Test
  public void test56()  throws Throwable  {
      boolean boolean0 = true;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.setUseClassName(boolean0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test
  public void test57()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(boolean0);
  }

  @Test
  public void test58()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(boolean0);
  }

  @Test
  public void test59()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", string0);
      assertNotNull(string0);
      
      float[] floatArray0 = new float[8];
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, boolean0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(70, stringBuffer0.capacity());
      assertEquals(36, stringBuffer0.length());
      assertEquals("<={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0},", stringBuffer0.toString());
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test
  public void test60()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string0 = "";
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) string0;
      assertNotNull(objectArray0[0]);
      
      standardToStringStyle0.appendDetail(stringBuffer0, string0, objectArray0);
      assertEquals(16, stringBuffer0.length());
      assertEquals("{,<null>,<null>}", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test61()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertNotNull(standardToStringStyle0);
      
      long[] longArray0 = new long[2];
      String string0 = "Z,";
      boolean boolean0 = false;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      assertFalse(boolean1);
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, boolean1);
      assertEquals(12, stringBuffer0.length());
      assertEquals("Z,=<size=2>,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertArrayEquals(new long[] {0L, 0L}, longArray0);
  }

  @Test
  public void test62()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = "5.1";
      Object[] objectArray0 = new Object[4];
      Boolean boolean0 = Boolean.FALSE;
      //  // Unstable assertion: assertFalse(boolean0);
      
      toStringStyle0.append(stringBuffer0, string0, objectArray0, boolean0);
      //  // Unstable assertion: assertEquals(77, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("}_JE4]org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(77, stringBuffer0.capacity());
  }

  @Test
  public void test63()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertFalse(boolean0);
  }

  @Test
  public void test64()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = true;
      toStringStyle0.setArrayContentDetail(boolean0);
  }

  @Test
  public void test65()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "r";
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.capacity());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      boolean boolean0 = true;
      toStringStyle0.append(stringBuffer0, string0, boolean0);
      //  // Unstable assertion: assertEquals("trueHkO#~!t-8+Ypfw", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(18, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(18, stringBuffer0.capacity());
  }

  @Test
  public void test66()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "5.1";
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      char[] charArray0 = new char[4];
      standardToStringStyle0.append(stringBuffer0, string0, charArray0, boolean0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("5.1=<size=4>,", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test67()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "org.apache.commons.lang3.exception.CloneFailedException";
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      char[] charArray0 = new char[3];
      standardToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, string0, charArray0);
      assertEquals("{\u0000,\u0000,\u0000}", stringBuffer0.toString());
      assertEquals(7, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test68()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", string0);
      assertNotNull(string0);
      
      int[] intArray0 = new int[10];
      Boolean boolean0 = new Boolean(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, intArray0, boolean0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>=<size=10>,", stringBuffer0.toString());
      assertEquals(34, stringBuffer0.capacity());
      assertEquals(17, stringBuffer0.length());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test
  public void test69()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(boolean0);
  }

  @Test
  public void test70()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "oH\"";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertEquals("oH\"", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.capacity());
      assertEquals(3, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string1 = standardToStringStyle0.getContentStart();
      assertFalse(string1.equals((Object)string0));
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertNotSame(string1, string0);
      assertEquals("[", string1);
      assertNotNull(string1);
      
      double[] doubleArray0 = new double[9];
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string1, doubleArray0, boolean0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(14, stringBuffer0.length());
      assertEquals(19, stringBuffer0.capacity());
      assertEquals("oH\"[=<size=9>,", stringBuffer0.toString());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test
  public void test71()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", string0);
      assertNotNull(string0);
  }

  @Test
  public void test72()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", string0);
      assertNotNull(string0);
  }

  @Test
  public void test73()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", string0);
      assertNotNull(string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertEquals(1, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(">", stringBuffer0.toString());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(stringBuffer0);
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) string0);
      assertEquals(2, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(">]", stringBuffer0.toString());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test
  public void test74()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string0 = "=";
      boolean[] booleanArray0 = new boolean[8];
      boolean boolean0 = true;
      standardToStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) boolean0);
      assertEquals(52, stringBuffer0.length());
      assertEquals(70, stringBuffer0.capacity());
      assertEquals("=={false,false,false,false,false,false,false,false},", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false, false}, booleanArray0));
  }

  @Test
  public void test75()  throws Throwable  {
      boolean boolean0 = true;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertNotNull(standardToStringStyle0);
      
      standardToStringStyle0.setDefaultFullDetail(boolean0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test
  public void test76()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = true;
      standardToStringStyle0.setFieldSeparatorAtEnd(boolean0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test77()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      String string0 = ">";
      float[] floatArray0 = new float[10];
      boolean boolean0 = false;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      assertFalse(boolean1);
      
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, boolean1);
      assertEquals(">=<size=10>,", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test
  public void test78()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertNotNull(standardToStringStyle0);
      
      String string0 = "org.apache.commons.lang3.exception.CloneFailedException";
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      char[] charArray0 = new char[3];
      standardToStringStyle0.append(stringBuffer0, string0, (double) charArray0[1]);
      assertEquals(112, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.exception.CloneFailedException=0.0,", stringBuffer0.toString());
      assertEquals(60, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test79()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      String string0 = "";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertNotNull(standardToStringStyle0);
      
      short short0 = (short) (-20);
      standardToStringStyle0.append(stringBuffer0, string0, short0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(5, stringBuffer0.length());
      assertEquals("=-20,", stringBuffer0.toString());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test80()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertNotNull(standardToStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string0 = ">";
      byte byte0 = (byte)31;
      standardToStringStyle0.append(stringBuffer0, string0, byte0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(">=31,", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test81()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = false;
      standardToStringStyle0.setUseFieldNames(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test82()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertNotNull(standardToStringStyle0);
      
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(boolean0);
  }

  @Test
  public void test83()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertNotNull(standardToStringStyle0);
      
      int int0 = 8;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(8, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      String string0 = "FBT";
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      assertEquals(true, hashMap0.isEmpty());
      assertEquals("{}", hashMap0.toString());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      Boolean boolean0 = null;
      standardToStringStyle0.append(stringBuffer0, string0, (Object) hashMap0, boolean0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(8, stringBuffer0.capacity());
      assertEquals("FBT={},", stringBuffer0.toString());
      assertEquals(7, stringBuffer0.length());
      assertEquals(true, hashMap0.isEmpty());
      assertEquals("{}", hashMap0.toString());
      assertEquals(0, hashMap0.size());
  }

  @Test
  public void test84()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      
      String string0 = "5.1";
      char[] charArray0 = new char[4];
      toStringStyle0.append(stringBuffer0, string0, (long) charArray0[0]);
      //  // Unstable assertion: assertEquals("0org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(72, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(72, stringBuffer0.capacity());
      //  // Unstable assertion: assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }
}
