/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 15:58:32 GMT 2014
 */

package org.apache.commons.lang3.builder;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.junit.runner.RunWith;


public class ToStringStyleEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = null;
      standardToStringStyle0.setSummaryObjectEndText(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test01()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      String string0 = "jR~FNID:$5";
      standardToStringStyle0.setSummaryObjectEndText(string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("jR~FNID:$5", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test02()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      String string0 = null;
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test
  public void test03()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      String string0 = "4.1";
      standardToStringStyle0.setSummaryObjectStartText(string0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("4.1", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test
  public void test04()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setSizeEndText(string0);
  }

  @Test
  public void test05()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      String string0 = standardToStringStyle0.getArraySeparator();
      assertNotNull(string0);
      assertEquals(",", string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setSizeEndText(string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test
  public void test06()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = null;
      standardToStringStyle0.setSizeStartText(string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test07()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = "!+o{5]r.UOt\\1LFZ";
      toStringStyle0.setSizeStartText(string0);
  }

  @Test
  public void test08()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = null;
      standardToStringStyle0.setNullText(string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test09()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = standardToStringStyle0.getNullText();
      assertNotNull(string0);
      assertEquals("<null>", string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.setNullText(string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test
  public void test10()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = null;
      standardToStringStyle0.setFieldSeparator(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test
  public void test11()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      String string0 = null;
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
  }

  @Test
  public void test12()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      String string0 = standardToStringStyle0.getSizeStartText();
      assertNotNull(string0);
      assertEquals("<size=", string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      standardToStringStyle0.setFieldNameValueSeparator(string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test13()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = standardToStringStyle0.getNullText();
      assertNotNull(string0);
      assertEquals("<null>", string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test14()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setContentStart(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle";
      standardToStringStyle0.setContentStart(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test16()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      String string0 = null;
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = "java.runtime.version";
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      standardToStringStyle0.setArraySeparator(string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("java.runtime.version", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test18()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setArrayEnd(string0);
  }

  @Test
  public void test19()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = standardToStringStyle0.getNullText();
      assertNotNull(string0);
      assertEquals("<null>", string0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setArrayEnd(string0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test20()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      assertNotNull(toStringStyle0);
      
      String string0 = null;
      toStringStyle0.setArrayStart(string0);
  }

  @Test
  public void test21()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle";
      standardToStringStyle0.setArrayStart(string0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test22()  throws Throwable  {
      String string0 = null;
      StringBuffer stringBuffer0 = null;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.appendClassName(stringBuffer0, string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test
  public void test23()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      int int0 = 36;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(36, stringBuffer0.capacity());
      
      String string0 = "0\\L_N=t{_M})&_\"[R";
      boolean[] booleanArray0 = new boolean[7];
      boolean boolean0 = true;
      booleanArray0[1] = boolean0;
      booleanArray0[6] = booleanArray0[1];
      standardToStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) booleanArray0[6]);
      assertEquals(61, stringBuffer0.length());
      assertEquals(74, stringBuffer0.capacity());
      assertEquals("0\\L_N=t{_M})&_\"[R={false,true,false,false,false,false,true},", stringBuffer0.toString());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(Arrays.equals(new boolean[] {false, true, false, false, false, false, true}, booleanArray0));
  }

  @Test
  public void test24()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertNotNull(string0);
      assertEquals(",", string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      boolean boolean0 = true;
      double[] doubleArray0 = new double[10];
      standardToStringStyle0.append(stringBuffer0, string0, doubleArray0, (Boolean) boolean0);
      assertEquals(70, stringBuffer0.capacity());
      assertEquals(",={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(44, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test
  public void test25()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "GAYx";
      char char0 = 'w';
      StringBuffer stringBuffer0 = new StringBuffer((int) char0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(119, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      
      char[] charArray0 = new char[6];
      toStringStyle0.appendDetail(stringBuffer0, string0, charArray0);
      //  // Unstable assertion: assertEquals(83, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(119, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h\u0000SI:iT0lv}*C\u0000SI:iT0lv}*C\u0000SI:iT0lv}*C\u0000SI:iT0lv}*C\u0000SI:iT0lv}*C\u0000GAYx", stringBuffer0.toString());
      //  // Unstable assertion: assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test26()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      assertNotNull(toStringStyle0);
      
      boolean boolean0 = toStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
      
      String string0 = "NeN}O9";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(22, stringBuffer0.capacity());
      assertEquals("NeN}O9", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      char[] charArray0 = new char[1];
      standardToStringStyle0.append(stringBuffer0, string0, charArray0, (Boolean) boolean0);
      assertEquals(22, stringBuffer0.capacity());
      assertEquals(17, stringBuffer0.length());
      assertEquals("NeN}O9NeN}O9={\u0000},", stringBuffer0.toString());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
  }

  @Test
  public void test27()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      
      String string0 = "C!";
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, byteArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals("C!={0,0,0},", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(11, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test
  public void test28()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      
      boolean boolean0 = false;
      String string0 = "C!";
      byte[] byteArray0 = new byte[3];
      Boolean boolean1 = new Boolean(boolean0);
      assertFalse(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, byteArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(12, stringBuffer0.length());
      assertEquals("C!=<size=3>,", stringBuffer0.toString());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test
  public void test29()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getArrayStart();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(29, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(13, stringBuffer0.length());
      
      boolean[] booleanArray0 = new boolean[7];
      boolean boolean0 = true;
      booleanArray0[0] = boolean0;
      booleanArray0[6] = booleanArray0[0];
      short[] shortArray0 = new short[9];
      toStringStyle0.append(stringBuffer0, string0, shortArray0, (Boolean) booleanArray0[6]);
      //  // Unstable assertion: assertEquals(136, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(246, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4hFn~hR;Xu>M#4h0SI:iT0lv}*C0SI:iT0lv}*C0SI:iT0lv}*C0SI:iT0lv}*C0SI:iT0lv}*C0SI:iT0lv}*C0SI:iT0lv}*C0SI:iT0lv}*C0GAYx{", stringBuffer0.toString());
      //  // Unstable assertion: assertTrue(Arrays.equals(new boolean[] {true, false, false, false, false, false, true}, booleanArray0));
      //  // Unstable assertion: assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
  }

  @Test
  public void test30()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      
      String string0 = "4.1";
      long[] longArray0 = new long[10];
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("4.1={0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(26, stringBuffer0.length());
      assertEquals(34, stringBuffer0.capacity());
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test
  public void test31()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      String string0 = standardToStringStyle0.getSizeEndText();
      assertNotNull(string0);
      assertEquals(">", string0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertTrue(boolean0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", stringBuffer0.toString());
      
      HashMap<Integer, LinkedList<Object>> hashMap0 = new HashMap<Integer, LinkedList<Object>>();
      assertNotNull(hashMap0);
      assertEquals("{}", hashMap0.toString());
      assertEquals(0, hashMap0.size());
      assertEquals(true, hashMap0.isEmpty());
      
      Object[] objectArray0 = new Object[18];
      objectArray0[5] = (Object) hashMap0;
      assertNotNull(objectArray0[5]);
      assertEquals("{}", hashMap0.toString());
      assertEquals(0, hashMap0.size());
      assertEquals(true, hashMap0.isEmpty());
      
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, (Boolean) boolean0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">>={<null>,<null>,<null>,<null>,<null>,{},<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>},", stringBuffer0.toString());
      assertEquals(150, stringBuffer0.capacity());
      assertEquals(127, stringBuffer0.length());
  }

  @Test
  public void test32()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(16, stringBuffer0.capacity());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle";
      HashMap<Boolean, Float> hashMap0 = new HashMap<Boolean, Float>();
      assertNotNull(hashMap0);
      assertEquals(true, hashMap0.isEmpty());
      assertEquals("{}", hashMap0.toString());
      assertEquals(0, hashMap0.size());
      
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) hashMap0, boolean0);
      assertEquals(true, hashMap0.isEmpty());
      assertEquals("{}", hashMap0.toString());
      assertEquals(0, hashMap0.size());
      assertEquals(79, stringBuffer0.length());
      assertEquals(140, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle=<size=0>,", stringBuffer0.toString());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test
  public void test33()  throws Throwable  {
      int int0 = 1;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(1, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      
      String string0 = " eK";
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      //  // Unstable assertion: assertNotNull(linkedList0);
      //  // Unstable assertion: assertEquals(0, linkedList0.size());
      //  // Unstable assertion: assertEquals("[]", linkedList0.toString());
      
      boolean boolean0 = false;
      Boolean boolean1 = new Boolean(boolean0);
      //  // Unstable assertion: assertFalse(boolean1);
      //  // Unstable assertion: assertTrue(boolean1.equals((Object)boolean0));
      
      toStringStyle0.append(stringBuffer0, string0, (Object) linkedList0, boolean1);
      //  // Unstable assertion: assertTrue(boolean1.equals((Object)boolean0));
      //  // Unstable assertion: assertEquals(0, linkedList0.size());
      //  // Unstable assertion: assertEquals("[]", linkedList0.toString());
      //  // Unstable assertion: assertEquals("=)W={mxm#s.(0\\qI#JI~ ", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(28, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(22, stringBuffer0.length());
  }

  @Test
  public void test34()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      StringBuffer stringBuffer0 = new StringBuffer();
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      
      String string0 = toStringStyle0.getSummaryObjectEndText();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals(" eK", string0);
      
      Object object0 = null;
      Boolean boolean0 = new Boolean(string0);
      //  // Unstable assertion: assertFalse(boolean0);
      
      toStringStyle0.append(stringBuffer0, string0, object0, boolean0);
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(">*?$)l}Zh! ", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(11, stringBuffer0.length());
  }

  @Test
  public void test35()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = "{=\"s$_r<Fr>{T6wL";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(32, stringBuffer0.capacity());
      assertEquals("{=\"s$_r<Fr>{T6wL", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
      
      standardToStringStyle0.appendFieldEnd(stringBuffer0, string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(17, stringBuffer0.length());
      assertEquals("{=\"s$_r<Fr>{T6wL,", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.capacity());
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) stringBuffer0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(17, stringBuffer0.length());
      assertEquals(32, stringBuffer0.capacity());
      assertEquals("{=\"s$_r<Fr>{T6wL]", stringBuffer0.toString());
  }

  @Test
  public void test36()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      String string0 = "JtXj\\~J`i5tB";
      standardToStringStyle0.setFieldSeparator(string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("JtXj\\~J`i5tB", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      byte[] byteArray0 = new byte[4];
      String string1 = "86.0";
      assertNotSame(string1, string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string1);
      assertNotNull(stringBuffer0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(20, stringBuffer0.capacity());
      assertEquals(4, stringBuffer0.length());
      assertEquals("86.0", stringBuffer0.toString());
      assertNotSame(string1, string0);
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) byteArray0[1]);
      assertFalse(string1.equals((Object)string0));
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("JtXj\\~J`i5tB", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("86.0]", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotSame(string1, string0);
  }

  @Test
  public void test37()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      int int0 = 1;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(1, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(1, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test
  public void test38()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      
      toStringStyle0.appendEnd(stringBuffer0, (Object) toStringStyle0);
      //  // Unstable assertion: assertEquals(16, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(16, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("null/empty items", stringBuffer0.toString());
  }

  @Test
  public void test39()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getArrayStart();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(29, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(13, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h", stringBuffer0.toString());
      
      Object object0 = new Object();
      //  // Unstable assertion: assertNotNull(object0);
      
      toStringStyle0.appendStart(stringBuffer0, object0);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4hjava.lang.Object", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(29, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(29, stringBuffer0.capacity());
  }

  @Test
  public void test40()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      Object object0 = null;
      standardToStringStyle0.appendStart(stringBuffer0, object0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test41()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      String string0 = "l&b%Hu(<y";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(9, stringBuffer0.length());
      assertEquals(25, stringBuffer0.capacity());
      assertEquals("l&b%Hu(<y", stringBuffer0.toString());
      
      String string1 = "(N]+~%&W-m$<y";
      assertNotSame(string1, string0);
      
      standardToStringStyle0.appendSuper(stringBuffer0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(12, stringBuffer0.length());
      assertEquals(25, stringBuffer0.capacity());
      assertEquals("l&b%Hu(<y(N,", stringBuffer0.toString());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test
  public void test42()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      String string0 = null;
      standardToStringStyle0.setContentEnd(string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      String string1 = standardToStringStyle0.getContentStart();
      assertNotNull(string1);
      assertEquals("[", string1);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      
      StringBuffer stringBuffer0 = null;
      standardToStringStyle0.appendToString(stringBuffer0, string1);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test
  public void test43()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = null;
      StringBuffer stringBuffer0 = null;
      standardToStringStyle0.appendToString(stringBuffer0, string0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test44()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = null;
      ToStringStyle.unregister(standardToStringStyle0);
  }

  @Test
  public void test45()  throws Throwable  {
      Object object0 = null;
      ToStringStyle.register(object0);
  }

  @Test
  public void test46()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      int int0 = 1;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      assertEquals(1, stringBuffer0.capacity());
      
      String string0 = " ";
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      assertNotNull(linkedList0);
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, (Object) linkedList0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(5, stringBuffer0.length());
      assertEquals(" =[],", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.capacity());
      assertEquals("[]", linkedList0.toString());
      assertEquals(0, linkedList0.size());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test47()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertNotNull(string0);
      assertEquals("]", string0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      
      char char0 = 'l';
      standardToStringStyle0.append(stringBuffer0, string0, (int) char0);
      assertEquals(6, stringBuffer0.capacity());
      assertEquals("]=108,", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test48()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(87, stringBuffer0.capacity());
      assertEquals(71, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
      
      int int0 = (-26);
      standardToStringStyle0.append(stringBuffer0, string0, (float) int0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(176, stringBuffer0.capacity());
      assertEquals(149, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyleorg.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle=-26.0,", stringBuffer0.toString());
  }

  @Test
  public void test49()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      boolean boolean0 = true;
      Boolean boolean1 = new Boolean(boolean0);
      assertTrue(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.setFieldSeparatorAtStart((boolean) boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test50()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      boolean boolean0 = true;
      standardToStringStyle0.setUseIdentityHashCode(boolean0);
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test
  public void test51()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(0, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(0, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals("", stringBuffer0.toString());
      
      toStringStyle0.appendStart(stringBuffer0, (Object) toStringStyle0);
      //  // Unstable assertion: assertEquals(78, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(44, stringBuffer0.length());
  }

  @Test
  public void test52()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = "l&b%Hu(<y";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(25, stringBuffer0.capacity());
      assertEquals("l&b%Hu(<y", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
      
      String string1 = standardToStringStyle0.getArrayStart();
      assertNotNull(string1);
      assertEquals("{", string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertNotSame(string1, string0);
      
      standardToStringStyle0.appendSuper(stringBuffer0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(25, stringBuffer0.capacity());
      assertEquals("l&b%Hu(<y", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
  }

  @Test
  public void test53()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      
      String string0 = standardToStringStyle0.getArrayEnd();
      assertNotNull(string0);
      assertEquals("}", string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
  }

  @Test
  public void test54()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      boolean boolean0 = true;
      standardToStringStyle0.setUseClassName(boolean0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test
  public void test55()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(boolean0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test56()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      String string0 = standardToStringStyle0.getFieldNameValueSeparator();
      assertNotNull(string0);
      assertEquals("=", string0);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test
  public void test57()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = "{=\"s$_r<Fr>{T6wL";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals("{=\"s$_r<Fr>{T6wL", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.capacity());
      assertEquals(16, stringBuffer0.length());
      
      float[] floatArray0 = new float[3];
      Boolean boolean0 = null;
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(47, stringBuffer0.length());
      assertEquals("{=\"s$_r<Fr>{T6wL{=\"s$_r<Fr>{T6wL={0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(66, stringBuffer0.capacity());
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test
  public void test58()  throws Throwable  {
      String string0 = " eK";
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string1 = toStringStyle0.getArraySeparator();
      //  // Unstable assertion: assertNotNull(string1);
      //  // Unstable assertion: assertEquals("\\ ", string1);
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string1, string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string1);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertEquals(18, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(2, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("\\ ", stringBuffer0.toString());
      //  // Unstable assertion: assertNotSame(string1, string0);
      
      Object[] objectArray0 = new Object[10];
      objectArray0[1] = (Object) toStringStyle0;
      //  // Unstable assertion: assertNotNull(objectArray0[1]);
      
      boolean boolean0 = true;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      //  // Unstable assertion: assertTrue(boolean1);
      
      toStringStyle0.append(stringBuffer0, string0, objectArray0, boolean1);
      //  // Unstable assertion: assertFalse(string0.equals((Object)string1));
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertEquals(358, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(198, stringBuffer0.length());
      //  // Unstable assertion: assertNotSame(string0, string1);
      //  // Unstable assertion: assertNotSame(string1, string0);
  }

  @Test
  public void test59()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      int int0 = 309;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(309, stringBuffer0.capacity());
      
      String string0 = null;
      boolean boolean0 = false;
      long[] longArray0 = new long[1];
      Boolean boolean1 = new Boolean(boolean0);
      assertFalse(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, longArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(309, stringBuffer0.capacity());
      assertEquals(9, stringBuffer0.length());
      assertEquals("<size=1>,", stringBuffer0.toString());
      assertArrayEquals(new long[] {0L}, longArray0);
  }

  @Test
  public void test60()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      String string0 = standardToStringStyle0.getNullText();
      assertNotNull(string0);
      assertEquals("<null>", string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      assertNotNull(stringBuffer0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(22, stringBuffer0.capacity());
      assertEquals("<null>", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
      
      Object[] objectArray0 = new Object[7];
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, objectArray0, boolean0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(22, stringBuffer0.length());
      assertEquals(22, stringBuffer0.capacity());
      assertEquals("<null><null>=<size=7>,", stringBuffer0.toString());
  }

  @Test
  public void test61()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.setArrayContentDetail((boolean) boolean0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test
  public void test62()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      String string0 = "l&b%Hu(<y";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("l&b%Hu(<y", stringBuffer0.toString());
      assertEquals(25, stringBuffer0.capacity());
      
      char[] charArray0 = new char[2];
      boolean boolean0 = false;
      Boolean boolean1 = new Boolean(boolean0);
      assertFalse(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      standardToStringStyle0.append(stringBuffer0, string0, charArray0, boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("l&b%Hu(<yl&b%Hu(<y=<size=2>,", stringBuffer0.toString());
      assertEquals(52, stringBuffer0.capacity());
      assertEquals(28, stringBuffer0.length());
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test63()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle";
      char[] charArray0 = new char[10];
      standardToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, string0, charArray0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(34, stringBuffer0.capacity());
      assertEquals("{\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000}", stringBuffer0.toString());
      assertEquals(21, stringBuffer0.length());
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test64()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertNotNull(string0);
      assertEquals("]", string0);
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      
      int[] intArray0 = new int[3];
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, intArray0, boolean0);
      assertEquals("]=<size=3>,", stringBuffer0.toString());
      assertEquals(18, stringBuffer0.capacity());
      assertEquals(11, stringBuffer0.length());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test
  public void test65()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertTrue(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test66()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = "{=\"s$_r<Fr>{T6wL";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(32, stringBuffer0.capacity());
      assertEquals("{=\"s$_r<Fr>{T6wL", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
      
      double[] doubleArray0 = new double[9];
      Boolean boolean0 = new Boolean(string0);
      assertFalse(boolean0);
      
      standardToStringStyle0.append(stringBuffer0, string0, doubleArray0, boolean0);
      assertEquals(66, stringBuffer0.capacity());
      assertEquals(42, stringBuffer0.length());
      assertEquals("{=\"s$_r<Fr>{T6wL{=\"s$_r<Fr>{T6wL=<size=9>,", stringBuffer0.toString());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test
  public void test67()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      
      boolean boolean0 = true;
      standardToStringStyle0.setUseShortClassName(boolean0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
  }

  @Test
  public void test68()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertNotNull(string0);
      assertEquals("]", string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      
      char char0 = 'l';
      standardToStringStyle0.append(stringBuffer0, string0, char0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(6, stringBuffer0.capacity());
      assertEquals("]=l,", stringBuffer0.toString());
      assertEquals(4, stringBuffer0.length());
  }

  @Test
  public void test69()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      String string0 = "{=\"s$_r<Fr>{T6wL";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals("{=\"s$_r<Fr>{T6wL", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.capacity());
      assertEquals(16, stringBuffer0.length());
      
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) stringBuffer0);
      assertEquals(32, stringBuffer0.capacity());
      assertEquals("{=\"s$_r<Fr>{T6wL]", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test70()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertFalse(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(71, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", stringBuffer0.toString());
      assertEquals(87, stringBuffer0.capacity());
      
      standardToStringStyle0.append(stringBuffer0, string0, boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(176, stringBuffer0.capacity());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyleorg.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle=false,", stringBuffer0.toString());
      assertEquals(149, stringBuffer0.length());
  }

  @Test
  public void test71()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      boolean boolean0 = true;
      standardToStringStyle0.setDefaultFullDetail(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test
  public void test72()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      boolean boolean0 = false;
      standardToStringStyle0.setFieldSeparatorAtEnd(boolean0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test
  public void test73()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      assertNotNull(stringBuffer0);
      assertEquals(16, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      
      boolean boolean0 = false;
      String string0 = "C!";
      float[] floatArray0 = new float[7];
      standardToStringStyle0.append(stringBuffer0, string0, floatArray0, (Boolean) boolean0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(12, stringBuffer0.length());
      assertEquals("C!=<size=7>,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.capacity());
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test
  public void test74()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      String string0 = "{";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      assertNotNull(stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
      assertEquals("{", stringBuffer0.toString());
      
      double double0 = 1.0;
      standardToStringStyle0.append(stringBuffer0, string0, double0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{{=1.0,", stringBuffer0.toString());
      assertEquals(7, stringBuffer0.length());
      assertEquals(17, stringBuffer0.capacity());
  }

  @Test
  public void test75()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertNotNull(string0);
      assertEquals("<", string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test
  public void test76()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = "!+o{5]r.UOt\\1LFZ";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals(16, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("!+o{5]r.UOt\\1LFZ", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(32, stringBuffer0.capacity());
      
      short[] shortArray0 = new short[3];
      Boolean boolean0 = new Boolean(string0);
      //  // Unstable assertion: assertFalse(boolean0);
      
      toStringStyle0.append(stringBuffer0, string0, shortArray0, boolean0);
      //  // Unstable assertion: assertEquals(81, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("!+o{5]r.UOt\\1LFZ!+o{5]r.UOt\\1LFZFreeBSD!+o{5]r.UOt\\1LFZ3!+o{5]r.UOt\\1LFZO0-rAD\"/", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(134, stringBuffer0.capacity());
      //  // Unstable assertion: assertArrayEquals(new short[] {(short)0, (short)0, (short)0}, shortArray0);
  }

  @Test
  public void test77()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      int int0 = 309;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(309, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      
      String string0 = null;
      byte byte0 = (byte) (-98);
      standardToStringStyle0.append(stringBuffer0, string0, (short) byte0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(4, stringBuffer0.length());
      assertEquals(309, stringBuffer0.capacity());
      assertEquals("-98,", stringBuffer0.toString());
  }

  @Test
  public void test78()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string0 = toStringStyle0.getArrayStart();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h", string0);
      
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4h", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(13, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(29, stringBuffer0.capacity());
      
      boolean[] booleanArray0 = new boolean[7];
      toStringStyle0.append(stringBuffer0, string0, booleanArray0, (Boolean) booleanArray0[0]);
      //  // Unstable assertion: assertEquals("Fn~hR;Xu>M#4hfTWI`dQc7<null>{", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(29, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(29, stringBuffer0.capacity());
      //  // Unstable assertion: assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false}, booleanArray0));
  }

  @Test
  public void test79()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      StringBuffer stringBuffer0 = null;
      standardToStringStyle0.appendIdentityHashCode(stringBuffer0, stringBuffer0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
  }

  @Test
  public void test80()  throws Throwable  {
      String string0 = " eK";
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      //  // Unstable assertion: assertNotNull(toStringStyle0);
      
      String string1 = toStringStyle0.getArraySeparator();
      //  // Unstable assertion: assertNotNull(string1);
      //  // Unstable assertion: assertEquals("\\ ", string1);
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertNotSame(string1, string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string1);
      //  // Unstable assertion: assertNotNull(stringBuffer0);
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertEquals(18, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(2, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("\\ ", stringBuffer0.toString());
      //  // Unstable assertion: assertNotSame(string1, string0);
      
      Object[] objectArray0 = new Object[10];
      objectArray0[7] = (Object) stringBuffer0;
      //  // Unstable assertion: assertNotNull(objectArray0[7]);
      //  // Unstable assertion: assertEquals(18, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(2, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("\\ ", stringBuffer0.toString());
      
      boolean boolean0 = true;
      Boolean boolean1 = Boolean.valueOf(boolean0);
      //  // Unstable assertion: assertTrue(boolean1);
      
      toStringStyle0.append(stringBuffer0, string0, objectArray0, boolean1);
      //  // Unstable assertion: assertFalse(string0.equals((Object)string1));
      //  // Unstable assertion: assertFalse(string1.equals((Object)string0));
      //  // Unstable assertion: assertEquals("\\ 1.4>*?$)l}Zh!\\ >*?$)l}Zh!\\ >*?$)l}Zh!\\ >*?$)l}Zh!\\ >*?$)l}Zh!\\ >*?$)l}Zh!\\ >*?$)l}Zh!\\ K,$64dO~QZ-jStringBuffer eK\\ >*?$)l}Zh!\\ >*?$)l}Zh!Q;A1iBW\\? ", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(158, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(152, stringBuffer0.length());
      //  // Unstable assertion: assertNotSame(string0, string1);
      //  // Unstable assertion: assertNotSame(string1, string0);
  }

  @Test
  public void test81()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      String string0 = standardToStringStyle0.getContentEnd();
      assertNotNull(string0);
      assertEquals("]", string0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertNotNull(stringBuffer0);
      assertEquals(0, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
      
      byte byte0 = (byte)72;
      standardToStringStyle0.append(stringBuffer0, string0, byte0);
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(5, stringBuffer0.length());
      assertEquals(6, stringBuffer0.capacity());
      assertEquals("]=72,", stringBuffer0.toString());
  }

  @Test
  public void test82()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      assertFalse(boolean0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test
  public void test83()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      
      boolean boolean0 = true;
      standardToStringStyle0.setUseFieldNames(boolean0);
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
  }

  @Test
  public void test84()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test
  public void test85()  throws Throwable  {
      int int0 = 754;
      String string0 = "<size=";
      String string1 = Integer.toOctalString(int0);
      assertNotNull(string1);
      assertEquals("1362", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string1);
      assertNotNull(stringBuffer0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals("1362", stringBuffer0.toString());
      assertNotSame(string1, string0);
      
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertNotNull(standardToStringStyle0);
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.append(stringBuffer0, string0, (long) int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(15, stringBuffer0.length());
      assertEquals(20, stringBuffer0.capacity());
      assertEquals("1362<size==754,", stringBuffer0.toString());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(true, standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(true, standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(false, standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(true, standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(true, standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(false, standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(true, standardToStringStyle0.isArrayContentDetail());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }
}
