/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 15:38:53 GMT 2014
 */

package org.apache.commons.lang3;

import static org.junit.Assert.*; import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.Test;
import org.apache.commons.lang3.RandomStringUtils;




import org.junit.runner.RunWith;


public class RandomStringUtilsEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = 'u';
      charArray0[1] = char0;
      String string0 = RandomStringUtils.randomAscii((int) charArray0[1]);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', 'u', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals("                                                                                                                     ", string0);
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 1;
      char[] charArray0 = new char[2];
      String string0 = RandomStringUtils.random(int0, charArray0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
      assertEquals("\u0000", string0);
  }

  @Test
  public void test02() {}
//   @Test
//   public void test02()  throws Throwable  {
//       int int0 = 56319;
//       String string0 = "";
//       // Undeclared exception!
//       try {
//         String string1 = RandomStringUtils.random(int0, string0);
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
//       
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test03()  throws Throwable  {
      int int0 = (-1442);
      boolean boolean0 = false;
      // Undeclared exception!
      try {
        String string0 = RandomStringUtils.random(int0, int0, int0, boolean0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1442 is less than 0.
         //
      }
  }

  @Test
  public void test04() {}
//   @Test
//   public void test04()  throws Throwable  {
//       int int0 = 1;
//       boolean boolean0 = false;
//       char[] charArray0 = new char[2];
//       // Undeclared exception!
//       try {
//         String string0 = RandomStringUtils.random(int0, int0, int0, boolean0, boolean0, charArray0);
//         fail("Expecting exception: ArithmeticException");
//       
//       } catch(ArithmeticException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test05()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.randomAscii(int0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test06()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.randomAlphabetic(int0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test07()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
  }

  @Test
  public void test08()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.random(int0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test09()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.randomAlphanumeric(int0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.randomNumeric(int0);
      assertNotNull(string0);
      assertEquals("", string0);
  }
}
