/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 15:58:21 GMT 2014
 */

package org.apache.commons.lang;

import static org.junit.Assert.*;
import org.junit.Test;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;


public class EntitiesEvoSuite_branch_Test  {

  @Test
  public void test00()  throws Throwable  {
      String string0 = "m^<9a G?l%#ev6";
      Entities entities0 = Entities.HTML40;
      assertNotNull(entities0);
      
      MockFile mockFile0 = new MockFile(string0, string0);
      assertNotNull(mockFile0);
      
      boolean boolean0 = false;
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0, boolean0);
      assertNotNull(mockFileWriter0);
      
      entities0.unescape((Writer) mockFileWriter0, string0);
  }

  @Test
  public void test01()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      assertNotNull(charArrayWriter0);
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
      
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter((Writer) charArrayWriter0, boolean0);
      assertNotNull(mockPrintWriter0);
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
      
      String string0 = "!`3GIsT&1&;/@&";
      entities0.unescape((Writer) mockPrintWriter0, string0);
      assertEquals("!`3GIsT&1&;/@&", charArrayWriter0.toString());
      assertEquals(14, charArrayWriter0.size());
  }

  @Test
  public void test02()  throws Throwable  {
      Entities entities0 = Entities.XML;
      assertNotNull(entities0);
      
      String string0 = "nabla";
      String string1 = entities0.unescape(string0);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals("nabla", string1);
      assertNotNull(string1);
  }

  @Test
  public void test03()  throws Throwable  {
      String string0 = "m^<9a G?l%#ev6";
      Entities entities0 = Entities.HTML40;
      assertNotNull(entities0);
      
      MockFile mockFile0 = new MockFile(string0, string0);
      assertNotNull(mockFile0);
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter((File) mockFile0);
      assertNotNull(mockPrintWriter0);
      
      entities0.escape((Writer) mockPrintWriter0, string0);
  }

  @Test
  public void test04()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      assertNotNull(entities_HashEntityMap0);
      
      char char0 = 'S';
      String string0 = entities_HashEntityMap0.name((int) char0);
      assertNull(string0);
      
      Entities entities0 = Entities.XML;
      assertNotNull(entities0);
      
      entities0.addEntity(string0, (int) char0);
  }

  @Test
  public void test05()  throws Throwable  {
      String string0 = "q@jGs?^EQ&!_;w@;";
      int int0 = 13;
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(int0);
      assertNotNull(entities_BinaryEntityMap0);
      
      entities_BinaryEntityMap0.add(string0, int0);
      int int1 = entities_BinaryEntityMap0.value(string0);
      assertEquals(13, int1);
      assertTrue(int1 == int0);
      assertTrue(int0 == int1);
  }

  @Test
  public void test06()  throws Throwable  {
      String string0 = "q@jGs?^EQ&!_;w@;";
      int int0 = 13;
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(int0);
      assertNotNull(entities_BinaryEntityMap0);
      
      int int1 = entities_BinaryEntityMap0.value(string0);
      assertEquals((-1), int1);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = 0;
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(int0);
      assertNotNull(entities_ArrayEntityMap0);
      
      String string0 = entities_ArrayEntityMap0.name(int0);
      assertNull(string0);
      
      entities_ArrayEntityMap0.add(string0, int0);
      String string1 = entities_ArrayEntityMap0.name(int0);
      assertNull(string1);
  }

  @Test
  public void test08()  throws Throwable  {
      int int0 = 117;
      String string0 = ",elleal LoakUd: ";
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      assertNotNull(entities_TreeEntityMap0);
      
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      assertNotNull(entities_LookupEntityMap0);
      
      entities_TreeEntityMap0.add(string0, int0);
      int int1 = entities_TreeEntityMap0.value(string0);
      assertEquals(117, int1);
      assertTrue(int1 == int0);
      
      String string1 = entities_LookupEntityMap0.name(int1);
      assertTrue(int1 == int0);
      assertNull(string1);
      
      String string2 = entities_LookupEntityMap0.name(int0);
      assertTrue(int0 == int1);
      assertNull(string2);
  }

  @Test
  public void test09()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      assertNotNull(entities_LookupEntityMap0);
      
      int int0 = 1855;
      String string0 = entities_LookupEntityMap0.name(int0);
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      assertNotNull(entities_HashEntityMap0);
      
      String string0 = "q@jrGs^T1&O;/w@;";
      int int0 = entities_HashEntityMap0.value(string0);
      assertEquals((-1), int0);
  }

  @Test
  public void test11()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "q@jGs?^EQ&!_;w@;";
      String string1 = entities0.unescape(string0);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("q@jGs?^EQ&!_;w@;", string1);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string0.equals((Object)string1));
      assertNotNull(string1);
  }

  @Test
  public void test12()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      assertNotNull(entities_BinaryEntityMap0);
  }

  @Test
  public void test13()  throws Throwable  {
      Entities entities0 = Entities.XML;
      //  // Unstable assertion: assertNotNull(entities0);
      
      String string0 = "nabla";
      // Undeclared exception!
      try {
        int int0 = entities0.entityValue(string0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // StringEquals is not supposed to work on a null caller
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test
  public void test15()  throws Throwable  {
      Entities entities0 = Entities.XML;
      assertNotNull(entities0);
      
      String string0 = "!UlpYl$\\rJ[941*uW";
      String string1 = entities0.escape(string0);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("!UlpYl$\\rJ[941*uW", string1);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string0.equals((Object)string1));
      assertNotNull(string1);
  }
}
