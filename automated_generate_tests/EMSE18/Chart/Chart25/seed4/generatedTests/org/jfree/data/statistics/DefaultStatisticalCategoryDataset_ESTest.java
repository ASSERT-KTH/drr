/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 01:12:39 GMT 2017
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;
import javax.swing.JLayeredPane;
import javax.swing.SpinnerNumberModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.Range;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.Second;
import org.jfree.data.time.SimpleTimePeriod;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataItem;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultStatisticalCategoryDataset_ESTest extends DefaultStatisticalCategoryDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Number number0 = defaultStatisticalCategoryDataset0.getValue((Comparable) null, (Comparable) "}'Z[i");
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue(0, 999);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) null, (Comparable) millisecond0, (Comparable) millisecond0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getValue((Comparable) millisecond0, (Comparable) millisecond0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel(1918128707, 1918128707, 1918128707, 1918128707);
      Comparable comparable0 = spinnerNumberModel0.getMinimum();
      defaultStatisticalCategoryDataset0.add((Number) 1918128707, (Number) 1918128707, (Comparable) comparable0, (Comparable) comparable0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getValue(comparable0, comparable0);
      assertEquals(1918128707, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 999, (Number) 0, (Comparable) millisecond0, (Comparable) millisecond0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getValue((Comparable) millisecond0, (Comparable) millisecond0);
      assertEquals(999, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      Double double0 = new Double((double) 22);
      Year year0 = new Year();
      defaultStatisticalCategoryDataset0.add((Number) double0, (Number) double0, (Comparable) year0, (Comparable) xYDataItem0);
      Double double1 = (Double)defaultStatisticalCategoryDataset0.getValue(0, 0);
      assertEquals(22.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(1191.009, (double) (byte)0, (Comparable) "", (Comparable) (byte)76);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) "", (Comparable) (byte)76);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Day day0 = new Day();
      defaultStatisticalCategoryDataset0.add(Double.NaN, Double.NaN, (Comparable) day0, (Comparable) day0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) day0, (Comparable) day0);
      assertEquals(Double.NaN, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) millisecond0.LAST_MILLISECOND_IN_SECOND, (Number) 999, (Comparable) millisecond0, (Comparable) millisecond0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) millisecond0, (Comparable) millisecond0);
      assertEquals(999, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      Year year0 = new Year();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) year0, (Comparable) xYDataItem0);
      Number number0 = defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(3030, 23, 3030);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) integer0, (Number) integer0, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      Integer integer1 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue(1, 1);
      assertEquals((-30000), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) null, (Comparable) millisecond0, (Comparable) millisecond0);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getRowKey(0);
      assertNotNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) null, (Comparable) millisecond0, (Comparable) millisecond0);
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex(millisecond0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(2026, 2026, 2026, 3030, 23);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex(simpleTimePeriod0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      Float float0 = new Float((double) 0);
      Year year0 = new Year();
      defaultStatisticalCategoryDataset0.add((Number) float0, (Number) float0, (Comparable) year0, (Comparable) xYDataItem0);
      int int0 = defaultStatisticalCategoryDataset0.getRowCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, (-1.0), (Comparable) null, (Comparable) null);
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(false);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Minute minute0 = new Minute();
      Second second0 = new Second((-1328), minute0);
      defaultStatisticalCategoryDataset0.add((-2312.8706), Double.NEGATIVE_INFINITY, (Comparable) null, (Comparable) second0);
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
      assertEquals((-2312.8706), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) 1213421088, (Comparable) null, (Comparable) null);
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      MockDate mockDate0 = (MockDate)millisecond0.getEnd();
      defaultStatisticalCategoryDataset0.add((-625.519877084901), (double) 999, (Comparable) mockDate0, (Comparable) millisecond0);
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals((-625.519877084901), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 999, (Number) 0, (Comparable) millisecond0, (Comparable) millisecond0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertEquals(999.0, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Minute minute0 = new Minute();
      Second second0 = new Second((-1328), minute0);
      defaultStatisticalCategoryDataset0.add((-2312.8706), Double.NEGATIVE_INFINITY, (Comparable) null, (Comparable) second0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertNotNull(range0);
      assertEquals((-2312.8706), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(2039, 2039, 2039, 3030, 23);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) simpleTimePeriod0, (Comparable) quarter0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) simpleTimePeriod0, (Comparable) quarter0);
      assertEquals(4, (int)integer0);
      assertNotNull(integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 999, (Number) null, (Comparable) millisecond0, (Comparable) millisecond0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) millisecond0, (Comparable) millisecond0);
      assertEquals(999, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Year year0 = new Year();
      defaultStatisticalCategoryDataset0.add((Number) 1093812784, (Number) null, (Comparable) year0, (Comparable) year0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue(0, 0);
      assertEquals(1093812784, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(6060.0, 0.0, (Comparable) null, (Comparable) null);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getColumnKey(0);
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(3030, 10, 3030);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) quarter0.LAST_QUARTER, (Number) quarter0.LAST_QUARTER, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getColumnKey(1);
      assertNotNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem((double) 24, 1994.69698031);
      defaultStatisticalCategoryDataset0.add((Number) (byte)16, (Number) 24, (Comparable) xYDataItem0, (Comparable) xYDataItem0);
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex(xYDataItem0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(2026, 2026, 2026, 3030, 23);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex(mockDate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 13, (Number) 1633842036, (Comparable) "!s`y/@)5}xiD7W}VT0'", (Comparable) "!s`y/@)5}xiD7W}VT0'");
      int int0 = defaultStatisticalCategoryDataset0.getColumnCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 1178815570, (Number) 1093812785, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getValue((-472), (-472));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1001, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue(0, 1886610482);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue((-817), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRowKey((-1504));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Minute minute0 = new Minute();
      Second second0 = new Second((-1328), minute0);
      defaultStatisticalCategoryDataset0.add((-2312.8706), Double.NEGATIVE_INFINITY, (Comparable) null, (Comparable) second0);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRangeBounds(true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (Infinity) <= upper (-Infinity).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(6060.0, 0.0, (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue(304, 59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 304, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getMeanValue((-241), 562);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getColumnKey((-567));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-1.0), (-1.0), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.add((Number) 1110589746, (Number) 16, (Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.0, (-1.0), (Comparable) null, (Comparable) null);
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.add((-1.0), (double) 12, (Comparable) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.KeyedObjects", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      Number number0 = defaultStatisticalCategoryDataset0.getMeanValue((Comparable) xYDataItem0, (Comparable) xYDataItem0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(2026, 2026, 2026, 3030, 23);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getMeanValue(0, 1);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Day day0 = new Day();
      defaultStatisticalCategoryDataset0.add(Double.NaN, 0.714, (Comparable) day0, (Comparable) day0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getMeanValue(0, 0);
      assertEquals(Double.NaN, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset1.add(0.0, (-1.0), (Comparable) null, (Comparable) null);
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(defaultStatisticalCategoryDataset1);
      assertFalse(defaultStatisticalCategoryDataset1.equals((Object)defaultStatisticalCategoryDataset0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(defaultStatisticalCategoryDataset1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(defaultStatisticalCategoryDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      boolean boolean0 = defaultStatisticalCategoryDataset0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) null, (Comparable) millisecond0, (Comparable) millisecond0);
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.0, range0.getLength(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 13, (Number) 1633842036, (Comparable) "!s`y/@)5}xiD7W}VT0'", (Comparable) "!s`y/@)5}xiD7W}VT0'");
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(true);
      assertEquals(13.0, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
      assertEquals(1.633842049E9, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(3030, 23, 3030);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) simpleTimePeriod0, (Comparable) quarter0);
      assertEquals(93730694400000L, quarter0.getFirstMillisecond());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(3030, 2026, 3030);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      Integer integer0 = new Integer(3030);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) integer0, (Number) integer0, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      Integer integer1 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue(1, 1);
      assertEquals(3030, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(3030, 23, 3030);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      Quarter quarter0 = new Quarter((Date) mockDate0, (TimeZone) zoneInfo0);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(0L, (long) 4);
      defaultStatisticalCategoryDataset0.add((Number) 4, (Number) 1, (Comparable) quarter0, (Comparable) simpleTimePeriod0);
      defaultStatisticalCategoryDataset0.add((Number) quarter0.LAST_QUARTER, (Number) quarter0.LAST_QUARTER, (Comparable) simpleTimePeriod0, (Comparable) mockDate0);
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue(1, 1);
      assertEquals(4, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) null, (Number) null, (Comparable) null, (Comparable) null);
      Comparable comparable0 = defaultStatisticalCategoryDataset0.getRowKey(0);
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 13, (Number) 1633842036, (Comparable) "!s`y/@)5}xiD7W}VT0'", (Comparable) "!s`y/@)5}xiD7W}VT0'");
      Integer integer0 = (Integer)defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) "!s`y/@)5}xiD7W}VT0'", (Comparable) "!s`y/@)5}xiD7W}VT0'");
      assertEquals(1633842036, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Number number0 = defaultStatisticalCategoryDataset0.getStdDevValue((Comparable) null, (Comparable) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      Float float0 = new Float((double) 0);
      Year year0 = new Year();
      defaultStatisticalCategoryDataset0.add((Number) float0, (Number) float0, (Comparable) year0, (Comparable) xYDataItem0);
      Float float1 = (Float)defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      Float float0 = new Float((double) 0);
      Year year0 = new Year();
      defaultStatisticalCategoryDataset0.add((Number) float0, (Number) float0, (Comparable) year0, (Comparable) xYDataItem0);
      Float float1 = (Float)defaultStatisticalCategoryDataset0.getValue(0, 0);
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(6060.0, 0.0, (Comparable) null, (Comparable) null);
      Number number0 = defaultStatisticalCategoryDataset0.getValue(0, 0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double double0 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Day day0 = new Day();
      defaultStatisticalCategoryDataset0.add(Double.NaN, Double.NaN, (Comparable) day0, (Comparable) day0);
      Double double0 = (Double)defaultStatisticalCategoryDataset0.getMeanValue((Comparable) day0, (Comparable) day0);
      assertEquals(Double.NaN, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getRowKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      double double0 = defaultStatisticalCategoryDataset0.getRangeUpperBound(false);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      List list0 = defaultStatisticalCategoryDataset0.getColumnKeys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getColumnKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      List list0 = defaultStatisticalCategoryDataset0.getRowKeys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = defaultStatisticalCategoryDataset0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 0.0);
      int int0 = defaultStatisticalCategoryDataset0.getColumnIndex(xYDataItem0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Millisecond millisecond0 = new Millisecond();
      int int0 = defaultStatisticalCategoryDataset0.getRowIndex(millisecond0);
      assertEquals((-1), int0);
  }
}
