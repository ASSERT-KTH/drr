/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 22:21:17 GMT 2017
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JViewport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PiePlot3D_ESTest extends PiePlot3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, 99989.44277588605, (double) 1, 0);
      Area area0 = new Area();
      JSeparator jSeparator0 = new JSeparator();
      JScrollPane jScrollPane0 = new JScrollPane((Component) jSeparator0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      arc2D_Float0.setAngleStart((Point2D) point0);
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      assertFalse(piePlot3D0.getDarkerSides());
      
      piePlot3D0.setDarkerSides(true);
      assertTrue(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      
      piePlot3D0.setDepthFactor((byte)0);
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setDepthFactor((byte) (-95));
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals((-95.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, piePlot3D0.DEFAULT_LABEL_FONT, (Plot) piePlot3D0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartRenderingInfo0.getChartArea();
      Area area0 = new Area();
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      // Undeclared exception!
      try { 
        piePlot3D0.drawSide((Graphics2D) null, rectangle2D_Double0, (Arc2D) null, area0, area0, color0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, basicStroke0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      boolean boolean0 = piePlot3D0.getDarkerSides();
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) defaultPieDataset0);
      PiePlot3D piePlot3D1 = new PiePlot3D((PieDataset) null);
      boolean boolean0 = piePlot3D0.equals(piePlot3D1);
      assertTrue(boolean0);
      assertFalse(piePlot3D1.isCircular());
      assertEquals(0.12, piePlot3D1.getDepthFactor(), 0.01);
      assertFalse(piePlot3D1.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      boolean boolean0 = piePlot3D0.equals(piePlot3D0);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertTrue(boolean0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      boolean boolean0 = piePlot3D0.equals(rectangle2D_Float0);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(boolean0);
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((float) 10, (float) 10, (float) 10, 1.0F);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2255, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, (double) 0.5F, 1421.93021, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertEquals(255, sunGraphics2D0.pixel);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, 99989.44277588605, (double) 1, 0);
      Area area0 = new Area();
      arc2D_Float0.start = (float) 10;
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((float) 10, (float) 10, (float) 10, 1.0F);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2255, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, (double) 0.5F, 1421.93021, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2255, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, 100000.0, 1421.93021, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2255, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, 100000.0, (double) 1, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2255, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, 100000.0, 1421.93021, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertEquals((-8355712), sunGraphics2D0.eargb);
      assertEquals(128, sunGraphics2D0.pixel);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      arc2D_Float0.setArc((Rectangle2D) rectangle2D_Float0, 99989.44277588605, (double) 1, 0);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      PiePlot3D piePlot3D0 = new PiePlot3D();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2246, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, (-2916.1438F));
      arc2D_Float0.setArcByTangent(point2D_Float0, point2D_Float0, point2D_Float0, 10);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, true, true);
      assertEquals((-8355712), sunGraphics2D0.eargb);
      assertEquals(128, sunGraphics2D0.pixel);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      PiePlot3D piePlot3D0 = new PiePlot3D();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2246, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, (-2916.1438F));
      arc2D_Float0.setArcByTangent(point2D_Float0, point2D_Float0, point2D_Float0, 10);
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.getDarkerSides());
      assertEquals((-1), sunGraphics2D0.eargb);
      assertFalse(piePlot3D0.isCircular());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) piePlot3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 8658, (-1540.527921), 0.12, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) taskSeriesCollection0, tableOrder0);
      Point2D.Double point2D_Double0 = (Point2D.Double)spiderWebPlot0.getWebPoint(rectangle2D_Double0, 0.0, 0.0);
      PlotState plotState0 = new PlotState();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        piePlot3D0.draw((Graphics2D) null, rectangle2D_Double0, point2D_Double0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      Point2D.Double point2D_Double0 = (Point2D.Double)RectangleAnchor.coordinates(rectangle0, (RectangleAnchor) null);
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        piePlot3D0.draw((Graphics2D) null, rectangle0, point2D_Double0, plotState0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, 10, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      Area area0 = new Area();
      piePlot3D0.drawSide(sunGraphics2D0, rectangle2D_Double0, arc2D_Float0, area0, area0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, false, false);
      assertFalse(piePlot3D0.getDarkerSides());
      assertFalse(piePlot3D0.isCircular());
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getPlotType();
      assertEquals(0.12, piePlot3D0.getDepthFactor(), 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      double double0 = piePlot3D0.getDepthFactor();
      assertEquals(0.12, double0, 0.01);
      assertFalse(piePlot3D0.isCircular());
      assertFalse(piePlot3D0.getDarkerSides());
  }
}
