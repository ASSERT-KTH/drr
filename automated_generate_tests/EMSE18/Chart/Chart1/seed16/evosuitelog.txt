* EvoSuite 1.0.4-SNAPSHOT
* Going to generate test cases for class: org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Starting client
* Connecting to master process on port 15940
* Analyzing classpath: 
  - /tmp/chart_1_Genprog_local_s1/lib/
  - /tmp/chart_1_Genprog_local_s1/lib/servlet.jar
  - /tmp/chart_1_Genprog_local_s1/lib/jtestex-0.0.1.jar
  - /tmp/chart_1_Genprog_local_s1/lib/cobertura-2.0.3.jar
  - /tmp/chart_1_Genprog_local_s1/lib/junit.jar
  - /tmp/chart_1_Genprog_local_s1/lib/junit-4.11.jar
  - /tmp/chart_1_Genprog_local_s1/lib/iText-2.1.4.jar
  - /tmp/chart_1_Genprog_local_s1/lib/fixran-0.0.1.jar
  - /tmp/chart_1_Genprog_local_s1/./outputMutation/AstorMain-Chart/bin/default/
[MASTER] 23:57:22.229 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
[MASTER] 23:57:22.230 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 519
  - Branch 274
  - Exception 0
  - MutationFactory 783
  - Output 340
  - Method 65
  - MethodNoException 65
  - CBranchFitnessFactory 274

[Progress:>                             0%] [Cov:>                                  0%]* Using seed 16
* Starting evolution

[Progress:>                             0%] [Cov:====>                              12%]
[Progress:>                             0%] [Cov:====>                              14%]
[Progress:>                             0%] [Cov:=====>                             15%]
[Progress:>                             1%] [Cov:>                                  1%]
[Progress:>                             1%] [Cov:====>                              14%]
[Progress:>                             1%] [Cov:=====>                             15%]
[Progress:>                             2%] [Cov:>                                  0%]
[Progress:>                             2%] [Cov:====>                              13%]
[Progress:>                             3%] [Cov:>                                  0%]
[Progress:>                             3%] [Cov:>                                  1%]
[Progress:>                             3%] [Cov:====>                              14%]
[Progress:>                             3%] [Cov:=====>                             15%]
[Progress:>                             3%] [Cov:=====>                             16%]
[Progress:>                             3%] [Cov:============>                      35%]
[Progress:=>                            4%] [Cov:===========>                       34%]
[Progress:=>                            4%] [Cov:============>                      35%]
[Progress:=>                            4%] [Cov:============>                      35%]
[Progress:=>                            4%] [Cov:============>                      36%]
[Progress:=>                            5%] [Cov:============>                      35%]
[Progress:=>                            5%] [Cov:============>                      36%]
[Progress:=>                            5%] [Cov:============>                      36%][MASTER] 23:57:49.727 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.MarshalException: error marshalling arguments; nested exception is: 
	java.net.SocketException: Broken pipe
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:158) ~[na:1.8.0_45]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:194) ~[na:1.8.0_45]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:148) ~[na:1.8.0_45]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:237) ~[evosuite-master-1.0.4-SNAPSHOT.jar:1.0.4-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite-master-1.0.4-SNAPSHOT.jar:1.0.4-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener$1.run(StatisticsListener.java:71) [evosuite-master-1.0.4-SNAPSHOT.jar:1.0.4-SNAPSHOT]
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method) ~[na:1.8.0_45]
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109) ~[na:1.8.0_45]
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153) ~[na:1.8.0_45]
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_45]
	at java.io.BufferedOutputStream.write(BufferedOutputStream.java:126) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream$BlockDataOutputStream.drain(ObjectOutputStream.java:1877) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream$BlockDataOutputStream.setBlockDataMode(ObjectOutputStream.java:1786) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream.writeNonProxyDesc(ObjectOutputStream.java:1286) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream.writeClassDesc(ObjectOutputStream.java:1231) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1427) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream.writeFatalException(ObjectOutputStream.java:1577) ~[na:1.8.0_45]
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:351) ~[na:1.8.0_45]
	at sun.rmi.server.UnicastRef.marshalValue(UnicastRef.java:294) ~[na:1.8.0_45]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:153) ~[na:1.8.0_45]
	... 6 common frames omitted

[Progress:=>                            5%] [Cov:============>                      36%]
[Progress:=>                            5%] [Cov:============>                      37%]
[Progress:=>                            6%] [Cov:============>                      37%]
[Progress:=>                            6%] [Cov:=============>                     38%]
[Progress:=>                            6%] [Cov:=============>                     38%]
[Progress:==>                           7%] [Cov:============>                      37%]
[Progress:==>                           7%] [Cov:=============>                     38%]
[Progress:==>                           7%] [Cov:=============>                     38%]
[Progress:==>                           7%] [Cov:=============>                     38%]
[Progress:==>                           8%] [Cov:=============>                     38%]
[Progress:==>                           8%] [Cov:=============>                     38%]
[Progress:==>                           8%] [Cov:=============>                     38%]
[Progress:==>                           8%] [Cov:=============>                     38%]
[Progress:==>                           9%] [Cov:=============>                     38%]
[Progress:==>                           9%] [Cov:=============>                     38%]
[Progress:==>                           9%] [Cov:=============>                     39%]
[Progress:===>                          10%] [Cov:=============>                     38%]
[Progress:===>                          10%] [Cov:=============>                     39%]
[Progress:===>                          10%] [Cov:=============>                     39%]
[Progress:===>                          10%] [Cov:=============>                     39%]
[Progress:===>                          11%] [Cov:=============>                     39%]
[Progress:===>                          11%] [Cov:=============>                     39%]
[Progress:===>                          11%] [Cov:=============>                     39%]
[Progress:===>                          11%] [Cov:=============>                     39%]
[Progress:===>                          12%] [Cov:=============>                     39%]
[Progress:===>                          12%] [Cov:=============>                     39%]
[Progress:===>                          12%] [Cov:==============>                    40%]
[Progress:===>                          12%] [Cov:==============>                    40%]
[Progress:===>                          13%] [Cov:==============>                    40%]
[Progress:===>                          13%] [Cov:==============>                    40%]
[Progress:===>                          13%] [Cov:==============>                    41%]
[Progress:====>                         14%] [Cov:==============>                    40%]
[Progress:====>                         14%] [Cov:==============>                    41%]
[Progress:====>                         14%] [Cov:==============>                    41%]
[Progress:====>                         14%] [Cov:==============>                    41%]
[Progress:====>                         15%] [Cov:==============>                    41%]
[Progress:====>                         15%] [Cov:==============>                    42%]
[Progress:====>                         15%] [Cov:==============>                    42%]
[Progress:====>                         15%] [Cov:==============>                    42%]
[Progress:====>                         16%] [Cov:==============>                    42%]
[Progress:====>                         16%] [Cov:==============>                    42%]
[Progress:=====>                        17%] [Cov:==============>                    42%]
[Progress:=====>                        17%] [Cov:==============>                    42%]
[Progress:=====>                        17%] [Cov:==============>                    42%]
[Progress:=====>                        18%] [Cov:==============>                    42%]
[Progress:=====>                        18%] [Cov:==============>                    42%]
[Progress:=====>                        19%] [Cov:==============>                    42%]
[Progress:=====>                        19%] [Cov:==============>                    42%]
[Progress:======>                       20%] [Cov:==============>                    42%]
[Progress:======>                       20%] [Cov:==============>                    42%]
[Progress:======>                       20%] [Cov:==============>                    42%]
[Progress:======>                       21%] [Cov:==============>                    42%]
[Progress:======>                       21%] [Cov:==============>                    42%]
[Progress:======>                       21%] [Cov:==============>                    42%]
[Progress:======>                       22%] [Cov:==============>                    42%]
[Progress:======>                       22%] [Cov:===============>                   43%]
[Progress:======>                       23%] [Cov:===============>                   43%]
[Progress:======>                       23%] [Cov:===============>                   43%]
[Progress:=======>                      24%] [Cov:==============>                    42%]
[Progress:=======>                      24%] [Cov:===============>                   43%]
[Progress:=======>                      24%] [Cov:===============>                   43%]
[Progress:=======>                      24%] [Cov:===============>                   43%]
[Progress:=======>                      25%] [Cov:===============>                   43%]
[Progress:=======>                      25%] [Cov:===============>                   43%]
[Progress:=======>                      26%] [Cov:===============>                   43%]
[Progress:=======>                      26%] [Cov:===============>                   43%]
[Progress:=======>                      26%] [Cov:===============>                   43%]
[Progress:========>                     27%] [Cov:===============>                   43%]
[Progress:========>                     27%] [Cov:===============>                   43%]
[Progress:========>                     28%] [Cov:==============>                    42%]
[Progress:========>                     28%] [Cov:===============>                   43%]
[Progress:========>                     28%] [Cov:===============>                   43%]
[Progress:========>                     28%] [Cov:===============>                   43%]
[Progress:========>                     29%] [Cov:===============>                   43%]
[Progress:========>                     29%] [Cov:===============>                   43%]
[Progress:=========>                    30%] [Cov:==============>                    42%]
[Progress:=========>                    30%] [Cov:===============>                   43%]
[Progress:=========>                    30%] [Cov:===============>                   43%]
[Progress:=========>                    31%] [Cov:===============>                   43%]
[Progress:=========>                    31%] [Cov:===============>                   43%]
[Progress:=========>                    31%] [Cov:===============>                   43%]
[Progress:=========>                    32%] [Cov:===============>                   43%]
[Progress:=========>                    32%] [Cov:===============>                   43%]
[Progress:=========>                    33%] [Cov:===============>                   43%]
[Progress:=========>                    33%] [Cov:===============>                   43%]
[Progress:==========>                   34%] [Cov:===============>                   43%]
[Progress:==========>                   34%] [Cov:===============>                   43%]
[Progress:==========>                   34%] [Cov:===============>                   43%]
[Progress:==========>                   35%] [Cov:===============>                   43%]
[Progress:==========>                   35%] [Cov:===============>                   44%]
[Progress:==========>                   35%] [Cov:===============>                   44%]
[Progress:==========>                   36%] [Cov:===============>                   44%]
[Progress:==========>                   36%] [Cov:===============>                   45%]
[Progress:===========>                  37%] [Cov:===============>                   44%]
[Progress:===========>                  37%] [Cov:===============>                   45%]
[Progress:===========>                  37%] [Cov:===============>                   45%]
[Progress:===========>                  38%] [Cov:===============>                   45%]
[Progress:===========>                  38%] [Cov:===============>                   45%]
[Progress:===========>                  39%] [Cov:===============>                   45%]
[Progress:===========>                  39%] [Cov:================>                  46%]
[Progress:===========>                  39%] [Cov:================>                  46%]
[Progress:============>                 40%] [Cov:================>                  46%]
[Progress:============>                 40%] [Cov:================>                  46%]
[Progress:============>                 41%] [Cov:================>                  46%]
[Progress:============>                 41%] [Cov:================>                  46%]
[Progress:============>                 41%] [Cov:================>                  46%]
[Progress:============>                 42%] [Cov:================>                  46%]
[Progress:============>                 42%] [Cov:================>                  46%]
[Progress:============>                 43%] [Cov:================>                  46%]
[Progress:============>                 43%] [Cov:================>                  46%]
[Progress:============>                 43%] [Cov:================>                  46%]
[Progress:=============>                44%] [Cov:================>                  46%]
[Progress:=============>                44%] [Cov:================>                  46%]
[Progress:=============>                45%] [Cov:================>                  46%]
[Progress:=============>                45%] [Cov:================>                  46%]
[Progress:=============>                45%] [Cov:================>                  46%]
[Progress:=============>                46%] [Cov:================>                  46%]
[Progress:=============>                46%] [Cov:================>                  46%]
[Progress:==============>               47%] [Cov:================>                  46%]
[Progress:==============>               47%] [Cov:================>                  46%]
[Progress:==============>               48%] [Cov:================>                  46%]
[Progress:==============>               48%] [Cov:================>                  47%]
[Progress:==============>               48%] [Cov:================>                  47%]
[Progress:==============>               49%] [Cov:================>                  47%]
[Progress:==============>               49%] [Cov:================>                  47%]
[Progress:===============>              50%] [Cov:================>                  47%]
[Progress:===============>              50%] [Cov:================>                  47%]
[Progress:===============>              50%] [Cov:================>                  47%]
[Progress:===============>              51%] [Cov:================>                  47%]
[Progress:===============>              51%] [Cov:================>                  47%]
[Progress:===============>              52%] [Cov:================>                  47%]
[Progress:===============>              52%] [Cov:================>                  47%]
[Progress:===============>              53%] [Cov:================>                  47%]
[Progress:===============>              53%] [Cov:================>                  47%]
[Progress:================>             54%] [Cov:================>                  47%]
[Progress:================>             54%] [Cov:================>                  47%]
[Progress:================>             54%] [Cov:================>                  47%]
[Progress:================>             55%] [Cov:================>                  47%]
[Progress:================>             55%] [Cov:================>                  47%]
[Progress:================>             56%] [Cov:================>                  47%]
[Progress:================>             56%] [Cov:================>                  48%]
[Progress:================>             56%] [Cov:================>                  48%]
[Progress:=================>            57%] [Cov:================>                  48%]
[Progress:=================>            57%] [Cov:================>                  48%]
[Progress:=================>            58%] [Cov:================>                  48%]
[Progress:=================>            58%] [Cov:================>                  48%]
[Progress:=================>            58%] [Cov:================>                  48%]
[Progress:=================>            59%] [Cov:================>                  48%]
[Progress:=================>            59%] [Cov:=================>                 49%]
[Progress:==================>           60%] [Cov:================>                  48%]
[Progress:==================>           60%] [Cov:=================>                 49%]
[Progress:==================>           60%] [Cov:=================>                 49%]
[Progress:==================>           61%] [Cov:=================>                 49%]
[Progress:==================>           61%] [Cov:=================>                 49%]
[Progress:==================>           62%] [Cov:=================>                 49%]
[Progress:==================>           62%] [Cov:=================>                 49%]
[Progress:==================>           62%] [Cov:=================>                 49%]
[Progress:==================>           63%] [Cov:=================>                 49%]
[Progress:==================>           63%] [Cov:=================>                 49%]
[Progress:===================>          64%] [Cov:=================>                 49%]
[Progress:===================>          64%] [Cov:=================>                 49%]
[Progress:===================>          65%] [Cov:=================>                 49%]
[Progress:===================>          65%] [Cov:=================>                 49%]
[Progress:===================>          66%] [Cov:=================>                 49%]
[Progress:===================>          66%] [Cov:=================>                 49%]
[Progress:====================>         67%] [Cov:=================>                 49%]
[Progress:====================>         67%] [Cov:=================>                 49%]
[Progress:====================>         67%] [Cov:=================>                 49%]
[Progress:====================>         68%] [Cov:=================>                 49%]
[Progress:====================>         68%] [Cov:=================>                 49%]
[Progress:====================>         69%] [Cov:=================>                 49%]
[Progress:====================>         69%] [Cov:=================>                 49%]
[Progress:====================>         69%] [Cov:=================>                 49%]
[Progress:=====================>        70%] [Cov:=================>                 49%]
[Progress:=====================>        70%] [Cov:=================>                 49%]
[Progress:=====================>        71%] [Cov:=================>                 49%]
[Progress:=====================>        71%] [Cov:=================>                 49%]
[Progress:=====================>        72%] [Cov:=================>                 49%]
[Progress:=====================>        72%] [Cov:=================>                 49%]
[Progress:=====================>        72%] [Cov:=================>                 49%]
[Progress:=====================>        73%] [Cov:=================>                 49%]
[Progress:=====================>        73%] [Cov:=================>                 49%]
[Progress:======================>       74%] [Cov:=================>                 49%]
[Progress:======================>       74%] [Cov:=================>                 49%]
[Progress:======================>       75%] [Cov:=================>                 49%]
[Progress:======================>       75%] [Cov:=================>                 49%]
[Progress:======================>       75%] [Cov:=================>                 49%]
[Progress:======================>       76%] [Cov:=================>                 49%]
[Progress:======================>       76%] [Cov:=================>                 49%]
[Progress:=======================>      77%] [Cov:=================>                 49%]
[Progress:=======================>      77%] [Cov:=================>                 49%]
[Progress:=======================>      78%] [Cov:=================>                 49%]
[Progress:=======================>      78%] [Cov:=================>                 49%]
[Progress:=======================>      78%] [Cov:=================>                 49%]
[Progress:=======================>      79%] [Cov:=================>                 49%]
[Progress:=======================>      79%] [Cov:=================>                 49%]
[Progress:========================>     80%] [Cov:=================>                 49%]
[Progress:========================>     80%] [Cov:=================>                 49%]
[Progress:========================>     81%] [Cov:=================>                 49%]
[Progress:========================>     81%] [Cov:=================>                 49%]
[Progress:========================>     82%] [Cov:=================>                 49%]
[Progress:========================>     82%] [Cov:=================>                 49%]
[Progress:========================>     82%] [Cov:=================>                 50%]
[Progress:========================>     82%] [Cov:=================>                 50%]
[Progress:========================>     83%] [Cov:=================>                 50%]
[Progress:========================>     83%] [Cov:=================>                 50%]
[Progress:=========================>    84%] [Cov:=================>                 50%]
[Progress:=========================>    84%] [Cov:=================>                 50%]
[Progress:=========================>    84%] [Cov:=================>                 50%]
[Progress:=========================>    85%] [Cov:=================>                 50%]
[Progress:=========================>    85%] [Cov:=================>                 50%]
[Progress:=========================>    86%] [Cov:=================>                 50%]
[Progress:=========================>    86%] [Cov:=================>                 50%]
[Progress:==========================>   87%] [Cov:=================>                 50%]
[Progress:==========================>   87%] [Cov:=================>                 50%]
[Progress:==========================>   87%] [Cov:=================>                 50%]
[Progress:==========================>   88%] [Cov:=================>                 50%]
[Progress:==========================>   88%] [Cov:=================>                 50%]
[Progress:==========================>   89%] [Cov:=================>                 50%]
[Progress:==========================>   89%] [Cov:=================>                 50%]
[Progress:==========================>   89%] [Cov:=================>                 50%]
[Progress:===========================>  90%] [Cov:=================>                 50%]
[Progress:===========================>  90%] [Cov:=================>                 50%]
[Progress:===========================>  91%] [Cov:=================>                 50%]
[Progress:===========================>  91%] [Cov:=================>                 50%]
[Progress:===========================>  91%] [Cov:=================>                 51%]
[Progress:===========================>  92%] [Cov:=================>                 50%]
[Progress:===========================>  92%] [Cov:=================>                 51%]
[Progress:===========================>  92%] [Cov:=================>                 51%]
[Progress:===========================>  93%] [Cov:=================>                 51%]
[Progress:===========================>  93%] [Cov:=================>                 51%]
[Progress:===========================>  93%] [Cov:=================>                 51%]
[Progress:============================> 94%] [Cov:=================>                 51%]
[Progress:============================> 94%] [Cov:=================>                 51%]
[Progress:============================> 94%] [Cov:=================>                 51%]
[Progress:============================> 95%] [Cov:=================>                 51%]
[Progress:============================> 95%] [Cov:=================>                 51%]
[Progress:============================> 96%] [Cov:=================>                 51%]
[Progress:============================> 96%] [Cov:=================>                 51%]
[Progress:=============================>97%] [Cov:=================>                 51%]
[Progress:=============================>97%] [Cov:=================>                 51%]
[Progress:=============================>98%] [Cov:=================>                 51%]
[Progress:=============================>98%] [Cov:=================>                 51%]
[Progress:=============================>99%] [Cov:=================>                 51%]
[Progress:=============================>99%] [Cov:=================>                 51%]
[Progress:=============================>99%] [Cov:=================>                 51%]
[Progress:==============================100%] [Cov:=================>                 51%]
[Progress:==============================100%] [Cov:=================>                 51%]
[Progress:==============================100%] [Cov:==================>                53%]
* Search finished after 152s and 141 generations, 101038 statements, best individual has fitness: 1527.6965753424656
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 519
* Number of covered goals: 229
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 274
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 783
* Number of covered goals: 280
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 340
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 65
* Number of covered goals: 60
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 82%
* Total number of goals: 65
* Number of covered goals: 53
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 274
* Number of covered goals: 100
* Generated 97 tests with total length 407
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 00:02:10.315 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:10.374 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:10.544 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:10.590 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:10.631 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:10.822 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:10.862 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.033 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.078 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.118 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.158 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.199 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.242 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.286 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.405 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.452 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.494 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.542 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.584 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.624 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.670 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.714 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.755 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.797 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.837 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.877 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.919 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:11.961 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:12.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:12.043 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:12.086 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:12.127 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:12.182 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:12.384 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:02:13.063 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 00:02:13.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:115)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_137_tmp__ESTest.test0(AbstractCategoryItemRenderer_137_tmp__ESTest.java:44)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 00:02:13.065 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
Cell cell0 = new Cell();
Document document0 = new Document((Rectangle) cell0, (float) 0, (float) 15, 3286.3547F, (float) (-1));
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) mockFileOutputStream0);
char[] charArray0 = new char[4];
Type3Font type3Font0 = new Type3Font(pdfWriter0, charArray0, false);
Type3Glyph type3Glyph0 = (Type3Glyph)type3Font0.defineGlyph('z', 0.86F, 0.0F, 8, (byte)61, 8192);
AsianFontMapper asianFontMapper0 = new AsianFontMapper((String) null, "Cp1252");
CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
PdfPrinterGraphics2D pdfPrinterGraphics2D0 = new PdfPrinterGraphics2D((PdfContentByte) type3Glyph0, (-2533.3486F), (float) 14, (FontMapper) asianFontMapper0, true, false, 2026.93F, (PrinterJob) null);
PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(pdfPrinterGraphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);

[MASTER] 00:02:13.875 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 00:02:13.875 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "queuePrintJob")
java.lang.Thread.getStackTrace(Thread.java:1552)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkPrintJobAccess(SecurityManager.java:1378)
java.awt.print.PrinterJob.getPrinterJob(PrinterJob.java:75)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer_141_tmp__ESTest.test0(AbstractCategoryItemRenderer_141_tmp__ESTest.java:38)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:497)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:745)

[MASTER] 00:02:13.876 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ScatterRenderer scatterRenderer0 = new ScatterRenderer();
Type3Font type3Font0 = new Type3Font((PdfWriter) null, false);
Type3Glyph type3Glyph0 = (Type3Glyph)type3Font0.defineGlyph('i', (-222.305F), (-1.0F), (-222.305F), (-222.305F), (-985.606F));
PSPrinterJob pSPrinterJob0 = (PSPrinterJob)PrinterJob.getPrinterJob();
PdfPrinterGraphics2D pdfPrinterGraphics2D0 = (PdfPrinterGraphics2D)type3Glyph0.createPrinterGraphicsShapes((float) 3, (float) 3, (PrinterJob) pSPrinterJob0);
XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
NumberAxis numberAxis0 = new NumberAxis();
DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
PolarPlot polarPlot0 = new PolarPlot((XYDataset) xYIntervalSeriesCollection0, (ValueAxis) numberAxis0, (PolarItemRenderer) defaultPolarItemRenderer0);
PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
scatterRenderer0.drawItemLabel(pdfPrinterGraphics2D0, plotOrientation0, defaultStatisticalCategoryDataset0, 5, 500, false, 0.05, 0, false);
assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);


* Writing JUnit test case 'AbstractCategoryItemRenderer_ESTest' to evosuite-tests
* Done!


------------