* EvoSuite 1.0.4-SNAPSHOT
* Going to generate test cases for class: org.joda.time.format.DateTimeParserBucket
* Starting client
* Connecting to master process on port 12058
* Analyzing classpath: 
  - build/classes/
  - build/tests/
  - lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.format.DateTimeParserBucket
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 146
  - Branch 91
  - Exception 0
  - MutationFactory 281
  - Output 63
  - Method 28
  - MethodNoException 28
  - CBranchFitnessFactory 91

[Progress:>                             0%] [Cov:>                                  0%]* Using seed 66
* Starting evolution

[Progress:>                             0%] [Cov:=>                                 3%]
[Progress:>                             0%] [Cov:=>                                 5%]
[Progress:>                             0%] [Cov:======>                            18%]
[Progress:>                             0%] [Cov:======>                            19%]
[Progress:>                             0%] [Cov:========>                          23%]
[Progress:>                             0%] [Cov:=========>                         27%]
[Progress:>                             0%] [Cov:=========>                         28%]
[Progress:>                             0%] [Cov:==========>                        30%]
[Progress:>                             0%] [Cov:===========>                       32%]
[Progress:>                             0%] [Cov:===========>                       33%]
[Progress:>                             0%] [Cov:============>                      35%]
[Progress:>                             0%] [Cov:==============>                    40%]
[Progress:>                             0%] [Cov:==============>                    42%]
[Progress:>                             0%] [Cov:===============>                   44%]
[Progress:>                             0%] [Cov:================>                  46%]
[Progress:>                             0%] [Cov:=================>                 49%]
[Progress:>                             0%] [Cov:=================>                 51%]
[Progress:>                             0%] [Cov:==================>                54%]
[Progress:>                             1%] [Cov:=>                                 5%]
[Progress:>                             1%] [Cov:===>                               9%]
[Progress:>                             1%] [Cov:=======>                           21%]
[Progress:>                             1%] [Cov:========>                          25%]
[Progress:>                             1%] [Cov:=========>                         27%]
[Progress:>                             1%] [Cov:==========>                        30%]
[Progress:>                             1%] [Cov:===========>                       34%]
[Progress:>                             1%] [Cov:============>                      36%]
[Progress:>                             1%] [Cov:==============>                    41%]
[Progress:>                             1%] [Cov:===============>                   43%]
[Progress:>                             1%] [Cov:================>                  46%]
[Progress:>                             1%] [Cov:=================>                 49%]
[Progress:>                             1%] [Cov:==================>                53%]
[Progress:>                             1%] [Cov:==================>                54%]
[Progress:>                             2%] [Cov:=>                                 5%]
[Progress:>                             2%] [Cov:==>                                8%]
[Progress:>                             2%] [Cov:=======>                           20%]
[Progress:>                             2%] [Cov:========>                          24%]
[Progress:>                             2%] [Cov:=========>                         27%]
[Progress:>                             2%] [Cov:==========>                        30%]
[Progress:>                             2%] [Cov:===========>                       32%]
[Progress:>                             2%] [Cov:=============>                     38%]
[Progress:>                             2%] [Cov:==============>                    40%]
[Progress:>                             2%] [Cov:==================>                53%]
[Progress:>                             2%] [Cov:==================>                54%]
[Progress:>                             2%] [Cov:===================>               55%]
[Progress:>                             2%] [Cov:===================>               56%]
[Progress:>                             3%] [Cov:=============>                     39%]
[Progress:>                             3%] [Cov:==============>                    40%]
[Progress:>                             3%] [Cov:==============>                    41%]
[Progress:>                             3%] [Cov:===============>                   43%]
[Progress:>                             3%] [Cov:=============================>     84%]
[Progress:>                             3%] [Cov:=============================>     84%]
[Progress:>                             3%] [Cov:=============================>     85%]
[Progress:>                             3%] [Cov:==============================>    86%]
[Progress:=>                            4%] [Cov:=============================>     85%]
[Progress:=>                            4%] [Cov:==============================>    86%]
[Progress:=>                            4%] [Cov:==============================>    86%]
[Progress:=>                            4%] [Cov:==============================>    87%]
[Progress:=>                            5%] [Cov:=============================>     84%]
[Progress:=>                            5%] [Cov:==============================>    87%]
[Progress:=>                            5%] [Cov:==============================>    87%]
[Progress:=>                            5%] [Cov:==============================>    87%]
[Progress:=>                            6%] [Cov:==============================>    87%]
[Progress:=>                            6%] [Cov:==============================>    87%]
[Progress:=>                            6%] [Cov:==============================>    88%]
[Progress:=>                            6%] [Cov:==============================>    88%]
[Progress:==>                           7%] [Cov:==============================>    87%]
[Progress:==>                           7%] [Cov:==============================>    88%]
[Progress:==>                           7%] [Cov:==============================>    88%]
[Progress:==>                           7%] [Cov:==============================>    88%]
[Progress:==>                           8%] [Cov:==============================>    87%]
[Progress:==>                           8%] [Cov:==============================>    88%]
[Progress:==>                           8%] [Cov:==============================>    88%]
[Progress:==>                           8%] [Cov:==============================>    88%]
[Progress:==>                           9%] [Cov:==============================>    87%]
[Progress:==>                           9%] [Cov:==============================>    88%]
[Progress:==>                           9%] [Cov:==============================>    88%]
[Progress:==>                           9%] [Cov:==============================>    88%]
[Progress:===>                          10%] [Cov:==============================>    88%]
[Progress:===>                          10%] [Cov:==============================>    88%]
[Progress:===>                          10%] [Cov:===============================>   89%]
[Progress:===>                          10%] [Cov:===============================>   89%]
[Progress:===>                          11%] [Cov:==============================>    88%]
[Progress:===>                          11%] [Cov:===============================>   89%]
[Progress:===>                          11%] [Cov:===============================>   89%]
[Progress:===>                          11%] [Cov:===============================>   89%]
[Progress:===>                          12%] [Cov:===============================>   89%]
[Progress:===>                          12%] [Cov:===============================>   89%]
[Progress:===>                          13%] [Cov:===============================>   89%]
[Progress:===>                          13%] [Cov:===============================>   89%]
[Progress:===>                          13%] [Cov:===============================>   89%]
[Progress:====>                         14%] [Cov:===============================>   89%]
[Progress:====>                         14%] [Cov:===============================>   89%]
[Progress:====>                         14%] [Cov:===============================>   89%]
[Progress:====>                         15%] [Cov:===============================>   89%]
[Progress:====>                         15%] [Cov:===============================>   89%]
[Progress:====>                         16%] [Cov:===============================>   89%]
[Progress:====>                         16%] [Cov:===============================>   89%]
[Progress:====>                         16%] [Cov:===============================>   89%]
[Progress:=====>                        17%] [Cov:===============================>   89%]
[Progress:=====>                        17%] [Cov:===============================>   89%]
[Progress:=====>                        17%] [Cov:===============================>   90%]
[Progress:=====>                        18%] [Cov:===============================>   89%]
[Progress:=====>                        18%] [Cov:===============================>   90%]
[Progress:=====>                        18%] [Cov:===============================>   90%]
[Progress:=====>                        18%] [Cov:===============================>   90%]
[Progress:=====>                        19%] [Cov:===============================>   90%]
[Progress:=====>                        19%] [Cov:===============================>   90%]
[Progress:=====>                        19%] [Cov:===============================>   90%]
[Progress:======>                       20%] [Cov:===============================>   90%]
[Progress:======>                       20%] [Cov:===============================>   90%]
[Progress:======>                       21%] [Cov:===============================>   90%]
[Progress:======>                       21%] [Cov:===============================>   90%]
[Progress:======>                       21%] [Cov:===============================>   90%]
[Progress:======>                       22%] [Cov:===============================>   90%]
[Progress:======>                       22%] [Cov:===============================>   90%]
[Progress:======>                       23%] [Cov:===============================>   90%]
[Progress:======>                       23%] [Cov:===============================>   90%]
[Progress:======>                       23%] [Cov:===============================>   90%]
[Progress:=======>                      24%] [Cov:===============================>   90%]
[Progress:=======>                      24%] [Cov:===============================>   90%]
[Progress:=======>                      24%] [Cov:===============================>   90%]
[Progress:=======>                      25%] [Cov:===============================>   90%]
[Progress:=======>                      25%] [Cov:===============================>   90%]
[Progress:=======>                      26%] [Cov:===============================>   90%]
[Progress:=======>                      26%] [Cov:===============================>   90%]
[Progress:=======>                      26%] [Cov:===============================>   90%]
[Progress:========>                     27%] [Cov:===============================>   90%]
[Progress:========>                     27%] [Cov:===============================>   90%]
[Progress:========>                     27%] [Cov:===============================>   90%]
[Progress:========>                     28%] [Cov:===============================>   90%]
[Progress:========>                     28%] [Cov:===============================>   90%]
[Progress:========>                     29%] [Cov:===============================>   90%]
[Progress:========>                     29%] [Cov:===============================>   90%]
[Progress:=========>                    30%] [Cov:===============================>   90%]
[Progress:=========>                    30%] [Cov:===============================>   90%]
[Progress:=========>                    30%] [Cov:===============================>   90%]
[Progress:=========>                    31%] [Cov:===============================>   90%]
[Progress:=========>                    31%] [Cov:===============================>   91%]
[Progress:=========>                    31%] [Cov:================================>  92%]
[Progress:=========>                    31%] [Cov:================================>  92%]
[Progress:=========>                    32%] [Cov:================================>  92%]
[Progress:=========>                    32%] [Cov:================================>  92%]
[Progress:=========>                    32%] [Cov:================================>  92%]
[Progress:=========>                    33%] [Cov:================================>  92%]
[Progress:=========>                    33%] [Cov:================================>  92%]
[Progress:==========>                   34%] [Cov:================================>  92%]
[Progress:==========>                   34%] [Cov:================================>  92%]
[Progress:==========>                   35%] [Cov:================================>  92%]
[Progress:==========>                   35%] [Cov:================================>  92%]
[Progress:==========>                   35%] [Cov:================================>  92%]
[Progress:==========>                   36%] [Cov:================================>  92%]
[Progress:==========>                   36%] [Cov:================================>  92%]
[Progress:===========>                  37%] [Cov:================================>  92%]
[Progress:===========>                  37%] [Cov:================================>  92%]
[Progress:===========>                  38%] [Cov:================================>  92%]
[Progress:===========>                  38%] [Cov:================================>  92%]
[Progress:===========>                  38%] [Cov:================================>  92%]
[Progress:===========>                  39%] [Cov:================================>  92%]
[Progress:===========>                  39%] [Cov:================================>  92%]
[Progress:============>                 40%] [Cov:================================>  92%]
[Progress:============>                 40%] [Cov:================================>  92%]
[Progress:============>                 41%] [Cov:================================>  92%]
[Progress:============>                 41%] [Cov:================================>  92%]
[Progress:============>                 41%] [Cov:================================>  92%]
[Progress:============>                 42%] [Cov:================================>  92%]
[Progress:============>                 42%] [Cov:================================>  92%]
[Progress:============>                 43%] [Cov:================================>  92%]
[Progress:============>                 43%] [Cov:================================>  92%]
[Progress:============>                 43%] [Cov:================================>  92%]
[Progress:=============>                44%] [Cov:================================>  92%]
[Progress:=============>                44%] [Cov:================================>  92%]
[Progress:=============>                44%] [Cov:================================>  92%]
[Progress:=============>                45%] [Cov:================================>  92%]
[Progress:=============>                45%] [Cov:================================>  92%]
[Progress:=============>                46%] [Cov:================================>  92%]
[Progress:=============>                46%] [Cov:================================>  92%]
[Progress:=============>                46%] [Cov:================================>  92%]
[Progress:==============>               47%] [Cov:================================>  92%]
[Progress:==============>               47%] [Cov:================================>  92%]
[Progress:==============>               48%] [Cov:================================>  92%]
[Progress:==============>               48%] [Cov:================================>  92%]
[Progress:==============>               49%] [Cov:================================>  92%]
[Progress:==============>               49%] [Cov:================================>  92%]
[Progress:==============>               49%] [Cov:================================>  92%]
[Progress:===============>              50%] [Cov:================================>  92%]
[Progress:===============>              50%] [Cov:================================>  92%]
[Progress:===============>              51%] [Cov:================================>  92%]
[Progress:===============>              51%] [Cov:================================>  92%]
[Progress:===============>              52%] [Cov:================================>  92%]
[Progress:===============>              52%] [Cov:================================>  92%]
[Progress:===============>              53%] [Cov:================================>  92%]
[Progress:===============>              53%] [Cov:================================>  92%]
[Progress:===============>              53%] [Cov:================================>  92%]
[Progress:================>             54%] [Cov:================================>  92%]
[Progress:================>             54%] [Cov:================================>  92%]
[Progress:================>             55%] [Cov:================================>  92%]
[Progress:================>             55%] [Cov:================================>  92%]
[Progress:================>             55%] [Cov:================================>  92%]
[Progress:================>             56%] [Cov:================================>  92%]
[Progress:================>             56%] [Cov:================================>  93%]
[Progress:================>             56%] [Cov:================================>  93%]
[Progress:================>             56%] [Cov:================================>  94%]
[Progress:=================>            57%] [Cov:================================>  93%]
[Progress:=================>            57%] [Cov:================================>  94%]
[Progress:=================>            58%] [Cov:================================>  94%]
[Progress:=================>            58%] [Cov:================================>  94%]
[Progress:=================>            59%] [Cov:================================>  94%]
[Progress:=================>            59%] [Cov:================================>  94%]
[Progress:==================>           60%] [Cov:================================>  94%]
[Progress:==================>           60%] [Cov:================================>  94%]
[Progress:==================>           60%] [Cov:================================>  94%]
[Progress:==================>           61%] [Cov:================================>  94%]
[Progress:==================>           61%] [Cov:================================>  94%]
[Progress:==================>           62%] [Cov:================================>  94%]
[Progress:==================>           62%] [Cov:================================>  94%]
[Progress:==================>           63%] [Cov:================================>  94%]
[Progress:==================>           63%] [Cov:================================>  94%]
[Progress:==================>           63%] [Cov:================================>  94%]
[Progress:===================>          64%] [Cov:================================>  94%]
[Progress:===================>          64%] [Cov:================================>  94%]
[Progress:===================>          65%] [Cov:================================>  94%]
[Progress:===================>          65%] [Cov:================================>  94%]
[Progress:===================>          66%] [Cov:================================>  94%]
[Progress:===================>          66%] [Cov:================================>  94%]
[Progress:===================>          66%] [Cov:================================>  94%]
[Progress:====================>         67%] [Cov:================================>  94%]
[Progress:====================>         67%] [Cov:================================>  94%]
[Progress:====================>         68%] [Cov:================================>  94%]
[Progress:====================>         68%] [Cov:================================>  94%]
[Progress:====================>         69%] [Cov:================================>  94%]
[Progress:====================>         69%] [Cov:================================>  94%]
[Progress:=====================>        70%] [Cov:================================>  94%]
[Progress:=====================>        70%] [Cov:================================>  94%]
[Progress:=====================>        70%] [Cov:================================>  94%]
[Progress:=====================>        71%] [Cov:================================>  94%]
[Progress:=====================>        71%] [Cov:================================>  94%]
[Progress:=====================>        72%] [Cov:================================>  94%]
[Progress:=====================>        72%] [Cov:================================>  94%]
[Progress:=====================>        73%] [Cov:================================>  94%]
[Progress:=====================>        73%] [Cov:================================>  94%]
[Progress:=====================>        73%] [Cov:================================>  94%]
[Progress:======================>       74%] [Cov:================================>  94%]
[Progress:======================>       74%] [Cov:================================>  94%]
[Progress:======================>       75%] [Cov:================================>  94%]
[Progress:======================>       75%] [Cov:================================>  94%]
[Progress:======================>       75%] [Cov:================================>  94%]
[Progress:======================>       76%] [Cov:================================>  94%]
[Progress:======================>       76%] [Cov:================================>  94%]
[Progress:=======================>      77%] [Cov:================================>  94%]
[Progress:=======================>      77%] [Cov:================================>  94%]
[Progress:=======================>      77%] [Cov:================================>  94%]
[Progress:=======================>      78%] [Cov:================================>  94%]
[Progress:=======================>      78%] [Cov:================================>  94%]
[Progress:=======================>      79%] [Cov:================================>  94%]
[Progress:=======================>      79%] [Cov:================================>  94%]
[Progress:=======================>      79%] [Cov:================================>  94%]
[Progress:========================>     80%] [Cov:================================>  94%]
[Progress:========================>     80%] [Cov:================================>  94%]
[Progress:========================>     81%] [Cov:================================>  94%]
[Progress:========================>     81%] [Cov:================================>  94%]
[Progress:========================>     82%] [Cov:================================>  94%]
[Progress:========================>     82%] [Cov:================================>  94%]
[Progress:========================>     82%] [Cov:================================>  94%]
[Progress:========================>     83%] [Cov:================================>  94%]
[Progress:========================>     83%] [Cov:================================>  94%]
[Progress:========================>     83%] [Cov:================================>  94%]
[Progress:=========================>    84%] [Cov:================================>  94%]
[Progress:=========================>    84%] [Cov:================================>  94%]
[Progress:=========================>    85%] [Cov:================================>  94%]
[Progress:=========================>    85%] [Cov:================================>  94%]
[Progress:=========================>    86%] [Cov:================================>  94%]
[Progress:=========================>    86%] [Cov:================================>  94%]
[Progress:=========================>    86%] [Cov:================================>  94%]
[Progress:==========================>   87%] [Cov:================================>  94%]
[Progress:==========================>   87%] [Cov:================================>  94%]
[Progress:==========================>   87%] [Cov:================================>  94%]
[Progress:==========================>   88%] [Cov:================================>  94%]
[Progress:==========================>   88%] [Cov:================================>  94%]
[Progress:==========================>   89%] [Cov:================================>  94%]
[Progress:==========================>   89%] [Cov:================================>  94%]
[Progress:==========================>   89%] [Cov:================================>  94%]
[Progress:===========================>  90%] [Cov:================================>  94%]
[Progress:===========================>  90%] [Cov:================================>  94%]
[Progress:===========================>  91%] [Cov:================================>  94%]
[Progress:===========================>  91%] [Cov:================================>  94%]
[Progress:===========================>  91%] [Cov:================================>  94%]
[Progress:===========================>  92%] [Cov:================================>  94%]
[Progress:===========================>  92%] [Cov:================================>  94%]
[Progress:===========================>  93%] [Cov:================================>  94%]
[Progress:===========================>  93%] [Cov:================================>  94%]
[Progress:===========================>  93%] [Cov:================================>  94%]
[Progress:============================> 94%] [Cov:================================>  94%]
[Progress:============================> 94%] [Cov:================================>  94%]
[Progress:============================> 95%] [Cov:================================>  94%]
[Progress:============================> 95%] [Cov:================================>  94%]
[Progress:============================> 95%] [Cov:================================>  94%]
[Progress:============================> 96%] [Cov:================================>  94%]
[Progress:============================> 96%] [Cov:================================>  94%]
[Progress:=============================>97%] [Cov:================================>  94%]
[Progress:=============================>97%] [Cov:================================>  94%]
[Progress:=============================>98%] [Cov:================================>  94%]
[Progress:=============================>98%] [Cov:================================>  94%]
[Progress:=============================>98%] [Cov:================================>  94%]
[Progress:=============================>99%] [Cov:================================>  94%]
[Progress:=============================>99%] [Cov:================================>  94%]
[Progress:=============================>99%] [Cov:================================>  94%]
[Progress:==============================100%] [Cov:================================>  94%]
[Progress:==============================100%] [Cov:================================>  94%]
[Progress:==============================100%] [Cov:=================================> 95%]
* Search finished after 45s and 148 generations, 100424 statements, best individual has fitness: 51.35079365079365
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 146
* Number of covered goals: 144
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 91
* Number of covered goals: 85
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 281
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 94%
* Total number of goals: 63
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 91
* Number of covered goals: 78
* Generated 48 tests with total length 254
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
[MASTER] 02:29:45.209 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:29:46.765 [logback-2] ERROR JUnitAnalyzer - 1 test cases failed
[MASTER] 02:29:46.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:46.767 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();
Locale locale0 = Locale.GERMANY;
CachedDateTimeZone cachedDateTimeZone0 = (CachedDateTimeZone)DateTimeZone.getDefault();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) cachedDateTimeZone0);
DateTimeField dateTimeField0 = buddhistChronology0.era();
SkipDateTimeField skipDateTimeField0 = new SkipDateTimeField((Chronology) iSOChronology0, dateTimeField0);
DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(skipDateTimeField0, "aM", locale0);
DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField1 = new DateTimeParserBucket.SavedField(dateTimeField0, 1);
int int0 = dateTimeParserBucket_SavedField0.compareTo(dateTimeParserBucket_SavedField1);
assertEquals(0, int0);


[MASTER] 02:29:47.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal instant due to time zone offset transition (MockZone)
[MASTER] 02:29:47.032 [logback-2] ERROR JUnitAnalyzer - 7 test cases failed
[MASTER] 02:29:47.032 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Locale locale0 = Locale.CANADA;
Integer integer0 = new Integer((-1));
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(4L, (Chronology) null, locale0, integer0, 2629);
long long0 = dateTimeParserBucket0.computeMillis();
assertEquals((-3599996L), long0);


[MASTER] 02:29:47.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.032 [logback-1] WARN  JUnitAnalyzer - Failing test:
 GJChronology gJChronology0 = GJChronology.getInstance();
Locale locale0 = Locale.ROOT;
Integer integer0 = Integer.getInteger("PYP?k>GJwr", 41);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1L), (Chronology) gJChronology0, locale0, integer0);
Locale locale1 = dateTimeParserBucket0.getLocale();
assertEquals("", locale1.toString());


[MASTER] 02:29:47.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test21 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockZone mockZone0 = new MockZone((-1300L), 4, 4);
DateTimeZone.setDefault(mockZone0);
CopticChronology copticChronology0 = CopticChronology.getInstance();
Locale locale0 = Locale.JAPAN;
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((long) 4, (Chronology) copticChronology0, locale0, (Integer) 1);
dateTimeParserBucket0.computeMillis(true);

[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test02 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ISOChronology iSOChronology0 = ISOChronology.getInstance();
Locale locale0 = Locale.FRENCH;
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(1L, (Chronology) iSOChronology0, locale0);
CachedDateTimeZone cachedDateTimeZone0 = (CachedDateTimeZone)dateTimeParserBucket0.getZone();
assertEquals("Europe/Paris", cachedDateTimeZone0.getID());


[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test04 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal instant due to time zone offset transition (MockZone)
[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer(0);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-986L), (Chronology) null, (Locale) null, integer0, 0);
Integer integer1 = dateTimeParserBucket0.getPivotYear();
assertEquals(0, (int)integer1);


[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test19 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Cannot parse "um` dxKY^_exI[>h": Illegal instant due to time zone offset transition (MockZone)
[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 GJChronology gJChronology0 = GJChronology.getInstance();
Locale locale0 = Locale.CANADA_FRENCH;
Integer integer0 = Integer.getInteger("PYP?k>GJwr", 41);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1L), (Chronology) gJChronology0, locale0, integer0);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeField dateTimeField0 = buddhistChronology0.clockhourOfDay();
dateTimeParserBucket0.saveField(dateTimeField0, 41);
dateTimeParserBucket0.saveField(dateTimeField0, 1163);
dateTimeParserBucket0.computeMillis();

[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test10 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 GJChronology gJChronology0 = GJChronology.getInstance();
Locale locale0 = Locale.ROOT;
Integer integer0 = Integer.getInteger("PYP?k>GJwr", 41);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1L), (Chronology) gJChronology0, locale0, integer0);
int int0 = dateTimeParserBucket0.getOffset();
assertEquals(0, int0);


[MASTER] 02:29:47.192 [logback-2] ERROR JUnitAnalyzer - 5 test cases failed
[MASTER] 02:29:47.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test25 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Cannot parse "um` dxKY^_exI[>h": Illegal instant due to time zone offset transition (MockZone)
[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 GJChronology gJChronology0 = GJChronology.getInstance();
Locale locale0 = Locale.ROOT;
Integer integer0 = Integer.getInteger((String) null, 41);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1L), (Chronology) gJChronology0, locale0, integer0);
DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DateTimeField dateTimeField0 = buddhistChronology0.weekyear();
dateTimeParserBucket0.saveField(dateTimeField0, 1996);
boolean boolean0 = dateTimeParserBucket_SavedState0.restoreState(dateTimeParserBucket0);
assertTrue(boolean0);

long long0 = dateTimeParserBucket0.computeMillis(false, "um` dxKY^_exI[>h");
assertEquals((-3600001L), long0);


[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test23 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ISOChronology iSOChronology0 = ISOChronology.getInstance();
CachedDateTimeZone cachedDateTimeZone0 = (CachedDateTimeZone)DateTimeZone.getDefault();
ZonedChronology zonedChronology0 = ZonedChronology.getInstance(iSOChronology0, cachedDateTimeZone0);
Locale locale0 = Locale.GERMAN;
Integer integer0 = new Integer(23);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(0L, (Chronology) zonedChronology0, locale0, integer0, 23);
DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();
dateTimeParserBucket0.saveField(dateTimeFieldType0, 23);
dateTimeParserBucket0.computeMillis(true, "Cannot parse \"");
long long0 = dateTimeParserBucket0.computeMillis(true, "Cannot parse \"");
assertEquals((-61427981361000L), long0);


[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test36 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal instant due to time zone offset transition (MockZone)
[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 GJChronology gJChronology0 = GJChronology.getInstance();
Locale locale0 = Locale.ROOT;
Integer integer0 = Integer.getInteger("PYP?k>GJwr", 41);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1L), (Chronology) gJChronology0, locale0, integer0);
DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
boolean boolean0 = dateTimeParserBucket0.restoreState(dateTimeParserBucket_SavedState0);
assertTrue(boolean0);


[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test34 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CopticChronology copticChronology0 = CopticChronology.getInstance();
Locale locale0 = Locale.JAPAN;
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((long) 4, (Chronology) copticChronology0, locale0, (Integer) 1);
long long0 = dateTimeParserBucket0.computeMillis(true);
assertEquals((-3599996L), long0);


[MASTER] 02:29:47.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test33 -> class java.lang.ClassCastException: org.joda.time.MockZone cannot be cast to org.joda.time.tz.CachedDateTimeZone
[MASTER] 02:29:47.194 [logback-1] WARN  JUnitAnalyzer - Failing test:
 GJChronology gJChronology0 = GJChronology.getInstance();
Locale locale0 = Locale.CANADA_FRENCH;
Integer integer0 = Integer.getInteger("PYP?k>GJwr", 41);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1L), (Chronology) gJChronology0, locale0, integer0);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeField dateTimeField0 = buddhistChronology0.clockhourOfDay();
dateTimeParserBucket0.saveField(dateTimeField0, 41);
DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
dateTimeParserBucket0.saveField(dateTimeFieldType0, "PYP?k>GJwr", locale0);
dateTimeParserBucket0.computeMillis();

* Writing JUnit test case 'DateTimeParserBucket_ESTest' to /usr/evosuite-repair-new/nopol/nopol/src/main/java/fr/inria/lille/spirals/evo/results/2016-December/Time/16/Nopol/66/generatedTests
* Done!

* Computation finished
