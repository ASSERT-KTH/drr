/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 27 22:59:30 GMT 2017
 */

package org.apache.commons.math;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.integration.RombergIntegrator;
import org.apache.commons.math.analysis.integration.TrapezoidIntegrator;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.apache.commons.math.optimization.univariate.BrentOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConvergingAlgorithmImpl_ESTest extends ConvergingAlgorithmImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LaguerreSolver laguerreSolver0 = new LaguerreSolver();
      laguerreSolver0.setMaximalIterationCount(3138);
      assertEquals(3138, laguerreSolver0.getMaximalIterationCount());
      
      laguerreSolver0.resetMaximalIterationCount();
      assertEquals(1.0E-14, laguerreSolver0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.setAbsoluteAccuracy(0.0);
      rombergIntegrator0.resetAbsoluteAccuracy();
      assertEquals(32, rombergIntegrator0.getMaximalIterationCount());
      assertEquals(0, rombergIntegrator0.getIterationCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.setMaximalIterationCount(3145);
      assertEquals(3145, rombergIntegrator0.getMaximalIterationCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TrapezoidIntegrator trapezoidIntegrator0 = new TrapezoidIntegrator();
      trapezoidIntegrator0.resetRelativeAccuracy();
      assertEquals(1.0E-14, trapezoidIntegrator0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver();
      secantSolver0.resetMaximalIterationCount();
      assertEquals(100, secantSolver0.getMaximalIterationCount());
      assertEquals(1.0E-14, secantSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, secantSolver0.getIterationCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer();
      assertEquals(1.0E-14, brentOptimizer0.getRelativeAccuracy(), 0.01);
      
      brentOptimizer0.setRelativeAccuracy(0.0);
      brentOptimizer0.getRelativeAccuracy();
      assertEquals(100, brentOptimizer0.getMaximalIterationCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      newtonSolver0.setRelativeAccuracy((-2277.008569582953));
      double double0 = newtonSolver0.getRelativeAccuracy();
      assertEquals((-2277.008569582953), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.setMaximalIterationCount((-14));
      int int0 = rombergIntegrator0.getMaximalIterationCount();
      assertEquals((-14), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BisectionSolver bisectionSolver0 = new BisectionSolver();
      Expm1Function expm1Function0 = new Expm1Function();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction((UnivariateRealFunction) expm1Function0);
      bisectionSolver0.solve((UnivariateRealFunction) monitoredFunction0, (-2206.019), (double) 100);
      int int0 = bisectionSolver0.getIterationCount();
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.setAbsoluteAccuracy(0.0);
      rombergIntegrator0.getAbsoluteAccuracy();
      assertEquals(0, rombergIntegrator0.getIterationCount());
      assertEquals(32, rombergIntegrator0.getMaximalIterationCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BisectionSolver bisectionSolver0 = new BisectionSolver();
      bisectionSolver0.setRelativeAccuracy((-480.4895520054489));
      assertEquals((-480.4895520054489), bisectionSolver0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer();
      double double0 = brentOptimizer0.getRelativeAccuracy();
      assertEquals(1.0E-14, double0, 0.01);
      assertEquals(100, brentOptimizer0.getMaximalIterationCount());
      assertEquals(0, brentOptimizer0.getIterationCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.setAbsoluteAccuracy((-1768.091704));
      double double0 = rombergIntegrator0.getAbsoluteAccuracy();
      assertEquals((-1768.091704), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      assertEquals(32, rombergIntegrator0.getMaximalIterationCount());
      
      rombergIntegrator0.setMaximalIterationCount(0);
      int int0 = rombergIntegrator0.getMaximalIterationCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BisectionSolver bisectionSolver0 = new BisectionSolver();
      int int0 = bisectionSolver0.getIterationCount();
      assertEquals(100, bisectionSolver0.getMaximalIterationCount());
      assertEquals(1.0E-14, bisectionSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      rombergIntegrator0.getAbsoluteAccuracy();
      assertEquals(32, rombergIntegrator0.getMaximalIterationCount());
      assertEquals(0, rombergIntegrator0.getIterationCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RombergIntegrator rombergIntegrator0 = new RombergIntegrator();
      int int0 = rombergIntegrator0.getMaximalIterationCount();
      assertEquals(32, int0);
      assertEquals(0, rombergIntegrator0.getIterationCount());
  }
}
