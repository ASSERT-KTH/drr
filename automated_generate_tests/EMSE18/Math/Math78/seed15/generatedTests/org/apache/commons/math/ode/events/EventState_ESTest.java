/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 15 21:45:38 GMT 2017
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.0, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, (-2317.490972348026), (-1115));
      double[] doubleArray0 = new double[6];
      eventState0.stepAccepted(0.0, doubleArray0);
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(2317.490972348026, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(-1115, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-2021.238109478765), 6.38905609893065, 6.38905609893065);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 10.0178749274099, (-2754.48784936805), 2299);
      eventState0.reinitializeBegin(10.0178749274099, (double[]) null);
      assertFalse(eventState0.stop());
      assertEquals(10.0178749274099, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(2299, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2754.48784936805, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(525.842497569, 525.842497569, 1686.3);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 525.842497569, 1686.3, 0);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(1686.3, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(0, int0);
      assertEquals(525.842497569, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-2069.7287), 0.0, (-2776.14549));
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 2811.2119, (-2776.14549), 1241);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(2776.14549, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2811.2119, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(1241, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(610.2117745, 0.0, 610.2117745);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, 0.0, 0);
      eventState0.getMaxCheckInterval();
      assertEquals(0, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(2.2250738585072014E-308, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 2.2250738585072014E-308, 2.2250738585072014E-308, 2146528981);
      eventState0.getMaxCheckInterval();
      assertEquals(2146528981, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.0, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, (-2317.490972348026), (-1115));
      eventState0.getEventHandler();
      assertEquals(2317.490972348026, eventState0.getConvergence(), 0.01);
      assertEquals(-1115, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(476.0, 0.0, 476.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, 0.0, 1111301756);
      eventState0.getConvergence();
      assertEquals(1111301756, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (-303.5124), (-303.5124), 17);
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        eventState0.stepAccepted(17, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 0.0, Double.NaN, 5);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        eventState0.reinitializeBegin(0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(476.0, 0.0, 476.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, 0.0, 1111301756);
      // Undeclared exception!
      try { 
        eventState0.evaluateStep((StepInterpolator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.events.EventState", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.0, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, (-2317.490972348026), (-1115));
      double[] doubleArray0 = new double[6];
      boolean boolean0 = eventState0.reset((-2317.490972348026), doubleArray0);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(2317.490972348026, eventState0.getConvergence(), 0.01);
      assertEquals(-1115, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem((-2021.238109478765), 6.38905609893065, 6.38905609893065);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 10.0178749274099, (-2754.48784936805), 2299);
      boolean boolean0 = eventState0.stop();
      assertEquals(10.0178749274099, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(boolean0);
      assertEquals(2754.48784936805, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2299, eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.0, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, (-2317.490972348026), (-1115));
      double[] doubleArray0 = new double[6];
      eventState0.stepAccepted((-1115), doubleArray0);
      assertEquals(-1115, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(2317.490972348026, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(1074.8, 1074.8, 253.51434);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 253.51434, 253.51434, 1);
      double[] doubleArray0 = new double[0];
      eventState0.stepAccepted(1074.8, doubleArray0);
      assertEquals(1, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(253.51434, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.3333333333333333, Double.NaN, 1655.7);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1655.7, 1655.7, (-2202));
      double[] doubleArray0 = new double[6];
      eventState0.reinitializeBegin(1655.7, doubleArray0);
      assertEquals(-2202, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(1655.7, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.0, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 0.0, (-2317.490972348026), (-1115));
      double[] doubleArray0 = new double[6];
      eventState0.reinitializeBegin((-2317.490972348026), doubleArray0);
      assertEquals(-1115, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2317.490972348026, eventState0.getConvergence(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(865.162316775, 865.162316775, 865.162316775);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 865.162316775, 865.162316775, 2146003459);
      double double0 = eventState0.getConvergence();
      assertEquals(2146003459, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(865.162316775, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(865.162316775, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(864.031, (-905.5858876), 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, (-905.5858876), 864.031, 0);
      double double0 = eventState0.getMaxCheckInterval();
      assertFalse(eventState0.stop());
      assertEquals((-905.5858876), double0, 0.01);
      assertEquals(0, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(864.031, eventState0.getConvergence(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(2.2250738585072014E-308, 0.0, 0.0);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 2.2250738585072014E-308, 2.2250738585072014E-308, 2146528981);
      double double0 = eventState0.getEventTime();
      assertFalse(eventState0.stop());
      assertEquals(2146528981, eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StepProblem stepProblem0 = new StepProblem(0.3333333333333333, Double.NaN, 1655.7);
      EventState eventState0 = new EventState((EventHandler) stepProblem0, 1655.7, 1655.7, (-2202));
      int int0 = eventState0.getMaxIterationCount();
      assertEquals((-2202), int0);
      assertEquals(1655.7, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, 0.0, 1310.131163597, 0);
      eventState0.getEventHandler();
      assertEquals(0, eventState0.getMaxIterationCount());
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(1310.131163597, eventState0.getConvergence(), 0.01);
  }
}
