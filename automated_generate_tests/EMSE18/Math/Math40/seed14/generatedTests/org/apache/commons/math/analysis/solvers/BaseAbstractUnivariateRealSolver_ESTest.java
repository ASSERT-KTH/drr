/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 15 15:37:32 GMT 2017
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.DifferentiableUnivariateFunction;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver2;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.RiddersSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver(Double.NaN);
      newtonSolver0.verifySequence(Double.NaN, Double.NaN, Double.NaN);
      assertEquals(1.0E-14, newtonSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(Double.NaN, newtonSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, newtonSolver0.getFunctionValueAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.0, 662);
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      bracketingNthOrderBrentSolver0.setup(662, xMinus5Function0, 81.191, 0.0, 662);
      bracketingNthOrderBrentSolver0.incrementEvaluationCount();
      assertEquals(662.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(0.0);
      SincFunction sincFunction0 = new SincFunction();
      // Undeclared exception!
      try { 
        mullerSolver0.solve((-393), (UnivariateFunction) sincFunction0, (-1529.894882386));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-393) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3199.077350147708, 3199.077350147708);
      QuinticFunction quinticFunction0 = new QuinticFunction();
      mullerSolver2_0.setup(0, quinticFunction0, (-644.4255898618), 3199.077350147708, (-644.4255898618));
      mullerSolver2_0.verifyBracketing(0.0, 3199.077350147708);
      assertEquals((-644.4255898618), mullerSolver2_0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3198.9983368, 3198.9983368);
      SincFunction sincFunction0 = new SincFunction();
      // Undeclared exception!
      try { 
        mullerSolver2_0.solve(0, (UnivariateFunction) sincFunction0, (-29.359494635720633), (double) 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LaguerreSolver laguerreSolver0 = new LaguerreSolver((-4267.15), (-4267.15), (-783.4326941));
      boolean boolean0 = laguerreSolver0.isSequence((-4267.15), 883.7335717654121, 3326.7247869032512);
      assertEquals((-783.4326941), laguerreSolver0.getFunctionValueAccuracy(), 0.01);
      assertTrue(boolean0);
      assertEquals((-4267.15), laguerreSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals((-4267.15), laguerreSolver0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.0, 662);
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      bracketingNthOrderBrentSolver0.setup(662, xMinus5Function0, 81.191, 0.0, 662);
      boolean boolean0 = bracketingNthOrderBrentSolver0.isBracketing(780.213013, (-274.337925653));
      assertEquals(662.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3199.077350147708, 3199.077350147708);
      QuinticFunction quinticFunction0 = new QuinticFunction();
      mullerSolver2_0.setup(0, quinticFunction0, (-644.4255898618), 3199.077350147708, (-644.4255898618));
      boolean boolean0 = mullerSolver2_0.isBracketing(639.213289156351, 1374.0394763916258);
      assertEquals((-644.4255898618), mullerSolver2_0.getStartValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SincFunction sincFunction0 = new SincFunction();
      newtonSolver0.solve(2610, (DifferentiableUnivariateFunction) sincFunction0, (double) 2610, (double) 2610);
      newtonSolver0.computeObjectiveValue(2610.663495133118);
      assertEquals(Double.NaN, newtonSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SincFunction sincFunction0 = new SincFunction();
      newtonSolver0.solve(2611, (DifferentiableUnivariateFunction) sincFunction0, (double) 2611, (-27.73405335557299));
      newtonSolver0.computeObjectiveValue(1291.194580625405);
      assertEquals(Double.NaN, newtonSolver0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0);
      // Undeclared exception!
      try { 
        brentSolver0.verifyInterval(0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3199.077350147708);
      QuinticFunction quinticFunction0 = new QuinticFunction();
      mullerSolver2_0.setup(0, quinticFunction0, (-645.5548150293957), 3199.077350147708, 0.0);
      // Undeclared exception!
      try { 
        mullerSolver2_0.verifyBracketing(3199.077350147708, 3199.077350147708);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [3,199.077, 3,199.077]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(1.0E-15, 5253.9733);
      // Undeclared exception!
      try { 
        mullerSolver0.setup(0, (UnivariateFunction) null, (-2280.79957), 1.0E-15, 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RiddersSolver riddersSolver0 = new RiddersSolver();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction((UnivariateFunction) null);
      riddersSolver0.setup((-1771), monitoredFunction0, (-1771), 3439.35910789452, 3439.35910789452);
      // Undeclared exception!
      try { 
        riddersSolver0.isBracketing((-4.588749093664028E-9), (-1771));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.MonitoredFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LaguerreSolver laguerreSolver0 = new LaguerreSolver();
      try { 
        laguerreSolver0.computeObjectiveValue(1.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      SincFunction sincFunction0 = new SincFunction();
      // Undeclared exception!
      try { 
        mullerSolver2_0.solve((-1221), (UnivariateFunction) sincFunction0, (double) (-1221), (double) (-1221), (double) (-1221));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-1,221, -1,221]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3199.077350147708, 3199.077350147708);
      // Undeclared exception!
      try { 
        mullerSolver2_0.isBracketing(639.213289156351, 1374.0394763916258);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3199.077350147708, 3199.077350147708);
      // Undeclared exception!
      try { 
        mullerSolver2_0.verifyBracketing(0.0, 3199.077350147708);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.0, 662);
      int int0 = bracketingNthOrderBrentSolver0.getMaxEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      newtonSolver0.verifyInterval(1.0E-14, 5453.90538277156);
      assertEquals(1.0E-6, newtonSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver0.verifySequence(0, 0, (-1970.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LaguerreSolver laguerreSolver0 = new LaguerreSolver((-4267.15), (-4267.15), (-783.4326941));
      laguerreSolver0.getEvaluations();
      assertEquals((-783.4326941), laguerreSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-4267.15), laguerreSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals((-4267.15), laguerreSolver0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.0, 662);
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver0.incrementEvaluationCount();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3199.077350147708, 3199.077350147708);
      mullerSolver2_0.isSequence(3199.077350147708, (-644.4255898618), (-644.4255898618));
      assertEquals(3199.077350147708, mullerSolver2_0.getRelativeAccuracy(), 0.01);
      assertEquals(3199.077350147708, mullerSolver2_0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, mullerSolver2_0.getFunctionValueAccuracy(), 0.01);
  }
}
