/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 15 22:46:12 GMT 2017
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.DifferentiableUnivariateFunction;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver2;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(1348.113, 1348.113, 47);
      SinFunction sinFunction0 = new SinFunction();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = bracketingNthOrderBrentSolver0.solve(47, (UnivariateFunction) sinFunction0, (double) 47, 1348.113, allowedSolution0);
      assertEquals(47.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(697.5565, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BisectionSolver bisectionSolver0 = new BisectionSolver(1594.274187774, 1594.274187774);
      bisectionSolver0.verifyInterval(0.0, 1594.274187774);
      assertEquals(1.0E-15, bisectionSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1594.274187774, bisectionSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1594.274187774, bisectionSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0);
      Expm1Function expm1Function0 = new Expm1Function();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction((UnivariateFunction) expm1Function0);
      brentSolver0.setup(1, monitoredFunction0, 1, 1, (-1515.2));
      brentSolver0.incrementEvaluationCount();
      assertEquals((-1515.2), brentSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LaguerreSolver laguerreSolver0 = new LaguerreSolver(0.0, 1050.33958913);
      boolean boolean0 = laguerreSolver0.isSequence(0.0, 0.95, 1050.33958913);
      assertTrue(boolean0);
      assertEquals(1.0E-15, laguerreSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, laguerreSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1050.33958913, laguerreSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      SincFunction sincFunction0 = new SincFunction();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction((UnivariateFunction) sincFunction0);
      mullerSolver2_0.setup(0, monitoredFunction0, (-635.65341215), (-59.853715898), (-2666.5));
      boolean boolean0 = mullerSolver2_0.isBracketing(1097, 0);
      assertEquals((-59.853715898), mullerSolver2_0.getMax(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver(1.0E-14);
      SinFunction sinFunction0 = new SinFunction();
      newtonSolver0.solve(3950, (DifferentiableUnivariateFunction) sinFunction0, 1.0E-14, (-1100.9680688255));
      boolean boolean0 = newtonSolver0.isBracketing(1.0E-14, 1.0E-14);
      assertEquals((-550.48403441275), newtonSolver0.getStartValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SincFunction sincFunction0 = new SincFunction();
      newtonSolver0.setup(3236, sincFunction0, 0.0, 3236, (-476.006308986));
      newtonSolver0.computeObjectiveValue(0);
      assertEquals(3236.0, newtonSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SincFunction sincFunction0 = new SincFunction();
      newtonSolver0.setup(3236, sincFunction0, 0.0, 3236, (-476.006308986));
      newtonSolver0.computeObjectiveValue(3548.1950948);
      assertEquals(3236.0, newtonSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver0.verifySequence(5.0, 5.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [5, 5]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(0.0, 1018);
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver0.verifyInterval(1195.18671158, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,195.187, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MullerSolver mullerSolver0 = new MullerSolver(0.0, 0.0);
      QuinticFunction quinticFunction0 = new QuinticFunction();
      mullerSolver0.setup(0, quinticFunction0, 0.0, (-89.1), 1.5);
      // Undeclared exception!
      try { 
        mullerSolver0.verifyBracketing(1.0E-15, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1348.113);
      // Undeclared exception!
      try { 
        brentSolver0.verifyBracketing((-5438.01474476389), 1348.113);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2((-374.873), 0.0);
      // Undeclared exception!
      try { 
        mullerSolver2_0.setup(213, (UnivariateFunction) null, 0.0, (-3306.0), 213);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction((UnivariateFunction) null);
      mullerSolver2_0.setup(253, monitoredFunction0, 1082, 0.0, 0.0);
      // Undeclared exception!
      try { 
        mullerSolver2_0.isBracketing(1082, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.MonitoredFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0);
      // Undeclared exception!
      try { 
        brentSolver0.incrementEvaluationCount();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver();
      QuinticFunction quinticFunction0 = new QuinticFunction();
      // Undeclared exception!
      try { 
        brentSolver0.solve(215, (UnivariateFunction) quinticFunction0, (double) 215, (double) 215);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [215, 215]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver(2210.258618352742);
      SinFunction sinFunction0 = new SinFunction();
      // Undeclared exception!
      try { 
        secantSolver0.solve(907, (UnivariateFunction) sinFunction0, (-1154.9444));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [\uFFFD, \uFFFD], values: [\uFFFD, \uFFFD]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      // Undeclared exception!
      try { 
        mullerSolver2_0.isBracketing(1082, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SecantSolver secantSolver0 = new SecantSolver(2210.258618352742);
      SinFunction sinFunction0 = new SinFunction();
      UnivariateFunction univariateFunction0 = sinFunction0.derivative();
      double double0 = secantSolver0.solve(907, univariateFunction0, 0.0, 1421.62804, 1421.62804);
      assertEquals(1421.62804, secantSolver0.getStartValue(), 0.01);
      assertEquals(1344.5417062805861, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver(553.272785914351);
      newtonSolver0.isSequence(553.272785914351, 553.272785914351, 553.272785914351);
      assertEquals(1.0E-15, newtonSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1.0E-14, newtonSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(553.272785914351, newtonSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      int int0 = newtonSolver0.getMaxEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SinFunction sinFunction0 = new SinFunction();
      newtonSolver0.solve(1258, (DifferentiableUnivariateFunction) sinFunction0, 0.0, (double) 1258);
      newtonSolver0.computeObjectiveValue(0.0);
      assertEquals(Double.NaN, newtonSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(2608.72932499536, Double.NaN, 3466);
      bracketingNthOrderBrentSolver0.verifySequence(Double.NaN, (-596.993782), 0.0);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(2608.72932499536, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(Double.NaN, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      int int0 = newtonSolver0.getEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NewtonSolver newtonSolver0 = new NewtonSolver();
      try { 
        newtonSolver0.computeObjectiveValue(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }
}
