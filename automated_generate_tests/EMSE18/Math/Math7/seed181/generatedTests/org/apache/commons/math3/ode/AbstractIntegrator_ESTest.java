/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 05:39:31 GMT 2017
 */

package org.apache.commons.math3.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.TestProblem5;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math3.ode.nonstiff.EulerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GillIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math3.ode.nonstiff.MidpointIntegrator;
import org.apache.commons.math3.ode.nonstiff.StepProblem;
import org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest;
import org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractIntegrator_ESTest extends AbstractIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1.0), (-1.0), (-1.0), (-1.0));
      StepNormalizerOutputTest stepNormalizerOutputTest0 = new StepNormalizerOutputTest();
      double[] doubleArray0 = new double[1];
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepNormalizerOutputTest0, (-1.0), doubleArray0, (-1.0), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      StepProblem stepProblem0 = new StepProblem(2194.6978333504057, 3208.25331687, 2194.6978333504057);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-8655101.787399044), doubleArray0, (-503.74759167561), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(0.0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[3];
      try { 
        threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 8.849812639395597E201, doubleArray0, 0.0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8 != 2
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, doubleArray0, doubleArray0);
      dormandPrince54Integrator0.setMaxEvaluations(0);
      assertEquals(0.0, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      StepProblem stepProblem0 = new StepProblem(2195.14, 3208.25331687, 2195.14);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      expandableStatefulODE0.setTime(1863.45853);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1304.8);
      assertEquals(503.74759167561, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      StepProblem stepProblem0 = new StepProblem(2195.14, 3208.25331687, 2195.14);
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1826.61857), doubleArray0, (-503.74759167561), doubleArray0);
      graggBulirschStoerIntegrator0.computeDerivatives(4.94E-321, doubleArray0, doubleArray0);
      assertEquals(503.74759167561, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-30.8122), 0.0);
      double double0 = graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2195.14, 2195.14, 2195.14, 2195.14);
      StepProblem stepProblem0 = new StepProblem(2195.14, 3208.25331687, 2195.14);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) stepProblem0, 2195.14, (double) (-53), 0);
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1826.61857), doubleArray0, 2195.14, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GillIntegrator gillIntegrator0 = new GillIntegrator(0.0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      // Undeclared exception!
      try { 
        gillIntegrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 0.0, (double[]) null, 0.0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(11.066565);
      StepNormalizerOutputOverlapTest stepNormalizerOutputOverlapTest0 = new StepNormalizerOutputOverlapTest();
      midpointIntegrator0.setMaxEvaluations(3590);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepNormalizerOutputOverlapTest0);
      try { 
        midpointIntegrator0.integrate(expandableStatefulODE0, 72.68786);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (3,590) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 1000.0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (double) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(357.6391179106141, 0.0, 284.754, 0.0);
      dormandPrince853Integrator0.setMaxEvaluations((-1982));
      assertEquals(0.9, dormandPrince853Integrator0.getSafety(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator(715.8818803997);
      eulerIntegrator0.clearEventHandlers();
      assertEquals(Double.NaN, eulerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, eulerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1000.0, 1000.0, 1000.0, 0.0);
      dormandPrince54Integrator0.clearStepHandlers();
      assertEquals(1000.0, dormandPrince54Integrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.computeDerivatives(4.94E-321, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(1218.62399, 0.0, 1218.62399, 0.0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) testProblem5_0);
      expandableStatefulODE0.setTime(0.0);
      try { 
        highamHall54Integrator0.integrate(expandableStatefulODE0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2195.14;
      StepProblem stepProblem0 = new StepProblem(2195.14, 3208.25331687, 2195.14);
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-5524286.613867673), (-503.74759167561), doubleArray0, doubleArray0);
      dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-764.7), doubleArray0, (double) 0, doubleArray0);
      assertArrayEquals(new double[] {1680818.6979999994}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1.0), (-1.0), (-1.0), (-1.0));
      StepNormalizerOutputTest stepNormalizerOutputTest0 = new StepNormalizerOutputTest();
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[0];
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepNormalizerOutputTest0, (-914.663), doubleArray0, 909.00933807695, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 1
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GillIntegrator gillIntegrator0 = new GillIntegrator(1067.1428295496369);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[1];
      try { 
        gillIntegrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 0.0, doubleArray0, (-987.628006729), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 2
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1.7775323307944624E203, 1.7775323307944624E203, (-3573.4216738932273), 1.7775323307944624E203);
      StepProblem stepProblem0 = new StepProblem(2985.0, 1.5744403932561435E265, 9.622106063561645E277);
      dormandPrince54Integrator0.addEventHandler((EventHandler) stepProblem0, (-914.0), 1.7775323307944624E203, 57, (UnivariateSolver) null);
      Collection<EventHandler> collection0 = dormandPrince54Integrator0.getEventHandlers();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      StepProblem stepProblem0 = new StepProblem(2195.14, 3208.25331687, 2195.14);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) stepProblem0, (-503.74759167561), (double) (-53), 903);
      double double0 = graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, 3208.25331687, doubleArray0, 405.26174640134, doubleArray0);
      assertArrayEquals(new double[] {(-7966308.410295396)}, doubleArray0, 0.01);
      assertEquals(405.26174640134, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      midpointIntegrator0.getName();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(11.066565, 0.0, doubleArray0, doubleArray0);
      Collection<StepHandler> collection0 = highamHall54Integrator0.getStepHandlers();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator(715.8818803997);
      double double0 = eulerIntegrator0.getCurrentStepStart();
      assertEquals(Double.NaN, eulerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1.7775323307944624E203, 1.7775323307944624E203, (-3573.4216738932273), 1.7775323307944624E203);
      int int0 = dormandPrince54Integrator0.getMaxEvaluations();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      int int0 = graggBulirschStoerIntegrator0.getEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator((-737.88835));
      double double0 = eulerIntegrator0.getCurrentSignedStepsize();
      assertEquals(Double.NaN, eulerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-503.74759167561), (-503.74759167561), (-503.74759167561), (-503.74759167561));
      StepProblem stepProblem0 = new StepProblem(2195.14, 3208.25331687, 2195.14);
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1826.61857), doubleArray0, (-503.74759167561), doubleArray0);
      assertArrayEquals(new double[] {2903886.999359001}, doubleArray0, 0.01);
      
      int int0 = graggBulirschStoerIntegrator0.getEvaluations();
      assertEquals(29, int0);
  }
}
