/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 20:28:07 GMT 2017
 */

package org.apache.commons.math3.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.TestProblem5;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math3.ode.nonstiff.EulerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math3.ode.nonstiff.MidpointIntegrator;
import org.apache.commons.math3.ode.nonstiff.StepProblem;
import org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractIntegrator_ESTest extends AbstractIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(5935.439, 171.78299972, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray1 = new double[2];
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 171.78299972, doubleArray0, 5935.439, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 2
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-106.0);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), (-106.0), doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(0.0, 1063.5, (-106.0));
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1596.2), doubleArray0, 650.9630102, doubleArray0);
      dormandPrince54Integrator0.computeDerivatives((-106.0), doubleArray0, doubleArray0);
      assertEquals(0.2, dormandPrince54Integrator0.getMinReduction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-106.0);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), 82.728429, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(0.0, 1063.5, (-5096.2329894));
      double double0 = dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-5096.2329894), doubleArray0, (-2314.462350229758), doubleArray0);
      assertArrayEquals(new double[] {(-106.0)}, doubleArray0, 0.01);
      assertEquals((-2314.462350229758), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6353566646575928, 0.6353566646575928, 0.6353566646575928, 0.6353566646575928);
      graggBulirschStoerIntegrator0.setMaxEvaluations(0);
      int int0 = graggBulirschStoerIntegrator0.getMaxEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-116.9229));
      TestProblem5 testProblem5_0 = new TestProblem5();
      midpointIntegrator0.integrate((FirstOrderDifferentialEquations) testProblem5_0, 4045.02379251, doubleArray0, (double) 3057, doubleArray0);
      assertEquals(18, testProblem5_0.getCalls());
      
      int int0 = midpointIntegrator0.getEvaluations();
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(-0.0, -0.0, doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.getCurrentSignedStepsize();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-106.0);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), 82.728429, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(0.0, 1063.5, 82.728429);
      dormandPrince54Integrator0.addEventHandler((EventHandler) stepProblem0, 650.9630102, 82.728429, 1);
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1596.2), doubleArray0, 650.9630102, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), 82.728429, doubleArray0, doubleArray0);
      dormandPrince54Integrator0.setMaxEvaluations(1);
      StepProblem stepProblem0 = new StepProblem(0.0, 1063.5, (-5096.2329894));
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (double) Integer.MAX_VALUE, doubleArray0, 650.9630102, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), 82.728429, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(0.0, 1063.5, (-5096.2329894));
      dormandPrince54Integrator0.addEventHandler((EventHandler) stepProblem0, 650.9630102, 82.728429, Integer.MAX_VALUE);
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1596.2), doubleArray0, 650.9630102, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-1,596.2, \uFFFD], values: [3,500.033, \uFFFD]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0, 1.0, 1.0, 0.0);
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) null, (-2105.847434), doubleArray0, 97.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      StepProblem stepProblem0 = new StepProblem((-918.9), (-918.9), (-918.9));
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 94326.0, doubleArray0, doubleArray0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      try { 
        highamHall54Integrator0.integrate(expandableStatefulODE0, (-1501.5661074422896));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 3
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-78.85175491), 0.0, (-78.85175491), 0.0);
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1121.5983764, (FixedStepHandler) null, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) testProblem5_0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1949.4683237337658);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.sampling.StepNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-31.139403219565178), (-1247.1179), (-901.3823751705721), (-1247.1179));
      highamHall54Integrator0.setMaxEvaluations((-452));
      assertEquals(197.06472832660177, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(0.0);
      StepProblem stepProblem0 = new StepProblem(0.0, (-9.194632392478356), 3992.87184005378);
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(1000.0);
      threeEighthesIntegrator0.addEventHandler((EventHandler) stepProblem0, (-9.194632392478356), (-1430.96), 0, (UnivariateSolver) mullerSolver2_0);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), (-106.0), doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.computeDerivatives((-106.0), doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator(8.537829238438662E-288);
      StepProblem stepProblem0 = new StepProblem((-2241.1509), 8.537829238438662E-288, (-2280.515496374));
      double[] doubleArray0 = new double[1];
      try { 
        eulerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-2366.59), doubleArray0, (-2366.59), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(436.6502715, 436.6502715, 436.6502715, 436.6502715);
      StepProblem stepProblem0 = new StepProblem(5031.869697793352, 0.0, 436.6502715);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) stepProblem0);
      expandableStatefulODE0.setTime(5031.869697793352);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1034.5);
      assertEquals(1034.5, expandableStatefulODE0.getTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-106.0);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), 82.728429, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem((-0.08041192207330436), 1063.5, 82.728429);
      dormandPrince54Integrator0.addEventHandler((EventHandler) stepProblem0, 643.3311350726229, 82.728429, Integer.MAX_VALUE);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      dormandPrince54Integrator0.addStepHandler(dummyStepHandler0);
      double double0 = dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1596.2), doubleArray0, 643.3311350726229, doubleArray0);
      assertArrayEquals(new double[] {577874.4619832716}, doubleArray0, 0.01);
      assertEquals(643.3311350726229, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6353566646575928, 0.6353566646575928, 0.6353566646575928, 0.6353566646575928);
      StepProblem stepProblem0 = new StepProblem(2051.4332013420308, 0.6353566646575928, (double) 0);
      double[] doubleArray0 = new double[9];
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1.0), doubleArray0, 923.80035236927, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 9 != 1
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 0.0, 570.0, 1000.0);
      dormandPrince853Integrator0.setMaxEvaluations(0);
      double[] doubleArray0 = new double[7];
      try { 
        dormandPrince853Integrator0.computeDerivatives(176.5031507496009, doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), (-106.0), doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(0.0, 1063.5, (-106.0));
      dormandPrince54Integrator0.addEventHandler((EventHandler) stepProblem0, 650.9630102, (-106.0), Integer.MAX_VALUE);
      Collection<EventHandler> collection0 = dormandPrince54Integrator0.getEventHandlers();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-116.9229));
      midpointIntegrator0.clearEventHandlers();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((double) 0, (double) 0, (double) 0, 1036.33768491);
      String string0 = graggBulirschStoerIntegrator0.getName();
      assertEquals("Gragg-Bulirsch-Stoer", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator((-1560.6));
      eulerIntegrator0.getStepHandlers();
      assertEquals(Double.NaN, eulerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, eulerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-116.9229));
      double double0 = midpointIntegrator0.getCurrentStepStart();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), (-106.0), (-106.0), (-106.0));
      int int0 = dormandPrince54Integrator0.getMaxEvaluations();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-116.9229));
      midpointIntegrator0.getEvaluations();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-106.0), 82.728429, (-106.0), 0.0);
      double double0 = dormandPrince853Integrator0.getCurrentSignedStepsize();
      assertEquals(93.64407869160762, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-116.9229));
      midpointIntegrator0.clearStepHandlers();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-106.0), (-106.0), (-106.0), (-106.0));
      StepProblem stepProblem0 = new StepProblem((-0.08041192207330436), 1063.5, (-106.0));
      dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, 2606.0, doubleArray0, 0.0, doubleArray0);
      double double0 = dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) stepProblem0, (-1596.2), doubleArray0, 633.6003775948448, doubleArray0);
      assertArrayEquals(new double[] {30.25093472084988}, doubleArray0, 0.01);
      assertEquals(633.6003775948448, double0, 0.01);
  }
}
